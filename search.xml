<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PHP 多进程定时任务</title>
      <link href="/2020/12/17/PHP-%E5%A4%9A%E8%BF%9B%E7%A8%8B%E4%BB%BB%E5%8A%A1/"/>
      <url>/2020/12/17/PHP-%E5%A4%9A%E8%BF%9B%E7%A8%8B%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>PHP 实现多进程的方式很多，PHP 的扩展 pcntl 与 posix 双剑客。Workerman 也是的多进程也是基于这二个双剑客去实现滴，当然更为强大的 Swoole 就不需要它们了。最近项目有个需求，多进程定时去执行某一个任务，要求是精确到秒，定时任务写的还是比较多，首先想到的是 Crontab 虽然只能精确到分，但是利用 shell 脚本也可以实现秒级别的定时执行，但是想了下还需要多任务就算了吧，最终还是选定了 Supervisor 来实现多进程，关于 Laravel 如何实现定时任务，<a href="https://daixianjin.github.io/2019/10/24/Laravel-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/">点我跳转</a>。</p><h3 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h3><h3 id="Supervisor"><a href="#Supervisor" class="headerlink" title="Supervisor"></a>Supervisor</h3><p>关于 Supervisor 是什么也不过多介绍了，<a href="https://www.restran.net/2015/10/04/supervisord-tutorial/" target="_blank" rel="noopener">点我跳转</a>，有详细的说明，对于 Supervisor 不是很熟悉也看下这篇文章熟悉熟悉，也可以<a href="https://daixianjin.github.io/2020/06/02/Laravel-%E9%98%9F%E5%88%97/#toc-heading-5">点我跳转</a>，也有介绍 Supervisor 的使用与一些需要注意的地方。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">[</span>program<span class="token punctuation">:</span>task<span class="token punctuation">]</span>process_name=%(program_name)s_%(process_num)02dcommand=/usr/bin/php /app/artisan batch<span class="token punctuation">:</span>store <span class="token punctuation">-</span><span class="token punctuation">-</span>id=%(process_num)02d <span class="token punctuation">-</span><span class="token punctuation">-</span>max=1autostart=trueautorestart=trueuser=rootnumprocs=8 <span class="token comment" spellcheck="true"># 进程数量</span>redirect_stderr=truestdout_logfile=/etc/supervisor/store.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>就这么简单，一个多进程的任务就算创建完成了，是不是非常简单。创建一个多进程的任务就是这么简单，但是如何管理好进程就是一件非常考人的问题了。我这里选择使用的 Redis 锁来管理进程。另外有个特别的注意点，那就是 Supervisor 的一个参数：startsecs 在启动后多少秒没有异常退出就表示正常的启动，默认为 1 秒。简单点来说，启动之后如果 1 秒都没到就退出执行了那么就表示异常，此时 Supervisor 就是报错，启动的 Supervisor 主进程就会挂逼。</p><p>在使用到了进程想一个问题，PHP 代码执行不到 1 秒就完成了退出了那么此时就是错误，还有进程它们是并行去执行 PHP 脚本，如果处理的数据并发有要求，那么肯定不可能同一时间就放所有进程去跑 PHP 脚本。Laravel 的队列也是使用到了锁，当这个进程去跑特定的一个队列时，第二个进程也进来了，此时这个进程获取不到锁，那么就进不去核心业务逻辑的代码，就马上会退出，其速度估计毫秒或者微妙之间就完成了，但是 Supervisor 的 startsecs 默认是 1 秒，1 秒都没有它就认为异常了，那么主进程就挂逼了，所以有个 sleep 的机制。这也是为啥说 sleep 非常重要了。</p><p>这也是我最近写多进程并发跑脚本发现的一个问题，踩了不少坑，如果有人也遇到这个问题了，可以看看 startsecs  这个参数的含义。多进程并发执行脚本，不依赖 PHP 的多进程扩展，依赖 Supervisor 来完成操作。</p><h3 id="Redis-锁"><a href="#Redis-锁" class="headerlink" title="Redis 锁"></a>Redis 锁</h3><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Services</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Redis</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">LockService</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * Redis     * */</span>    <span class="token keyword">protected</span> <span class="token variable">$redis</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Token     * */</span>    <span class="token keyword">protected</span> <span class="token variable">$token</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * prefix     */</span>    <span class="token keyword">protected</span> <span class="token variable">$prefix</span> <span class="token operator">=</span> <span class="token string">'redis-lock-'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * value     * */</span>    <span class="token keyword">protected</span> <span class="token keyword">const</span> <span class="token constant">VALUE</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 服务初始化,单机锁     * @param Redis|null $redis     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span>Redis <span class="token variable">$redis</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">redis</span> <span class="token operator">=</span> <span class="token variable">$redis</span> <span class="token operator">?</span><span class="token punctuation">:</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">createRedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 创建 Redis 实例     *     * @return Redis     */</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">createRedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> Redis    <span class="token punctuation">{</span>        <span class="token variable">$redis</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Redis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$redis</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token string">'database.redis.default.host'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string">'database.redis.default.port'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$redis</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token string">'database.redis.default.password'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$redis</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 加锁     *     * @param string $key     * @param int $ttl     * @param int $retry     * @return bool     */</span>    <span class="token keyword">public</span>  <span class="token keyword">function</span> <span class="token function">lock</span><span class="token punctuation">(</span>string <span class="token variable">$key</span><span class="token punctuation">,</span>int <span class="token variable">$ttl</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>int <span class="token variable">$retry</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> bool    <span class="token punctuation">{</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">redis</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">set</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">prefix</span> <span class="token punctuation">.</span> <span class="token variable">$key</span><span class="token punctuation">,</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">VALUE</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'NX'</span><span class="token punctuation">,</span> <span class="token string">'EX'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$ttl</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">redis</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">ttl</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">prefix</span> <span class="token punctuation">.</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 以防出现死锁</span>                <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">redis</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">expire</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">prefix</span> <span class="token punctuation">.</span> <span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$ttl</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$retry</span><span class="token operator">--</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 解锁     *     * @param string $key     *     * @return bool     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">unlock</span><span class="token punctuation">(</span>string <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> bool    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">redis</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">prefix</span> <span class="token punctuation">.</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">redis</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">multi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">redis</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">del</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">prefix</span> <span class="token punctuation">.</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">redis</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="开始任务"><a href="#开始任务" class="headerlink" title="开始任务"></a>开始任务</h3><p>任务模板自定义，因为使用了 Laravel 那么就使用 Laravel 的 command 来创建任务的模板。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Console<span class="token punctuation">\</span>Commands</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Console<span class="token punctuation">\</span>Command</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>MultiProgressService</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">BatchSearchTask</span> <span class="token keyword">extends</span> <span class="token class-name">Command</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * The name and signature of the console command.     *     * @var string     */</span>    <span class="token keyword">protected</span> <span class="token variable">$signature</span> <span class="token operator">=</span> 'batch<span class="token punctuation">:</span>search        <span class="token punctuation">{</span><span class="token operator">--</span>id<span class="token operator">=</span>      <span class="token punctuation">:</span> 当前编号<span class="token punctuation">}</span>        <span class="token punctuation">{</span><span class="token operator">--</span>max<span class="token operator">=</span>     <span class="token punctuation">:</span> 最大线程<span class="token punctuation">}</span>        '<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * The console command description.     *     * @var string     */</span>    <span class="token keyword">protected</span> <span class="token variable">$description</span> <span class="token operator">=</span> <span class="token string">'batch mode data search'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Create a new command instance.     *     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">parent</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * Execute the console command.     *     * @return mixed     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 初始化进程</span>        <span class="token variable">$service</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MultiProgressService</span><span class="token punctuation">(</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token number">00</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">'max'</span><span class="token punctuation">)</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token number">8</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 开始任务</span>        <span class="token variable">$service</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">start</span><span class="token punctuation">(</span><span class="token string">'search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="处理任务"><a href="#处理任务" class="headerlink" title="处理任务"></a>处理任务</h3><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Services</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Carbon<span class="token punctuation">\</span>Carbon</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Webpatser<span class="token punctuation">\</span>Uuid<span class="token punctuation">\</span>Uuid</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Support<span class="token punctuation">\</span>Facades<span class="token punctuation">\</span>DB</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Support<span class="token punctuation">\</span>Facades<span class="token punctuation">\</span>Log</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Facades<span class="token punctuation">\</span>UserBatchSearchNumber</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Facades<span class="token punctuation">\</span>UserBatchSearchRecording</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Services<span class="token punctuation">\</span>V1<span class="token punctuation">\</span>Front<span class="token punctuation">\</span>SingleModeService</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MultiProgressService</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 任务编号     *     * @var int     */</span>    <span class="token keyword">protected</span> <span class="token variable">$id</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 最大进程     *     * @var int     */</span>    <span class="token keyword">protected</span> <span class="token variable">$max</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 单次服务     * */</span>    <span class="token keyword">protected</span> <span class="token variable">$single</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 锁服务     * */</span>    <span class="token keyword">protected</span> <span class="token variable">$lock</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 初始化服务     *     * @param int $id     * @param int $max     * */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span>int <span class="token variable">$id</span><span class="token punctuation">,</span>int <span class="token variable">$max</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">id</span> <span class="token operator">=</span> <span class="token variable">$id</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">max</span> <span class="token operator">=</span> <span class="token variable">$max</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">lock</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LockService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">single</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingleModeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 开始任务     * @param string $drive     * @param int $ttl     * @return bool     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span>string <span class="token variable">$drive</span> <span class="token operator">=</span> <span class="token string">'store'</span><span class="token punctuation">,</span><span class="token variable">$ttl</span> <span class="token operator">=</span> <span class="token number">600</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> bool    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 超过规定的进程数不做任何处理就返回</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">id</span> <span class="token operator">>=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// sleep 1 秒，因为 Supervisor 的 startsecs 默认就是一秒</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>          <span class="token comment" spellcheck="true">// 记录当前进程与驱动，作为 Key</span>        <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string">'task:%03d:%s'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">id</span><span class="token punctuation">,</span> <span class="token variable">$drive</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 加锁成功进入逻辑执行</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">lock</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$ttl</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                              <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">lock</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 执行完之后解锁</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token punctuation">\</span>Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Log<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token string">'task'</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token variable">$drive</span><span class="token punctuation">,</span><span class="token punctuation">[</span>                <span class="token string">'line'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">'message'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">'code'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">'file'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">'progress_id'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">id</span><span class="token punctuation">,</span>                <span class="token string">'max_progress_number'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">max</span><span class="token punctuation">,</span>                <span class="token string">'lock_name'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$name</span><span class="token punctuation">,</span>                <span class="token string">'is_unlock'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">lock</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 悲观的情况下,因为 Supervisor 执行延时最低 1 秒需要验证进程是否还在运行，如果不是在运行那么会 Error，锁定 1 秒钟。</span>        <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>…未完待续</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWS 奇妙之旅</title>
      <link href="/2020/12/04/AWS-%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/"/>
      <url>/2020/12/04/AWS-%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>AWS 不用过多的介绍，也是现目前世界云计算机行业老大，比阿里占有率还要高一些。当然我相信不久的将来，世界第一肯定还是咱国家的，这是必然的无需去质疑什么！</p><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>公司项目比较大型，并且水平也比较高端。对于一些服务上，架构师给出了一套，Lambda 函数与其它服务（如：s3，sqs 等等）触发机制。这套服务架构，依赖于 AWS 的 Lambad 与其它各式的服务，互相搭配操作（Lambda 是什么呢？<a href="https://docs.aws.amazon.com/zh_cn/lambda/latest/dg/welcome.html" target="_blank" rel="noopener">点击我马上明白！</a>）使用这样架构的好处在于，对于一些高消耗的功能可以单独做一个处理，而无需在走本身的后台去操作，切扩展性与灵活性比较高。但是有一个缺点，开一个 Lambda 肯定是要钱的嘛（项目做起来服务器的钱肯定不会缺的！）我觉得只有这么一个缺点，其他问题都可以我们自己摸索学习去解决。</p><h3 id="Lambda"><a href="#Lambda" class="headerlink" title="Lambda"></a>Lambda</h3><p>最新的一个需求通过 S3 触发一个 Lambda 函数，Lambda 函数中做一些核心的处理。在这里做一个演示的示例：</p><p>进入 Lambda 创建一个函数</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/85L4jW.png" alt></p><p>就一个注意点，创建时选择自己要操作的语言即可，其他默认操作。</p><p>![](/Users/daixianjin/Library/Application Support/typora-user-images/image-20201204153601091.png)</p><p>进入函数的配置，添加触发器，注意选择函数搭配的服务来定。</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/C6eltK.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/Xhm0j6.png" alt></p><p>如相当于的服务有事件，那么需要去设置自己需要的事件，我这里拿 s3 举例说明。</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/wposhX.png" alt></p><p>进入存储桶，选择属性，然后会看见，刚才 Lambda 绑定的触发，而我们只需要修改自己需要的事件即可。</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/45YNMB.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/mtSLMV.png" alt></p><p>完整的一个 Lambda 与 服务之间的互动就是如此，但是需要记住一个问题，你的 Lambda 与 服务如果不在一个账号里面，那么就需要使用 VPC 的一个操作（具体如何我也不清楚，非常难，他们操作成功过，以后问了我会更新多个账号互联的一个操作）当操作完成之后就是开始撸代码了，这个看个人使用的语言，<a href="https://docs.aws.amazon.com/zh_cn/lambda/latest/dg/lambda-golang.html" target="_blank" rel="noopener">最好还是先看文档</a>。</p><p>我这里使用的 Go </p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"context"</span>    <span class="token string">"encoding/json"</span>    <span class="token string">"fmt"</span>    <span class="token string">"github.com/aws/aws-lambda-go/events"</span>    <span class="token string">"github.com/aws/aws-lambda-go/lambda"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    lambda<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span>Handler<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">Handler</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> event events<span class="token punctuation">.</span>S3Event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    res<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译时注意：编译好了在打包成 zip 上传到 Lambda</p><pre class="line-numbers language-bash"><code class="language-bash">GOARCH<span class="token operator">=</span>amd64 GOOS<span class="token operator">=</span>linux go build main.go<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 8</title>
      <link href="/2020/11/27/PHP-8/"/>
      <url>/2020/11/27/PHP-8/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>2020 年 11 月 26 日，PHP 8 版本正式发布了，比计划发布的时间提前了一周，给开发组人员点赞！PHP 8 让 PHP 更加伟大！生命不息，研发不止，生命不息，学习不止！</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/55iQjC.png" alt></p><h3 id="新特性"><a href="#新特性" class="headerlink" title="新特性"></a>新特性</h3><p>…未完待续</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang-日期时间详解</title>
      <link href="/2020/11/12/Golang-%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E8%AF%A6%E8%A7%A3/"/>
      <url>/2020/11/12/Golang-%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="基本了解"><a href="#基本了解" class="headerlink" title="基本了解"></a>基本了解</h3><p>在 PHP 当中平时关于时间的处理，不二话 Carbon 绝对是最好用的包，没有之一。有个转 Go 的哥们自己动手撸了个跟 PHP Carbon 一样使用的 Go 版本的 <a href="https://github.com/golang-module/carbon" target="_blank" rel="noopener">Carbon</a> 包，也是非常👍。</p><h4 id="time-Now-获取当前时间"><a href="#time-Now-获取当前时间" class="headerlink" title="time.Now - 获取当前时间"></a>time.Now - 获取当前时间</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    t <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// time 也是一个数据类型</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"当前时间：%v,数据类型是：%T"</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 当前时间：2020-11-12 21:30:58.701252 +0800 CST m=+0.000096590,数据类型是：time.Time</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    t <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"年：%v\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Year</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"月：%v\n"</span><span class="token punctuation">,</span> <span class="token function">int</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">Month</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"日：%v\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Day</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"时：%v\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Hour</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"分：%v\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Minute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"秒：%v\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 年：2020</span><span class="token comment" spellcheck="true">// 月：11</span><span class="token comment" spellcheck="true">// 日：12</span><span class="token comment" spellcheck="true">// 时：21</span><span class="token comment" spellcheck="true">// 分：36</span><span class="token comment" spellcheck="true">// 秒：40</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="time-Fomat-指定输出格式"><a href="#time-Fomat-指定输出格式" class="headerlink" title="time.Fomat - 指定输出格式"></a>time.Fomat - 指定输出格式</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    t <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 格式只能是下面的格式，符合可变，数字不可变</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"年月日 时分秒：%v\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"2006-01-02 15:04:05"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"年月日：%v\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"2006/01/02"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"时分秒：%v\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"15:04:05"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 年月日 时分秒：2020-11-12 21:42:40</span><span class="token comment" spellcheck="true">// 年月日：2020/11/12</span><span class="token comment" spellcheck="true">// 时分秒：21:42:40</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="时间常量"><a href="#时间常量" class="headerlink" title="时间常量"></a>时间常量</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">const</span> <span class="token punctuation">(</span>    Nanosecond  Duration <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment" spellcheck="true">// 纳秒</span>    Microsecond          <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">*</span> Nanosecond <span class="token comment" spellcheck="true">// 微妙</span>    Millisecond          <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">*</span> Microsecond <span class="token comment" spellcheck="true">// 毫秒</span>    Second               <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">*</span> Millisecond <span class="token comment" spellcheck="true">// 秒</span>    Minute               <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> Second                <span class="token comment" spellcheck="true">// 分</span>    Hour                 <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> Minute                <span class="token comment" spellcheck="true">// 时</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="time-Sleep-休眠"><a href="#time-Sleep-休眠" class="headerlink" title="time.Sleep - 休眠"></a>time.Sleep - 休眠</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"我要开始了 \n"</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"结束了"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 我要开始了 </span><span class="token comment" spellcheck="true">// 这里延时了一秒</span><span class="token comment" spellcheck="true">// 结束了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="time-Unix-1970-开始到-t-的所有时间（秒）"><a href="#time-Unix-1970-开始到-t-的所有时间（秒）" class="headerlink" title="time.Unix - 1970 - 开始到 t 的所有时间（秒）"></a>time.Unix - 1970 - 开始到 t 的所有时间（秒）</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    t <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"到今天的秒:%v\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 1605189874</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="time-UnixNano-开始到-t-的所有时间（纳秒）"><a href="#time-UnixNano-开始到-t-的所有时间（纳秒）" class="headerlink" title="time.UnixNano -  开始到 t 的所有时间（纳秒）"></a>time.UnixNano -  开始到 t 的所有时间（纳秒）</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    t <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"到今天的纳秒:%v\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">UnixNano</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 到今天的纳秒:1605189904516758000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Golang-学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang-字符串函数详解</title>
      <link href="/2020/11/12/Golang-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0%E8%AF%A6%E8%A7%A3/"/>
      <url>/2020/11/12/Golang-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="基本了解"><a href="#基本了解" class="headerlink" title="基本了解"></a>基本了解</h3><p>跟 PHP 一样，Go 也为我们准备了很多系统函数，把我们常使用的功能都已经给我封装好了，非常的利于我们开发。下面介绍的都是属于开发中常用的字符串函数。</p><h4 id="len-字符串长度"><a href="#len-字符串长度" class="headerlink" title="len - 字符串长度"></a>len - 字符串长度</h4><p>统计字符串长度和数组长度，按字节，注意 Go 的编码统一为 utf-8 ascii 码的字符（字母和数字）占一个字节，汉字占用 3 个字节。</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    arr <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>    str <span class="token operator">:=</span> <span class="token string">"123你"</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"长度为多少个字节：%v\n"</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"长度为多少：%v\n"</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 长度为多少个字节：6</span><span class="token comment" spellcheck="true">// 长度为多少：4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="rune-遍历字符串"><a href="#rune-遍历字符串" class="headerlink" title="[]rune - 遍历字符串"></a>[]rune - 遍历字符串</h4><p>字符串遍历，同时处理有中文的问题，其实也就是一个切片。</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"9527周星驰"</span>    r <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"输出字符串:%c\n"</span><span class="token punctuation">,</span> r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 输出字符串:9</span><span class="token comment" spellcheck="true">// 输出字符串:5</span><span class="token comment" spellcheck="true">// 输出字符串:2</span><span class="token comment" spellcheck="true">// 输出字符串:7</span><span class="token comment" spellcheck="true">// 输出字符串:周</span><span class="token comment" spellcheck="true">// 输出字符串:星</span><span class="token comment" spellcheck="true">// 输出字符串:驰</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strconv-Atoi-字符串转整数"><a href="#strconv-Atoi-字符串转整数" class="headerlink" title="strconv.Atoi - 字符串转整数"></a>strconv.Atoi - 字符串转整数</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    n<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"转换错误：%v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"转换成功：%v,类型是：%T"</span><span class="token punctuation">,</span> n<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 转换成功：123,类型是：int</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strconv-Itoa-整数转字符串"><a href="#strconv-Itoa-整数转字符串" class="headerlink" title="strconv.Itoa - 整数转字符串"></a>strconv.Itoa - 整数转字符串</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    n <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"转换成功：%v,类型是：%T"</span><span class="token punctuation">,</span> n<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 转换成功：123,类型是：string</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="byte-字符串转-ascii"><a href="#byte-字符串转-ascii" class="headerlink" title="[]byte - 字符串转 ascii"></a>[]byte - 字符串转 ascii</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    n <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">"123 "</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"转换成功：%v"</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 转换成功：[49 50 51 32]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="byte-ascii-转字符串。"><a href="#byte-ascii-转字符串。" class="headerlink" title="[]byte - ascii 转字符串。"></a>[]byte - ascii 转字符串。</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    n <span class="token operator">:=</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"转换成功：%v"</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 转换成功：NMLK</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strconv-ForamInt-10-进制转-2，8，16-进制"><a href="#strconv-ForamInt-10-进制转-2，8，16-进制" class="headerlink" title="strconv.ForamInt - 10 进制转 2，8，16 进制"></a>strconv.ForamInt - 10 进制转 2，8，16 进制</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    n <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"1 转换成 2 进制 = %v\n"</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>    n1 <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"1 转换成 8 进制 = %v\n"</span><span class="token punctuation">,</span> n1<span class="token punctuation">)</span>    n2 <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"1 转换成 16 进制 = %v\n"</span><span class="token punctuation">,</span> n2<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 1 转换成 2 进制 = 1</span><span class="token comment" spellcheck="true">// 1 转换成 8 进制 = 1</span><span class="token comment" spellcheck="true">// 1 转换成 16 进制 = 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-Contains-字符串查找"><a href="#strings-Contains-字符串查找" class="headerlink" title="strings.Contains - 字符串查找"></a>strings.Contains - 字符串查找</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"你好世界呀，zhouxingchi"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">"zhou"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"是否查找到字符串：%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 是否查找到字符串：true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-Count-查找字符串出现的次数"><a href="#strings-Count-查找字符串出现的次数" class="headerlink" title="strings.Count - 查找字符串出现的次数"></a>strings.Count - 查找字符串出现的次数</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"你好世界呀，zhouxingchi"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">"i"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"字符串出现的次数：%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 字符串出现的次数：2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="srings-EquelFold-字符串比较（不区分大小写）"><a href="#srings-EquelFold-字符串比较（不区分大小写）" class="headerlink" title="srings.EquelFold - 字符串比较（不区分大小写）"></a>srings.EquelFold - 字符串比较（不区分大小写）</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"abc"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">EqualFold</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">"ABC"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"它们是否相等：%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 它们是否相等：true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-Index-查询字符串第一次出现的下标"><a href="#strings-Index-查询字符串第一次出现的下标" class="headerlink" title="strings.Index - 查询字符串第一次出现的下标"></a>strings.Index - 查询字符串第一次出现的下标</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"你好世界呀，zhouxingchi"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">"世"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"字符串下标：%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 字符串下标：6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-LastIndex-查询字符串最后出现的下标"><a href="#strings-LastIndex-查询字符串最后出现的下标" class="headerlink" title="strings.LastIndex - 查询字符串最后出现的下标"></a>strings.LastIndex - 查询字符串最后出现的下标</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"golang"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">LastIndex</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">"g"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"字符串下标：%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 字符串下标：5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-Replace-字符串替换"><a href="#strings-Replace-字符串替换" class="headerlink" title="strings.Replace - 字符串替换"></a>strings.Replace - 字符串替换</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"go golang"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">"go"</span><span class="token punctuation">,</span> <span class="token string">"php"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// -1 表示全部替换</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"替换后的结果：%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 替换后的结果：php golang</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-Split-字符串转数组"><a href="#strings-Split-字符串转数组" class="headerlink" title="strings.Split - 字符串转数组"></a>strings.Split - 字符串转数组</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"go golang"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">" "</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"转换后的结果：%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 转换后的结果：[go golang]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-Tolower-字符串转小写"><a href="#strings-Tolower-字符串转小写" class="headerlink" title="strings.Tolower - 字符串转小写"></a>strings.Tolower - 字符串转小写</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"Go golang"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">ToLower</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"替换后的结果：%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 转换后的结果：go golang</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-Upper-字符串转大写"><a href="#strings-Upper-字符串转大写" class="headerlink" title="strings.Upper - 字符串转大写"></a>strings.Upper - 字符串转大写</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"Go golang"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">ToUpper</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"转换后的结果：%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 转换后的结果：GO GOLANG</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-TrimSpace-去除首尾空格"><a href="#strings-TrimSpace-去除首尾空格" class="headerlink" title="strings.TrimSpace - 去除首尾空格"></a>strings.TrimSpace - 去除首尾空格</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">" golang "</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">TrimSpace</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"去除后的结果:%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 去除后的结果:golang</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-Trim-去除首尾指定字符"><a href="#strings-Trim-去除首尾指定字符" class="headerlink" title="strings.Trim - 去除首尾指定字符"></a>strings.Trim - 去除首尾指定字符</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"golang"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">"g"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"去除后的结果:%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 去除后的结果:olan</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-TrimLeft-去除首指定字符"><a href="#strings-TrimLeft-去除首指定字符" class="headerlink" title="strings.TrimLeft - 去除首指定字符"></a>strings.TrimLeft - 去除首指定字符</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"golang"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">TrimLeft</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">"g"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"去除后的结果:%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 去除后的结果:olang</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-TrimRight-去除尾指定字符"><a href="#strings-TrimRight-去除尾指定字符" class="headerlink" title="strings.TrimRight - 去除尾指定字符"></a>strings.TrimRight - 去除尾指定字符</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"golang"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">TrimRight</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">"g"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"去除后的结果:%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 去除后的结果:golan</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-HasSuffix-判断字符是否是指定字符串结尾"><a href="#strings-HasSuffix-判断字符是否是指定字符串结尾" class="headerlink" title="strings.HasSuffix - 判断字符是否是指定字符串结尾"></a>strings.HasSuffix - 判断字符是否是指定字符串结尾</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"golang.jpg"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">HasSuffix</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">".jpg"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"是否是指定字符串结尾:%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 是否是指定字符串结尾:true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="strings-HasPrefix-判断字符是否是指定字符串开头"><a href="#strings-HasPrefix-判断字符是否是指定字符串开头" class="headerlink" title="strings.HasPrefix - 判断字符是否是指定字符串开头"></a>strings.HasPrefix - 判断字符是否是指定字符串开头</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"golang.jpg"</span>    b <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">"g"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"是否是指定字符串开头:%v"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 是否是指定字符串开头:true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Golang-学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优雅的使用 CURL 测试接口</title>
      <link href="/2020/11/10/%E4%BC%98%E9%9B%85%E7%9A%84%E4%BD%BF%E7%94%A8-CURL-%E6%B5%8B%E8%AF%95%E6%8E%A5%E5%8F%A3/"/>
      <url>/2020/11/10/%E4%BC%98%E9%9B%85%E7%9A%84%E4%BD%BF%E7%94%A8-CURL-%E6%B5%8B%E8%AF%95%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>在我们对一个接口测试时候，比较在乎这个接口的响应时间，因为众所周知 PHP 是单线程操作，虽然 FPM 可以进行多进程，但是如果一个 CURL 阻塞了，那么在跑的那个 FPM work 进程也就阻塞了，必须等待它执行完成之后才会去执行下一个任务，所以一个项目当中 CURL 阻塞其实是一个很严重的问题。在这里我有一点不是很清楚，Guzzle 的异步请求，是否阻塞 FPM ？非常疑惑，因为也需要 wait 阻塞等待执行完成。</p><h3 id="PHP-CURL-获取详细"><a href="#PHP-CURL-获取详细" class="headerlink" title="PHP CURL 获取详细"></a>PHP CURL 获取详细</h3><p>PHP 官方给我们提供了一个函数，curl_getinfo 获取一个cURL连接资源句柄的信息。</p><pre class="line-numbers language-yaml"><code class="language-yaml">curl_getinfo ( resource $ch <span class="token punctuation">[</span><span class="token punctuation">,</span> int $opt = 0 <span class="token punctuation">]</span> ) <span class="token punctuation">:</span> <span class="token punctuation">[</span>mixed<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数：</p><p>ch 由 <a href="https://www.php.net/manual/zh/function.curl-init.php" target="_blank" rel="noopener">curl_init()</a> 返回的 cURL 句柄。</p><p>opt 这个参数可能是以下常量之一：</p><ul><li><strong><code>CURLINFO_EFFECTIVE_URL</code></strong> - 最后一个有效的URL地址</li><li><strong><code>CURLINFO_HTTP_CODE</code></strong> - 最后一个收到的HTTP代码</li><li><strong><code>CURLINFO_FILETIME</code></strong> - 远程获取文档的时间，如果无法获取，则返回值为“-1”</li><li><strong><code>CURLINFO_TOTAL_TIME</code></strong> - 最后一次传输所消耗的时间</li><li><strong><code>CURLINFO_NAMELOOKUP_TIME</code></strong> - 名称解析所消耗的时间</li><li><strong><code>CURLINFO_CONNECT_TIME</code></strong> - 建立连接所消耗的时间</li><li><strong><code>CURLINFO_PRETRANSFER_TIME</code></strong> - 从建立连接到准备传输所使用的时间</li><li><strong><code>CURLINFO_STARTTRANSFER_TIME</code></strong> - 从建立连接到传输开始所使用的时间</li><li><strong><code>CURLINFO_REDIRECT_TIME</code></strong> - 在事务传输开始前重定向所使用的时间</li><li><strong><code>CURLINFO_SIZE_UPLOAD</code></strong> - 以字节为单位返回上传数据量的总值</li><li><strong><code>CURLINFO_SIZE_DOWNLOAD</code></strong> - 以字节为单位返回下载数据量的总值</li><li><strong><code>CURLINFO_SPEED_DOWNLOAD</code></strong> - 平均下载速度</li><li><strong><code>CURLINFO_SPEED_UPLOAD</code></strong> - 平均上传速度</li><li><strong><code>CURLINFO_HEADER_SIZE</code></strong> - header部分的大小</li><li><strong><code>CURLINFO_HEADER_OUT</code></strong> - 发送请求的字符串</li><li><strong><code>CURLINFO_REQUEST_SIZE</code></strong> - 在HTTP请求中有问题的请求的大小</li><li><strong><code>CURLINFO_SSL_VERIFYRESULT</code></strong> - 通过设置<strong><code>CURLOPT_SSL_VERIFYPEER</code></strong>返回的SSL证书验证请求的结果</li><li><strong><code>CURLINFO_CONTENT_LENGTH_DOWNLOAD</code></strong> - 从<code>Content-Length:</code> field中读取的下载内容长度</li><li><strong><code>CURLINFO_CONTENT_LENGTH_UPLOAD</code></strong> - 上传内容大小的说明</li><li><strong><code>CURLINFO_CONTENT_TYPE</code></strong> - 下载内容的<code>Content-Type:</code>值，NULL表示服务器没有发送有效的<code>Content-Type:</code> header</li></ul><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">// 创建一个cURL句柄</span><span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span>'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.yahoo.com/');</span><span class="token comment" spellcheck="true">// 执行</span><span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 检查是否有错误发生</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">curl_errno</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token variable">$info</span> <span class="token operator">=</span> <span class="token function">curl_getinfo</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token string">'Took '</span> <span class="token punctuation">.</span> <span class="token variable">$info</span><span class="token punctuation">[</span><span class="token string">'total_time'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">' seconds to send a request to '</span> <span class="token punctuation">.</span> <span class="token variable">$info</span><span class="token punctuation">[</span><span class="token string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// Close handle</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码中 curl_getinfo 返回的是一个关联数组，包含以下数据：</p><ul><li>url：网络地址。</li><li>content_type：内容编码。</li><li>http_code：HTTP 状态码。</li><li>header_size：header 的大小。</li><li><strong>request_size：请求的大小</strong>。</li><li>filetime：文件创建的时间。</li><li>ssl_verify_result：SSL 验证结果。</li><li>redirect_count:跳转计数。</li><li><strong>total_time：总耗时</strong>。</li><li><strong>namelookup_time：DNS 查询耗时</strong>。</li><li><strong>connect_time：等待连接耗时</strong>。</li><li><strong>pretransfer_time：传输前准备耗时</strong>。</li><li><strong>size_uplpad：上传数据的大小</strong>。</li><li>size_download：下载数据的大小。</li><li>speed_download：下载速度。</li><li>speed_upload：上传速度。</li><li>download_content_length：下载内容的长度。</li><li>upload_content_length:：传内容的长度。</li><li>starttransfer_time：开始传输的时间表。</li><li>redirect_time：重定向耗时。</li></ul><p>这么多返回信息，字体重的是重点注意的地方，尤其：总耗时、DNS 查询耗时、等待连接耗时、上传数据的大小。</p><ul><li>如果上传数据比较大可以采用 Expect: 100-continue HTTP/1.1 协议里设计 100 (Continue) HTTP 状态码的的目的是，在客户端发送 Request Message 之前，HTTP/1.1 协议允许客户端先判定服务器是否愿意接受客户端发来的消息主体（基于 Request Headers）。 即， 客户端 在 Post（较大）数据到服务端之前，允许双方“握手”，如果匹配上了，Client 才开始发送（较大）数据。  这么做的原因是，如果客户端直接发送请求数据，但是服务器又将该请求拒绝的话，这种行为将带来很大的资源开销。</li><li>如果 DNS 查询耗时很长，就得检查接口提供方与自己服务器之间是否存在网络上面的因素。</li><li>如果就是总耗时很长，那么就得需要优化接口了，当然真的很长，那么就得考虑异步或者采用别的方式去处理这个接口了，原则上是不能任由这个 CURL 阻塞我们的 FPM ，这是非常不好的一种情况。当然设置超时时间与连接超时时间是非常有必要的操作！</li></ul><h3 id="Linux-CURL-获取详细"><a href="#Linux-CURL-获取详细" class="headerlink" title="Linux CURL 获取详细"></a>Linux CURL 获取详细</h3><p>除了我们自身写 PHP 代码去获取这些信息，我们可以直接使用 Linux 提供的 CURL 去获取详细，当然我不推荐去记 CURL 的各种参数传参，这样其实没太大的必要，我们只需要简单去使用即可，推荐使用第三方工具来获取 CURL 的代码，这里我使用的 PostMan ，当然这样是这样类似的工具，基本都携带这样功能。</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/Czgtd1.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/NwTOvB.png" alt></p><pre class="line-numbers language-bash"><code class="language-bash">curl --location --request POST <span class="token string">'http://xxxxxxxx \--header '</span>Content-Type: application/json<span class="token string">' \--data-raw '</span><span class="token punctuation">{</span><span class="token string">"title"</span>:<span class="token punctuation">{</span><span class="token string">"text"</span>:<span class="token punctuation">{</span><span class="token string">"text_string"</span><span class="token keyword">:</span><span class="token string">"Example: Nike"</span><span class="token punctuation">}</span>,<span class="token string">"primary_class"</span><span class="token keyword">:</span><span class="token string">"000"</span>,<span class="token string">"goods_class"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"class"</span><span class="token keyword">:</span><span class="token string">"028"</span>,<span class="token string">"name"</span><span class="token keyword">:</span><span class="token string">"Shoes"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,<span class="token string">"descriptions"</span>:<span class="token punctuation">[</span><span class="token punctuation">]</span>,<span class="token string">"images"</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"image"</span>:<span class="token punctuation">{</span><span class="token string">"url"</span><span class="token keyword">:</span><span class="token string">"https://d184lx3qhrkc3e.cloudfront.net/spmvp/1604902363930.jpg"</span>,<span class="token string">"size"</span>:<span class="token punctuation">{</span><span class="token string">"width"</span>:130,<span class="token string">"height"</span>:110<span class="token punctuation">}</span>,<span class="token string">"aois"</span>:<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>上面的 CURL 代码是工具帮忙生成的，非常简洁与高效不需要我们再去记录关于 CURL 很多的参数与操作，而我们只需要记住几个参数即可。</p><ul><li>time_namelookup：解析时间</li><li>time_connect：连接时间</li><li>time_starttransfer：第一字节响应时间</li><li>time_total：所有字节响应时间</li></ul><p>测试百度用例：</p><pre class="line-numbers language-bash"><code class="language-bash">curl --location --request GET <span class="token string">'www.baidu.com'</span> \-w <span class="token string">'\n 解析时间： %{time_namelookup}\n 连接时间： %{time_connect}\n 第一字节响应时间： %{time_starttransfer}\n 所有字节响应时间：%{time_total}\n'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/Xmlf2M.png" alt></p><blockquote><p>总结：在遇到 CURL 非常耗时时，应当正确的选择处理方式（异步，修改接口逻辑，采用别的架构方式去实现），CURL 阻塞了，那么 FPM 的一个 work 也相当于阻塞了，这是对项目非常不好的一个地方，这也是我觉得应该注意的一个项目优化地方。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>缓存跨域验证</title>
      <link href="/2020/11/10/%E7%BC%93%E5%AD%98%E8%B7%A8%E5%9F%9F%E9%AA%8C%E8%AF%81/"/>
      <url>/2020/11/10/%E7%BC%93%E5%AD%98%E8%B7%A8%E5%9F%9F%E9%AA%8C%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>我们都知道在前后分离的项目当中都存在 CORS 的问题，在我们每次非简单请求时，都能发现前台访问后台接口发起了二次请求，一次 options 预请求，一次正常的请求。</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/vXk9ep.png" alt></p><h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3><p>其实这是一个正常的跨域操作，那么又不想每次都这样可以怎么做呢？ HTTP 已经给我们提供了一个报文参数，<code>Access-Control-Max-Age</code> 缓存机制， <strong><code>Access-Control-Max-Age</code></strong> 这个响应头表示 <a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Preflight_request" target="_blank" rel="noopener">preflight request</a> （预检请求）的返回结果（即 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods" target="_blank" rel="noopener"><code>Access-Control-Allow-Methods</code></a> 和<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Headers" target="_blank" rel="noopener"><code>Access-Control-Allow-Headers</code></a> 提供的信息） 可以被缓存多久。</p><p>返回结果可以被缓存的最长时间（秒）。</p><ul><li>在 Firefox 中，<a href="https://dxr.mozilla.org/mozilla-central/rev/7ae377917236b7e6111146aa9fb4c073c0efc7f4/netwerk/protocol/http/nsCORSListenerProxy.cpp#1131" target="_blank" rel="noopener">上限是24小时</a> （即 86400 秒）。</li><li>在 Chromium v76 之前， <a href="https://cs.chromium.org/chromium/src/services/network/public/cpp/cors/preflight_result.cc?l=36&rcl=52002151773d8cd9ffc5f557cd7cc880fddcae3e" target="_blank" rel="noopener">上限是 10 分钟</a>（即 600 秒)。</li><li>从 Chromium v76 开始，<a href="https://cs.chromium.org/chromium/src/services/network/public/cpp/cors/preflight_result.cc?l=31&rcl=49e7c0b4886cac1f3d09dc046bd528c9c811a0fa" target="_blank" rel="noopener">上限是 2 小时</a>（即 7200 秒)。</li><li>Chromium 同时规定了一个默认值 5 秒。</li><li>如果值为 <strong>-1</strong>，表示禁用缓存，则每次请求前都需要使用 OPTIONS 预检请求。</li><li>需要注意的是 Access-Control-Max-Age 的设置针对完全一样的 url，如果 url 加上路径参数，其中一个 url 的Access-Control-Max-Age 设置对另一个 url 没有效果。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/TvV7zA.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> HTTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单元测试</title>
      <link href="/2020/11/01/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
      <url>/2020/11/01/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>单元测试是什么呢？来自维基百科的一段说明：在<a href="https://zh.wikipedia.org/wiki/计算机编程" target="_blank" rel="noopener">计算机编程</a>中，<strong>单元测试</strong>（英語：Unit Testing）又称为<strong>模块测试</strong>，是针对<a href="https://zh.wikipedia.org/wiki/模組_(程式設計)" target="_blank" rel="noopener">程序模块</a>（<a href="https://zh.wikipedia.org/wiki/软件设计" target="_blank" rel="noopener">软件设计</a>的最小单位）来进行正确性检验的测试工作。程序单元是应用的最小可测试部件。在<a href="https://zh.wikipedia.org/wiki/過程化編程" target="_blank" rel="noopener">过程化编程</a>中，一个单元就是单个程序、函数、过程等；对于面向对象编程，最小单元就是方法，包括基类（超类）、抽象类、或者派生类（子类）中的方法。简单来说就是：单元测试是用来对一个模块、一个函数或者一个类来进行正确性检验的测试工作。写单元测试是每一个合格的开发人员的必备技能，它也是保证一个代码健壮性的重要手段。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>每一门编程语言都有自己的单元测试框架，而我们 PHP 当中用的最多最强大的单元测试工具就是 <a href="https://phpunit.de/" target="_blank" rel="noopener">PHPUnit</a> 当然也有别的单元测试框架选择自己熟悉的使用最好。在 Laravel 当中其实已经集成了 PHPUint 单元测试框架，并且其功能也大幅度的增强，所以使用的 Laravel 那么我们无需在项目中再次的 Composer PHPUnit 当然其绝对大多数框架都已经引入了 PHPUint 让我们单元测试上面来说更加的得心应手！如果没有集成那么只需要 Composer 即可。</p><pre class="line-numbers language-bash"><code class="language-bash">composer require phpunit/phpunit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>熟悉一下在 Laravel 当中的关于测试的一些重要信息：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/1W3XTj.png" alt></p><p>可以看到的 Laravel 当中已经存在一个目录 <code>tests</code> 就是用来做测试的目录， Feature 我一般理解为交互测试目录，比如模仿浏览器的操作发起 HTTP 请求进行测试，Unit 我一般理解为单元测试目录，这里就是对类或方法函数进行测试。除了 <code>tests</code>其次 <code>phpunit.xml</code> 文件为框架还提供了一些便利的辅助函数，让你可以更直观的测试你的应用程序。</p><p>phpunit.xml 文件格式：</p><pre class="line-numbers language-yaml"><code class="language-yaml">&lt;<span class="token punctuation">?</span>xml version="1.0" encoding="UTF<span class="token punctuation">-</span>8"<span class="token punctuation">?</span><span class="token punctuation">></span>&lt;phpunit xmlns<span class="token punctuation">:</span>xsi="http<span class="token punctuation">:</span>//www.w3.org/2001/XMLSchema<span class="token punctuation">-</span>instance"         xsi<span class="token punctuation">:</span>noNamespaceSchemaLocation="./vendor/phpunit/phpunit/phpunit.xsd"         bootstrap="vendor/autoload.php"         colors="true"<span class="token punctuation">></span>    &lt;testsuites<span class="token punctuation">></span>        &lt;testsuite name="Unit"<span class="token punctuation">></span>            &lt;directory suffix="Test.php"<span class="token punctuation">></span>./tests/Unit&lt;/directory<span class="token punctuation">></span>        &lt;/testsuite<span class="token punctuation">></span>        &lt;testsuite name="Feature"<span class="token punctuation">></span>            &lt;directory suffix="Test.php"<span class="token punctuation">></span>./tests/Feature&lt;/directory<span class="token punctuation">></span>        &lt;/testsuite<span class="token punctuation">></span>    &lt;/testsuites<span class="token punctuation">></span>    &lt;filter<span class="token punctuation">></span> <span class="token comment" spellcheck="true"># 这里是代码覆盖的文件</span>        &lt;whitelist processUncoveredFilesFromWhitelist="true"<span class="token punctuation">></span>            &lt;directory suffix=".php"<span class="token punctuation">></span>./app&lt;/directory<span class="token punctuation">></span>        &lt;/whitelist<span class="token punctuation">></span>    &lt;/filter<span class="token punctuation">></span>    &lt;logging<span class="token punctuation">></span> <span class="token comment" spellcheck="true"># 这里是生成代码覆盖率的目录，需要安装 PHP xdebug 扩展</span>        &lt;log type="coverage<span class="token punctuation">-</span>html" target="./public/result" lowUpperBound="35"             highLowerBound="70"/<span class="token punctuation">></span>    &lt;/logging<span class="token punctuation">></span>    &lt;php<span class="token punctuation">></span> <span class="token comment" spellcheck="true"># 这里是一些环境变量</span>        &lt;server name="APP_ENV" value="testing"/<span class="token punctuation">></span>        &lt;server name="BCRYPT_ROUNDS" value="4"/<span class="token punctuation">></span>        &lt;server name="CACHE_DRIVER" value="array"/<span class="token punctuation">></span>        &lt;server name="DB_CONNECTION" value="mysql"/<span class="token punctuation">></span>        &lt;server name="DB_DATABASE" value="<span class="token punctuation">:</span>memory<span class="token punctuation">:</span>"/<span class="token punctuation">></span>        &lt;server name="MAIL_DRIVER" value="array"/<span class="token punctuation">></span>        &lt;server name="QUEUE_CONNECTION" value="sync"/<span class="token punctuation">></span>        &lt;server name="SESSION_DRIVER" value="array"/<span class="token punctuation">></span>    &lt;/php<span class="token punctuation">></span>&lt;/phpunit<span class="token punctuation">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的内容是熟悉一下在 Laravel 中测试的一些目录结果与重要的文件信息，下面一些则是编写单元测试需要遵循的规范。</p><p>PHPUnit 规范：</p><ul><li>测试类一般以 Test 结尾命名。</li><li>类里面的测试方法一般以 test 开头命名。</li><li>测试方法中需要使用断言方法进行判断是否与期望一致，以达到测试目的。</li><li>测试类必须继承 PHPUnit\Framework\TestCase 类，但是对于 Laravel 项目来说可以忽略这点，因为框架已经对它进行一层封装。</li></ul><p>创建 PHPUnit：</p><ul><li>php artisan make:test SearchTest 创建的文件会在 Feature 目录下</li><li>php artisan make:test TestTest –unit 创建的文件会在 Unit 目录下</li></ul><p>执行 PHPUnit：</p><ul><li>phpunit：执行全部</li><li>phpunit –filter=执行指定文件夹或类或方法，推荐使用 –filter 执行，不然执行全部单元测试太多可能耗时久</li></ul><p>PHPUnit 常用断言：</p><p>布尔类型</p><table><thead><tr><th>方法名</th><th>含义</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>assertTrue</td><td>断言为真</td><td></td><td></td></tr><tr><td>assertFalse</td><td>断言为假</td><td></td><td></td></tr></tbody></table><p>NULL 类型</p><table><thead><tr><th>方法名</th><th>含义</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>assertNull</td><td>断言为NULL</td><td></td><td></td></tr><tr><td>assertNotNull</td><td>断言非NULL</td><td></td><td></td></tr></tbody></table><p>数字类型</p><table><thead><tr><th>方法名</th><th>含义</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>assertEquals</td><td>断言等于</td><td></td><td></td></tr><tr><td>assertNotEquals</td><td>断言不等于</td><td></td><td></td></tr><tr><td>assertGreaterThan</td><td>断言大于</td><td></td><td></td></tr><tr><td>assertGreaterThanOrEqual</td><td>断言大于等于</td><td></td><td></td></tr><tr><td>assertLessThan</td><td>断言小于</td><td></td><td></td></tr><tr><td>assertLessThanOrEqual</td><td>断言小于等于</td><td></td><td></td></tr></tbody></table><p>字符类型</p><table><thead><tr><th>方法名</th><th>含义</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>assertEquals</td><td>断言等于</td><td></td><td></td></tr><tr><td>assertNotEquals</td><td>断言不等于</td><td></td><td></td></tr><tr><td>assertContains</td><td>断言包含</td><td></td><td></td></tr><tr><td>assertNotContains</td><td>断言不包含</td><td></td><td></td></tr><tr><td>assertContainsOnly</td><td>断言小于</td><td></td><td></td></tr><tr><td>assertLessThanOrEqual</td><td>断言只包含</td><td></td><td></td></tr><tr><td>assertNotContainsOnly</td><td>断言不只包含</td><td></td><td></td></tr></tbody></table><p>数组类型</p><table><thead><tr><th>方法名</th><th>含义</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>assertEquals</td><td>断言等于</td><td></td><td></td></tr><tr><td>assertNotEquals</td><td>断言不等于</td><td></td><td></td></tr><tr><td>assertArrayHasKey</td><td>断言有键</td><td></td><td></td></tr><tr><td>assertArrayNotHasKey</td><td>断言没有键</td><td></td><td></td></tr><tr><td>assertContains</td><td>断言包含</td><td></td><td></td></tr><tr><td>assertNotContains</td><td>断言不包含</td><td></td><td></td></tr><tr><td>assertContainsOnly</td><td>断言只包含</td><td></td><td></td></tr><tr><td>assertNotContainsOnly</td><td>断言不只包含</td><td></td><td></td></tr></tbody></table><p>对象类型</p><table><thead><tr><th>方法名</th><th>含义</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>assertAttributeContains</td><td>断言属性包含</td><td></td><td></td></tr><tr><td>assertAttributeContainsOnly</td><td>断言属性只包含</td><td></td><td></td></tr><tr><td>assertAttributeEquals</td><td>断言属性等于</td><td></td><td></td></tr><tr><td>assertAttributeGreaterThan</td><td>断言属性大于</td><td></td><td></td></tr><tr><td>assertAttributeGreaterThanOrEqual</td><td>断言属性大于等于</td><td></td><td></td></tr><tr><td>assertAttributeLessThan</td><td>断言属性小于</td><td></td><td></td></tr><tr><td>assertAttributeLessThanOrEqual</td><td>断言属性小于等于</td><td></td><td></td></tr><tr><td>assertAttributeNotContains</td><td>断言不包含</td><td></td><td></td></tr><tr><td>assertAttributeNotContainsOnly</td><td>断言属性不只包含</td><td></td><td></td></tr><tr><td>assertAttributeNotEquals</td><td>断言属性不等于</td><td></td><td></td></tr><tr><td>assertAttributeNotSame</td><td>断言属性不相同</td><td></td><td></td></tr><tr><td>assertAttributeSame</td><td>断言属性相同</td><td></td><td></td></tr><tr><td>assertSame</td><td>断言类型和值都相同</td><td></td><td></td></tr><tr><td>assertNotSame</td><td>断言类型或值不相同</td><td></td><td></td></tr><tr><td>assertObjectHasAttribute</td><td>断言对象有某属性</td><td></td><td></td></tr><tr><td>assertObjectNotHasAttribute</td><td>断言对象没有某属性</td><td></td><td></td></tr></tbody></table><p>class 类型</p><table><thead><tr><th>方法名</th><th>含义</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>assertClassHasAttribute</td><td>断言类有某属性</td><td></td><td></td></tr><tr><td>assertClassHasStaticAttribute</td><td>断言类有某静态属性</td><td></td><td></td></tr><tr><td>assertClassNotHasAttribute</td><td>断言类没有某属性</td><td></td><td></td></tr><tr><td>assertClassNotHasStaticAttribute</td><td>断言类没有某静态属性</td><td></td><td></td></tr></tbody></table><p>文件相关</p><table><thead><tr><th>方法名</th><th>含义</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>assertFileEquals</td><td>断言文件内容等于</td><td></td><td></td></tr><tr><td>assertFileExists</td><td>断言文件存在</td><td></td><td></td></tr><tr><td>assertFileNotEquals</td><td>断言文件内容不等于</td><td></td><td></td></tr><tr><td>assertFileNotExists</td><td>断言文件不存在</td><td></td><td></td></tr></tbody></table><p>XML 相关</p><table><thead><tr><th>方法名</th><th>含义</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>assertXmlFileEqualsXmlFile</td><td>断言XML文件内容相等</td><td></td><td></td></tr><tr><td>assertXmlFileNotEqualsXmlFile</td><td>断言XML文件内容不相等</td><td></td><td></td></tr><tr><td>assertXmlStringEqualsXmlFile</td><td>断言XML字符串等于XML文件内容</td><td></td><td></td></tr><tr><td>assertXmlStringEqualsXmlString</td><td>断言XML字符串相等</td><td></td><td></td></tr><tr><td>assertXmlStringNotEqualsXmlFile</td><td>断言XML字符串不等于XML文件内容</td><td></td><td></td></tr><tr><td>assertXmlStringNotEqualsXmlString</td><td>断言XML字符串不相等</td><td></td><td></td></tr></tbody></table><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Tests<span class="token punctuation">\</span>Unit</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">PHPUnit<span class="token punctuation">\</span>Framework<span class="token punctuation">\</span>TestCase</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TestTest</span> <span class="token keyword">extends</span> <span class="token class-name">TestCase</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * A basic unit test example.     *     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">testExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">bcadd</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token shell-comment comment"># 断言 $res 的结果是否等于 3</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 PHPUint 得到测试的结果：从结果当中可以看得到执行的时间，用到的内存，断言数量</p><pre class="line-numbers language-yaml"><code class="language-yaml">root@b39867e03998 /v/w/h/spmvp<span class="token comment" spellcheck="true"># ./phpunit --filter=testExample</span>Cannot load Xdebug <span class="token punctuation">-</span> it was already loadedPHPUnit 8.5.8 by Sebastian Bergmann and contributors..                                                                   1 / 1 (100%)<span class="token key atrule">Time</span><span class="token punctuation">:</span> 415 ms<span class="token punctuation">,</span> <span class="token key atrule">Memory</span><span class="token punctuation">:</span> 16.00 MBOK (1 test<span class="token punctuation">,</span> 1 assertion)Generating code coverage report in HTML format <span class="token punctuation">...</span> done <span class="token punctuation">[</span>426 ms<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看 PHPUnit 得到的代码覆盖率结果：从结果当中可以追踪代码执行的过程，当然这我使用的是内置函数就没有追踪的代码咯</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/s1GsJ9.png" alt></p><h3 id="快速进阶"><a href="#快速进阶" class="headerlink" title="快速进阶"></a>快速进阶</h3><p>上面已经运行了一个单元测试，但是这个单元测试是最简单的单元测试，那么单元测试也算入门了，接下来进行一些进阶的操作。</p><h4 id="setUp"><a href="#setUp" class="headerlink" title="setUp"></a>setUp</h4><p>我一般把他理解为测试类的构造函数，等同于 __construct ，只要定义了 setUp 那么执行这个测试类那么 setUp 就会最先去执行。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Tests<span class="token punctuation">\</span>Unit</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Tests<span class="token punctuation">\</span>TestCase</span><span class="token punctuation">;</span> <span class="token shell-comment comment"># 注意这里哦，已经不再使用 PHPUint 的 TestCase 而是 laravel 的封装更加的强大</span><span class="token keyword">class</span> <span class="token class-name">TestTest</span> <span class="token keyword">extends</span> <span class="token class-name">TestCase</span><span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token variable">$age</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> void    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">age</span> <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">;</span>          <span class="token keyword">parent</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//放上</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * A basic unit test example.     *     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">testExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">age</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="依赖关系-depends"><a href="#依赖关系-depends" class="headerlink" title="依赖关系(@depends)"></a>依赖关系(@depends)</h4><p>在测试类中，测试用例方法可以有依赖关系。通过依赖关系可以传一些参数到方法中；因为默认的测试用例方法是不能有参数的。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Tests<span class="token punctuation">\</span>Unit</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Tests<span class="token punctuation">\</span>TestCase</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TestTest</span> <span class="token keyword">extends</span> <span class="token class-name">TestCase</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">testRes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">assertTrue</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">'道法自然'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 如果使用了 '@'test 那么就不需要遵循 test 开头的规则     * @depends testRes     * @test     * @param string $name     * */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">meName</span><span class="token punctuation">(</span>string <span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">'道法自然'</span><span class="token punctuation">,</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：如果一个测试方法依赖另外一个测试方法，那么必须等另外一个测试方法执行完毕，依赖的这个测试方法才能执行，如果 <code>phpunit --filter=meName</code> 那么就相当于跳过了 testRes 。正确的执行应该是这样：<code>phpunit --filter=TestTest</code></p></blockquote><h4 id="数据提供者-dataProvider"><a href="#数据提供者-dataProvider" class="headerlink" title="数据提供者(@dataProvider)"></a>数据提供者(@dataProvider)</h4><p>在依赖中，所依赖函数的返回值作为参数传入测试函数。除此之外，我们也可以用数据提供器来定义传入的数据。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Tests<span class="token punctuation">\</span>Unit</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Tests<span class="token punctuation">\</span>TestCase</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TestTest</span> <span class="token keyword">extends</span> <span class="token class-name">TestCase</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * @test     * @dataProvider dataProvider     * @param  $number     * */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">sumRes</span><span class="token punctuation">(</span><span class="token variable">$number</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$number2</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token variable">$sum</span> <span class="token operator">=</span> <span class="token variable">$number</span> <span class="token operator">+</span> <span class="token variable">$number2</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token variable">$sum</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">dataProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>       <span class="token shell-comment comment"># 数据格式得以数组形式返回</span>       <span class="token keyword">return</span> <span class="token punctuation">[</span>           <span class="token string">'number'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：所有的数据供给器方法的执行都是在对 <code>setUpBeforeClass</code> 静态方法的调用和第一次对 <code>setUp</code> 方法的调用之前完成的。因此，无法在数据供给器中使用创建于这两个方法内的变量。这是必须的，这样 PHPUnit 才能计算测试的总数量。</p></blockquote><h4 id="测试异常-expectException"><a href="#测试异常-expectException" class="headerlink" title="测试异常 (expectException)"></a>测试异常 (expectException)</h4><p>需要在测试方法的开始处声明断言，然后执行语句。而不是调用后再声明也可以通过注释来声明 @expectedException, @expectedExceptionCode,<br>@expectedExceptionMessage, @expectedExceptionMessageRegExp</p><p>PHPUnit9 推荐 expectException(), expectExceptionCode(), expectExceptionMessage(), or expectExceptionMessageMatches() </p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Tests<span class="token punctuation">\</span>Unit</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Tests<span class="token punctuation">\</span>TestCase</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TestTest</span> <span class="token keyword">extends</span> <span class="token class-name">TestCase</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">testException</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">expectException</span><span class="token punctuation">(</span>\<span class="token package">Exception</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\</span>Exception</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>未完待续…</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目压力测试</title>
      <link href="/2020/09/23/API-%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/"/>
      <url>/2020/09/23/API-%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>产品上线前压力测试是非常有必要的一个环节，经过压力测试可以很明确当前产品的性能的信息，当然观察点除了自身程序，另外一个重点就是服务器本身。这里采用的测试工具就是 Apache Benchmark (ab) 是 Apache 安装包中自带的压力测试工具 ，简单易用。</p><h3 id="ab-原理"><a href="#ab-原理" class="headerlink" title="ab 原理"></a>ab 原理</h3><p>ab 命令会创建多个并发访问<strong>线程</strong>，模拟多个访问者同时对某一 URL 地址进行访问。它的测试目标是基于 URL ，因此，它既可以用来测试 apache 的负载压力，也可以测试 nginx、lighthttp、tomcat、IIS 等其它 Web 服务器的压力。</p><p>ab 命令对发出负载的计算机要求很低，它既不会占用很高 CPU，也不会占用很多内存。但却会给目标服务器造成巨大的负载，其原理类似 CC 攻击。自己测试使用也需要注意，否则一次上太多的负载。可能造成目标服务器资源耗完，严重时甚至导致死机。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>Centos</p><pre class="line-numbers language-bash"><code class="language-bash">yum -y <span class="token function">install</span> httpd-tools<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Ubuntu</p><pre class="line-numbers language-bash"><code class="language-bash">apt -y <span class="token function">install</span> apache2-utils<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h3><p>在使用之前需要先了解一下压力测试的概念，这样才能更好分析。</p><ul><li><strong>吞吐率（Requests per second）</strong></li></ul><p>服务器并发处理能力的量化描述，单位是 reqs/s，指的是某个并发用户数下单位时间内处理的请求数。某个并发用户数下单位时间内能处理的最大请求数，称之为最大吞吐率。 计算公式：总请求数 / 处理完成这些请求数所花费的时间，即：<br> Request per second = Complete requests / Time taken for tests</p><ul><li><strong>并发连接数（The number of concurrent connections）</strong></li></ul><p>某个时刻服务器所接受的请求数目，简单的讲，就是一个会话。</p><ul><li><strong>并发用户数（The number of concurrent users，Concurrency Level）</strong></li></ul><p>要注意区分这个概念和并发连接数之间的区别，一个用户可能同时会产生多个会话，也即连接数。</p><ul><li><strong>用户平均请求等待时间（Time per request）</strong></li></ul><p>计算公式：处理完成所有请求数所花费的时间/ （总请求数 / 并发用户数），即<br> Time per request = Time taken for tests /（ Complete requests / Concurrency Level）</p><ul><li><strong>服务器平均请求等待时间（Time per request: across all concurrent requests）</strong></li></ul><p>计算公式：处理完成所有请求数所花费的时间 / 总请求数，即<br> Time taken for / testsComplete requests<br> 可以看到，它是吞吐率的倒数。<br> 同时，它也=用户平均请求等待时间/并发用户数，即<br> Time per request / Concurrency Level</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre class="line-numbers language-bash"><code class="language-bash">ab -n 1000 -c 10 path<span class="token comment" spellcheck="true"># 访问 1000 次，一共 10个并发</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="ab-常用参数的介绍"><a href="#ab-常用参数的介绍" class="headerlink" title="ab 常用参数的介绍"></a>ab 常用参数的介绍</h4><ul><li>-n ：总共的请求执行数，缺省是1；</li><li>-c： 并发数，缺省是1；</li><li>-t：测试所进行的总时间，秒为单位，缺省50000s</li><li>-T：指定的参数类型</li><li>-p：POST 时的数据文件</li><li>-w: 以HTML表的格式输出结果</li></ul><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><pre class="line-numbers language-yaml"><code class="language-yaml">Server Software<span class="token punctuation">:</span>        nginx/1.16.1 <span class="token comment" spellcheck="true"># 服务器软件名称以及版本号</span>Server Hostname<span class="token punctuation">:</span>        xxxxx <span class="token comment" spellcheck="true"># 域名</span>Server Port<span class="token punctuation">:</span>            <span class="token number">80    </span><span class="token comment" spellcheck="true"># 端口号</span>Document Path<span class="token punctuation">:</span>          /index.php <span class="token comment" spellcheck="true"># 测试的路径</span>Document Length<span class="token punctuation">:</span>        32 bytes     <span class="token comment" spellcheck="true"># 测试的路径返回的文档大小</span>Concurrency Level<span class="token punctuation">:</span>      <span class="token number">100                     </span><span class="token comment" spellcheck="true"># 并发数量</span>Time taken for tests<span class="token punctuation">:</span>   4.307 seconds <span class="token comment" spellcheck="true"># 压力测试消耗的总时间-单位秒</span>Complete requests<span class="token punctuation">:</span>      <span class="token number">1000                    </span><span class="token comment" spellcheck="true"># 总访问次数</span>Failed requests<span class="token punctuation">:</span>        <span class="token number">0                            </span><span class="token comment" spellcheck="true"># 失败的请求数量</span>Total transferred<span class="token punctuation">:</span>      233000 bytes  <span class="token comment" spellcheck="true"># 传输的总数据量</span>HTML transferred<span class="token punctuation">:</span>       32000 bytes   <span class="token comment" spellcheck="true"># HTML文档的总数据量</span>Requests per second<span class="token punctuation">:</span>    232.15 <span class="token punctuation">[</span><span class="token comment" spellcheck="true">#/sec] (mean) # (平均每秒的请求数) 这个是非常重要的参数数值，服务器的吞吐量</span>Time per request<span class="token punctuation">:</span>       430.748 <span class="token punctuation">[</span>ms<span class="token punctuation">]</span> (mean)   <span class="token comment" spellcheck="true"># (所有并发用户都请求一次的平均时间)</span>Time per request<span class="token punctuation">:</span>       4.307 <span class="token punctuation">[</span>ms<span class="token punctuation">]</span> (mean<span class="token punctuation">,</span> across all concurrent requests) <span class="token comment" spellcheck="true"># (单个用户请求一次的平均时间)</span>Transfer rate<span class="token punctuation">:</span>          52.82 <span class="token punctuation">[</span>Kbytes/sec<span class="token punctuation">]</span> received <span class="token comment" spellcheck="true"># 每秒获取的数据长度 (传输速率，单位：KB/s)</span>Connection Times (ms) <span class="token comment" spellcheck="true"># 网络上消耗的时间的分解</span>              min  mean<span class="token punctuation">[</span>+/<span class="token punctuation">-</span>sd<span class="token punctuation">]</span> median   max<span class="token key atrule">Connect</span><span class="token punctuation">:</span>       33   41  32.5     40    1063<span class="token key atrule">Processing</span><span class="token punctuation">:</span>   224  337  43.4    322     545<span class="token key atrule">Waiting</span><span class="token punctuation">:</span>      224  337  43.4    322     545<span class="token key atrule">Total</span><span class="token punctuation">:</span>        349  378  52.4    363    1287Percentage of the requests served within a certain time (ms)  50%    363 <span class="token comment" spellcheck="true"># 50% 的请求在 363 ms 内返回</span>  66%    367 <span class="token comment" spellcheck="true"># 60% 的请求在 367 ms 内返回</span>  75%    374  80%    379  90%    404  95%    491  98%    557  99%    582 100%   1287 (longest request)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h4><p>除了平常的 GET 请求，其实最多的情况下还是 POST ，当然了 AB 也支持 POST 的压力测试。</p><pre class="line-numbers language-bash"><code class="language-bash">ab -n10000 -c10 -T <span class="token string">'application/json'</span> -p post.json path<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Json 格式：</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"title"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">"text"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">"text_string"</span><span class="token operator">:</span><span class="token string">"Star Wars The Black Series Credit Collection The Mandalorian Toy 6-Inch-Scale Collectible Action Figure (Amazon Exclusive)"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token property">"primary_class"</span><span class="token operator">:</span><span class="token string">"000"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token property">"descriptions"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">"text"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">"text_string"</span><span class="token operator">:</span><span class="token string">" THE MANDALORIAN: The Mandalorian is battle-worn and tight-lipped, a formidable bounty hunter in an increasingly dangerous galaxy THE MANDALORIAN SERIES-INSPIRED DESIGN: Fans and collectors can imagine "</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token property">"text"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">"text_string"</span><span class="token operator">:</span><span class="token string">"scenes from the Star Wars Galaxy as seen on Disney Plus with this premium The Mandalorian toy TV SERIES-BASED CHARACTER-INSPIRED ACCESSORIES: This Star Wars The Black Series action figure comes with 2"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token property">"text"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">"text_string"</span><span class="token operator">:</span><span class="token string">" The Mandalorian-inspired accessories that make great additions to any Star Wars collection PREMIUM ARTICULATION AND DETAILING: Star Wars fans and collectors can display this highly poseable, fully articulated, "</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token property">"text"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">"text_string"</span><span class="token operator">:</span><span class="token string">"figure, featuring premium deco, in their action figure and vehicle collection CREDIT COLLECTION: This distinctive collection features premium deco applications inspired by the end credit images from The "</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token property">"text"</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">"text_string"</span><span class="token operator">:</span><span class="token string">"Mandalorian, plus a collectible Imperial Credit accessory"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"images"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>测试机与被测试机要分开</li><li>不要对线上的服务器做压力测试</li><li>观察测试工具 ab 所在机器，以及被测试的前端机的 CPU、内存、网络等都不超过最高限度的 75%</li></ul><blockquote><p>参考：</p><p><a href="https://www.jianshu.com/p/43d04d8baaf7" target="_blank" rel="noopener">https://www.jianshu.com/p/43d04d8baaf7</a></p><p><a href="https://blog.csdn.net/u011415782/article/details/78501799" target="_blank" rel="noopener">https://blog.csdn.net/u011415782/article/details/78501799</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL-分析 SQL 性能</title>
      <link href="/2020/09/21/MySQL-%E5%88%86%E6%9E%90-SQL-%E6%80%A7%E8%83%BD/"/>
      <url>/2020/09/21/MySQL-%E5%88%86%E6%9E%90-SQL-%E6%80%A7%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>分析 SQL 语句性能是每个项目都必定经历的一个阶段，分析 SQL 可以依靠 MySQL 自身提供的功能帮助我们分析 SQL 当然也有第三方工具，看个人习惯于熟悉程度而定。慢查询日志和 profiles 都是 MySQL 自身提供的 SQL 工具非常实用。Performance Schema explain</p><h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><p>慢查询日志是 <strong>MySQL 提供记录超过时间限定 SQL 语句的一个日志功能</strong>，通常我们优化数据库第一点就先看看慢查询日志，有利于我们进行 SQL 的分析。默认是没有开启慢查询日志！不建议在生成环境开启，开启之后也会消耗一些性能，可以把生成环境数据拷贝到测试服在进行慢查询日志操作。慢查询日志开启方式有：临时与永久，开启永久慢查询需要重启服务，推荐临时开启!!!</p><pre class="line-numbers language-mysql"><code class="language-mysql"># 查看是否开启了慢查询show variables like 'slow_query_log%';# 查看默认触发记录的时间 单位：秒  默认10秒show variables like 'long_query_time';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/UkOQ52.png" alt></p><h4 id="临时开启"><a href="#临时开启" class="headerlink" title="临时开启"></a>临时开启</h4><pre class="line-numbers language-mysql"><code class="language-mysql"># 开启set global slow_query_log = 1;  # 修改触发时间set long_query_time = 10;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="永久开启"><a href="#永久开启" class="headerlink" title="永久开启"></a>永久开启</h4><pre class="line-numbers language-mysql"><code class="language-mysql"># 修改配置 mysql 下的配置文件,开启慢查询slow_query_log = 1# 慢查询日志记录的位置log-slow-queries = "/var//lib/mysql/slow.log"# 触发的时间long_query_time = 1 # 不记录没有使用索引的日志log-queries-not-using-indexes### 注意:修改完毕配置文件后，一定要重启 mysql 服务，才能配置生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/00wCeX.png" alt></p><h4 id="日志查看"><a href="#日志查看" class="headerlink" title="日志查看"></a>日志查看</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/MFDHaB.png" alt></p><ul><li>Time：当前数据库时间</li><li>User@Host：数据库用户的一些信息</li><li>Id：是执行查询的线程 Id</li><li>Query_time：执行 SQL 所需要的时间，单位秒</li><li>Lock_time：执行查询对记录锁定的时间</li><li>Rows_sent：查询返回的行数</li><li>Rows_examined：为了返回查询的数据所读取的行数</li></ul><h4 id="分析日志工具"><a href="#分析日志工具" class="headerlink" title="分析日志工具"></a>分析日志工具</h4><ul><li>mysqldumpslow</li><li>mysqlsla</li></ul><p>分析 SQL 还是得 MySQL 自身提供的计划任务（Explain）来模拟执行 SQL 然后从中观察结果。</p><h3 id="精准时间记录"><a href="#精准时间记录" class="headerlink" title="精准时间记录"></a>精准时间记录</h3><p>使用mysql提供<code>profile</code>机制完成。<code>profile</code>记录每次执行的sql语句的具体时间，精确时间到小数点8位。</p><h4 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h4><pre class="line-numbers language-mysql"><code class="language-mysql"># 开启profile记录set profiling = 1;# 关闭set profiling = 0;# 查看记录sql语句的执行时间show profiles;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/EWxsAP.png" alt></p><h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><p>在工作中，我们用于捕捉性能问题最常用的就是打开慢查询，定位执行效率差的 SQL，那么当我们定位到一个 SQL以后还不算完事，我们还需要知道该 SQL 的执行计划，比如是全表扫描，还是索引扫描，这些都需要通过 explain去完成。explain 关键字可以模拟 MySQL 优化器执行 SQL 语句，可以很好的分析 SQL 语句或表结构的性能瓶颈。</p><h4 id="explain-的用途"><a href="#explain-的用途" class="headerlink" title="explain 的用途"></a>explain 的用途</h4><ol><li>表的读取顺序如何</li><li>数据读取操作有哪些操作类型</li><li>哪些索引可以使用</li><li>哪些索引被实际使用</li><li>表之间是如何引用</li><li>每张表有多少行被优化器查询</li></ol><h4 id="explain-的执行效果"><a href="#explain-的执行效果" class="headerlink" title="explain 的执行效果"></a>explain 的执行效果</h4><pre class="line-numbers language-yaml"><code class="language-yaml">mysql<span class="token punctuation">></span> explain select * from `signs` where `id` = '11' \G;*************************** 1. row ***************************           <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">select_type</span><span class="token punctuation">:</span> SIMPLE        <span class="token key atrule">table</span><span class="token punctuation">:</span> signs   <span class="token key atrule">partitions</span><span class="token punctuation">:</span> <span class="token null important">NULL</span>         <span class="token key atrule">type</span><span class="token punctuation">:</span> const<span class="token key atrule">possible_keys</span><span class="token punctuation">:</span> PRIMARY          <span class="token key atrule">key</span><span class="token punctuation">:</span> PRIMARY      <span class="token key atrule">key_len</span><span class="token punctuation">:</span> <span class="token number">8</span>          <span class="token key atrule">ref</span><span class="token punctuation">:</span> const         <span class="token key atrule">rows</span><span class="token punctuation">:</span> <span class="token number">1</span>     <span class="token key atrule">filtered</span><span class="token punctuation">:</span> <span class="token number">100.00</span>        <span class="token key atrule">Extra</span><span class="token punctuation">:</span> <span class="token null important">NULL</span>1 row in set<span class="token punctuation">,</span> 1 warning (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="explain-的字段"><a href="#explain-的字段" class="headerlink" title="explain 的字段"></a>explain 的字段</h4><ol><li>id：select 查询的序列号，包含一组数字，表示查询中执行 select 子句或操作表的顺序</li><li>select_type ：查询类型</li><li>table ：正在访问哪个表</li><li>partitions ：匹配的分区</li><li>type ：访问的类型</li><li>possible_keys ：显示可能应用在这张表中的索引，一个或多个，但不一定实际使用到</li><li>key ：实际使用到的索引，如果为 NULL，则没有使用索引</li><li>key_len ：表示索引中使用的字节数，可通过该列计算查询中使用的索引的长度</li><li>ref ：显示索引的哪一列被使用了，如果可能的话，是一个常数，哪些列或常量被用于查找索引列上的值</li><li>rows ：根据表统计信息及索引选用情况，大致估算出找到所需的记录所需读取的行数</li><li>filtered ：查询的表行占表的百分比</li><li>Extra ：包含不适合在其它列中显示但十分重要的额外信息</li></ol><p>未完待续…</p><p>一、建表规约<br>【强制】表达是与否概念的字段，必须使用 is_xxx 的方式命名，数据类型是 unsigned tinyint（ 1 表示是，0 表示否），此规则同样适用于 odps 建表。<br>说明：任何字段如果为非负数，必须是 unsigned。</p><p>【强制】表名、字段名必须使用小写字母或数字；禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。<br>正例：getter_admin，task_config，level3_name<br>反例：GetterAdmin，taskConfig，level_3_name</p><p>【强制】表名不使用复数名词。<br>说明：表名应该仅仅表示表里面的实体内容，不应该表示实体数量，对应于 DO 类名也是单数形式，符合表达习惯。</p><p>【强制】禁用保留字，如 desc、range、match、delayed 等，请参考 MySQL 官方保留字。</p><p>【强制】唯一索引名为 uk_字段名；普通索引名则为 idx_字段名。<br>说明：uk_ 即 unique key；idx_ 即 index 的简称。</p><p>【强制】小数类型为 decimal，禁止使用 float 和 double。<br>说明：float 和 double 在存储的时候，存在精度损失的问题，很可能在值的比较时，得到不正确的结果。如果存储的数据范围超过 decimal 的范围，建议将数据拆成整数和小数分开存储。</p><p>【强制】如果存储的字符串长度几乎相等，使用 char 定长字符串类型。</p><p>【强制】varchar 是可变长字符串，不预先分配存储空间，长度不要超过 5000，如果存储长度大于此值，定义字段类型为 text，独立出来一张表，用主键来对应，避免影响其它字段索引效率。</p><p>【强制】表必备三字段：id, gmt_create, gmt_modified。<br>说明：其中 id 必为主键，类型为 unsigned bigint、单表时自增、步长为 1。gmt_create,gmt_modified 的类型均为 date_time 类型。</p><p>【推荐】表的命名最好是加上 “业务名称_表的作用”。<br>正例：tiger_task /tiger_reader/mpp_config</p><p>【推荐】库名与应用名称尽量一致。</p><p>【推荐】如果修改字段含义或对字段表示的状态追加时，需要及时更新字段注释。</p><p>【推荐】字段允许适当冗余，以提高性能，但是必须考虑数据同步的情况。冗余字段应遵循：<br>1）不是频繁修改的字段。<br>2）不是 varchar 超长字段，更不能是 text 字段。<br>正例：商品类目名称使用频率高，字段长度短，名称基本一成不变，可在相关联的表中冗余存储类目名称，避免关联查询。</p><p>【推荐】单表行数超过 500 万行或者单表容量超过 2GB，才推荐进行分库分表。<br>说明：如果预计三年后的数据量根本达不到这个级别，请不要在创建表时就分库分表。</p><p>【参考】合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。<br>正例：人的年龄用 unsigned tinyint（表示范围 0-255，人的寿命不会超过 255 岁）；海龟就必须是 smallint，但如果是太阳的年龄，就必须是 int；如果是所有恒星的年龄都加起来，那么就必须使用 bigint。</p><p>二、索引规约<br>【强制】业务上具有唯一特性的字段，即使是组合字段，也必须建成唯一索引。<br>说明：不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明显的；另外，即使在应用层做了非常完善的校验和控制，只要没有唯一索引，根据墨菲定律，必然有脏数据产生。</p><p>【强制】 超过三个表禁止 join。需要 join 的字段，数据类型保持绝对一致；多表关联查询时，保证被关联的字段需要有索引。<br>说明：即使双表 join 也要注意表索引、SQL 性能。</p><p>【强制】在 varchar 字段上建立索引时，必须指定索引长度，没必要对全字段建立索引，根据实际文本区分度决定索引长度。<br>说明：索引的长度与区分度是一对矛盾体，一般对字符串类型数据，长度为 20 的索引，区分度会高达 90% 以上，可以使用 count (distinct left (列名，索引长度))/count (*) 的区分度来确定。</p><p>【强制】页面搜索严禁左模糊或者全模糊，如果需要请走搜索引擎来解决。<br>说明：索引文件具有 B-Tree 的最左前缀匹配特性，如果左边的值未确定，那么无法使用此索引。</p><p>【推荐】如果有 order by 的场景，请注意利用索引的有序性。order by 最后的字段是组合索引的一部分，并且放在索引组合顺序的最后，避免出现 file_sort 的情况，影响查询性能。<br>正例：where a=? and b=? order by c; 索引：a_b_c 反例：索引中有范围查找，那么索引有序性无法利用，如：WHERE a&gt;10 ORDER BY b; 索引 a_b 无法排序。</p><p>【推荐】利用覆盖索引来进行查询操作，来避免回表操作。<br>说明：如果一本书需要知道第 11 章是什么标题，会翻开第 11 章对应的那一页吗？目录浏览一下就好，这个目录就是起到覆盖索引的作用。<br>正例：能够建立索引的种类：主键索引、唯一索引、普通索引，而覆盖索引是一种查询的一种效果，用 explain 的结果，extra 列会出现：using index。</p><p>【推荐】利用延迟关联或者子查询优化超多分页场景。<br>说明：MySQL 并不是跳过 offset 行，而是取 offset+N 行，然后返回放弃前 offset 行，返回 N 行，那当 offset 特别大的时候，效率就非常的低下，要么控制返回的总页数，要么对超过特定阈值的页数进行 SQL 改写。<br>正例：先快速定位需要获取的 id 段，然后再关联：SELECT a.* FROM 表 1 a, (select id from 表 1 where 条件 LIMIT 100000,20) b where a.id=b.id</p><p>【推荐】SQL 性能优化的目标：至少要达到 range 级别，要求是 ref 级别，如果可以是 consts 最好。<br>说明：<br>1）consts 单表中最多只有一个匹配行（主键或者唯一索引），在优化阶段即可读取到数据。<br>2）ref 指的是使用普通的索引（normal index）。<br>3）range 对索引进行范围检索。<br>反例：explain 表的结果，type=index，索引物理文件全扫᧿，速度非常慢，这个 index 级别比较 range 还低，与全表扫᧿是小巫见大巫。</p><p>【推荐】建组合索引的时候，区分度最高的在最左边。<br>正例：如果 where a=? and b=? ，a 列的几乎接近于唯一值，那么只需要单建 idx_a 索引即可。<br>说明：存在非等号和等号混合判断条件时，在建索引时，请把等号条件的列前置。如：where a&gt;?and b=? 那么即使 a 的区分度更高，也必须把 b 放在索引的最前列。</p><p>【参考】创建索引时避免有如下极端误解：<br>1）误认为一个查询就需要建一个索引。<br>2）误认为索引会消耗空间、严重拖慢更新和新增速度。<br>3）误认为唯一索引一律需要在应用层通过 “先查后插” 方式解决。</p><p>三、SQL 规约<br>【强制】不要使用 count (列名) 或 count (常量) 来替代 count ()，count() 就是 SQL92 定义的标准统计行数的语法，跟数据库无关，跟 NULL 和非 NULL 无关。<br>说明：count (*) 会统计值为 NULL 的行，而 count (列名) 不会统计此列为 NULL 值的行。</p><p>【强制】count (distinct col) 计算该列除 NULL 之外的不重复数量。注意 count (distinctcol1, col2) 如果其中一列全为 NULL，那么即使另一列有不同的值，也返回为 0。</p><p>【强制】当某一列的值全是 NULL 时，count (col) 的返回结果为 0，但 sum (col) 的返回结果为 NULL，因此使用 sum () 时需注意 NPE 问题。<br>正例：可以使用如下方式来避免 sum 的 NPE 问题：SELECT IF (ISNULL (SUM (g)),0,SUM (g)) FROM table;</p><p>【强制】使用 ISNULL () 来判断是否为 NULL 值。注意：NULL 与任何值的直接比较都为 NULL。<br>说明：<br>1） NULL&lt;&gt;NULL 的返回结果是 NULL，而不是 false。<br>2） NULL=NULL 的返回结果是 NULL，而不是 true。<br>3） NULL&lt;&gt;1 的返回结果是 NULL，而不是 true。</p><p>【强制】在代码中写分页查询逻辑时，若 count 为 0 应直接返回，避免执行后面的分页语句。</p><p>【强制】不得使用外键与级联，一切外键概念必须在应用层解决。<br>说明：（概念解释）学生表中的 student_id 是主键，那么成绩表中的 student_id 则为外键。如果更新学生表中的 student_id，同时触发成绩表中的 student_id 更新，则为级联更新。外键与级联更新适用于单机低并发，不适合分布式、高并发集群；级联更新是强阻塞，存在数据库更新风暴的风险；外键影响数据库的插入速度。</p><p>【强制】禁止使用存储过程，存储过程难以调试和扩展，更没有移植性。</p><p>【强制】数据订正时，删除和修改记录时，要先 select，避免出现误删除，确认无误才能执行更新语句。</p><p>【推荐】in 操作能避免则避免，若实在避免不了，需要仔细评估 in 后边的集合元素数量，控制在 1000 个之内。</p><p>【参考】如果有全球化需要，所有的字符存储与表示，均以 utf-8 编码，那么字符计数方法注意：<br>说明：<br>SELECT LENGTH (“轻松工作”)； 返回为 12<br>SELECT CHARACTER_LENGTH (“轻松工作”)； 返回为 4<br>如果要使用表情，那么使用 utfmb4 来进行存储，注意它与 utf-8 编码的区别。</p><p>【参考】TRUNCATE TABLE 比 DELETE 速度快，且使用的系统和事务日志资源少，但 TRUNCATE 无事务且不触发 trigger，有可能造成事故，故不建议在开发代码中使用此语句。<br>说明：TRUNCATE TABLE 在功能上与不带 WHERE 子句的 DELETE 语句相同。</p><p>四、ORM 规约<br>【强制】在表查询中，一律不要使用 * 作为查询的字段列表，需要哪些字段必须明确写明。<br>说明：1）增加查询分析器解析成本。2）增减字段容易与 resultMap 配置不一致。</p><p>【强制】POJO 类的 boolean 属性不能加 is，而数据库字段必须加 is_，要求在 resultMap 中进行字段与属性之间的映射。<br>说明：参见定义 POJO 类以及数据库字段定义规定，在 sql.xml 增加映射，是必须的。</p><p>【强制】不要用 resultClass 当返回参数，即使所有类属性名与数据库字段一一对应，也需要定义；反过来，每一个表也必然有一个与之对应。<br>说明：配置映射关系，使字段与 DO 类解耦，方便维护。</p><p>【强制】xml 配置中参数注意使用：#{}，#param# 不要使用 ${} 此种方式容易出现 SQL 注入。</p><p>【强制】iBATIS 自带的 queryForList (String statementName,int start,int size) 不推荐使用。<br>说明：其实现方式是在数据库取到 statementName 对应的 SQL 语句的所有记录，再通过 subList 取 start,size 的子集合，线上因为这个原因曾经出现过 OOM。<br>正例：在 sqlmap.xml 中引入 #start#, #size#<br>Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();<br>map.put(“start”, start);<br>map.put(“size”, size);</p><p>【强制】不允许直接拿 HashMap 与 Hashtable 作为查询结果集的输出。</p><p>【强制】更新数据表记录时，必须同时更新记录对应的 gmt_modified 字段值为当前时间。</p><p>【推荐】不要写一个大而全的数据更新接口，传入为 POJO 类，不管是不是自己的目标更新字段，都进行 update table set c1=value1,c2=value2,c3=value3; 这是不对的。执行 SQL 时，尽量不要更新无改动的字段，一是易出错；二是效率低；三是 binlog 增加存储。</p><p>【参考】@Transactional 事务不要滥用。事务会影响数据库的 QPS，另外使用事务的地方需要考虑各方面的回滚方案，包括缓存回滚、搜索引擎回滚、消息补偿、统计修正等。</p><p>【参考】中的 compareValue 是与属性值对比的常量，一般是数字，表示相等时带上此条件；表示不为空且不为 null 时执行；表示不为 null 值时执行。</p><p>————————————————<br>原文作者：guoke0826<br>转自链接：<a href="https://learnku.com/laravel/t/45456" target="_blank" rel="noopener">https://learnku.com/laravel/t/45456</a><br>版权声明：著作权归作者所有。商业转载请联系作者获得授权，非商业转载请保留以上作者信息和原文链接。</p><blockquote><p>参考地址:</p><p><a href="https://learnku.com/articles/38719" target="_blank" rel="noopener">https://learnku.com/articles/38719</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang-函数</title>
      <link href="/2020/09/16/Golang-%E5%87%BD%E6%95%B0/"/>
      <url>/2020/09/16/Golang-%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="基本了解"><a href="#基本了解" class="headerlink" title="基本了解"></a>基本了解</h3><p> 首先什么是函数呢？为了完成某一功能的程序指令（语句）的集合称为函数，在 Go 语言当中函数分为：自定义函数和系统函数。在 PHP 当中函数属于一等公民，毫无例外在 Go 语言当中函数也是属于一等公民，所以说函数是相当重要的角色。Go 语言函数对比 PHP 的函数的特殊之处在于他可以 return <strong>带有零个或多个参数</strong>；<strong>这些参数将作为返回值</strong>，而 PHP 做不到多返回值（返回一个数组，却还是单一返回值），别说 PHP 大多数语言都无法做到多返回值的效果。</p><p>Go 里面有三种类型的函数：</p><ul><li>普通的带有名字的函数</li><li>匿名函数或者闭包函数</li><li>方法（Methods）</li></ul><blockquote><p>注意：除了  <code>main () 主函数</code>、<code>init () 初始函数</code>外，其它所有类型的函数都可以有参数与返回值。函数参数、返回值以及它们的类型被统称为函数签名。</p></blockquote><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><pre class="line-numbers language-yaml"><code class="language-yaml">fun name (参数列表) (返回值列表) <span class="token punctuation">{</span>        执行的语句<span class="token punctuation">...</span>        return 然后值列表<span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 细节，如果没有返回值那么不用写括号，如果只有一个返回值也不用写括号，多个返回值必须有括号括起来，另外注意：函数中的变量是局部变量，函数外不生效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    result <span class="token operator">:=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"结果为：%d"</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">sum</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-yaml"><code class="language-yaml">结果为：30<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="函数调用和细节"><a href="#函数调用和细节" class="headerlink" title="函数调用和细节"></a>函数调用和细节</h4><pre class="line-numbers language-yam"><code class="language-yam">package.函数名称(参数列表)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意：这里 package 也就是包了，当然同一个包当中不需要加上 package 就跟上面的快速入门一样，不同包之间需要加上 package，比起 PHP<code>-&gt;</code>说实话我更喜欢 <code>.</code> 因为只需要按一个键位！</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/xTk5r1.png" alt></p><ul><li>在调用一个函数时，会给该函数分配一个新的空间，编译器会通过自身的处理，这个新的空间和其他的栈的空间区分开来。</li><li>在每个函数对应的栈中，数据空间是隔离的，不会混淆。</li><li>当一个函数执行完毕后，程序会销毁这个函数对应的栈空间。</li></ul><h4 id="函数使用注意事项"><a href="#函数使用注意事项" class="headerlink" title="函数使用注意事项"></a>函数使用注意事项</h4><p>函数的参数列表可以是多个，返回值列表页可以是多个，并且支持对函数返回值命名</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    a<span class="token punctuation">,</span> b <span class="token operator">:=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"他们的值"</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">sum</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">,</span> c <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>res <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">,</span> <span class="token string">"你好世界"</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 结果：他们的值 6 你好世界</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>函数的命名遵循标识符命名规范，首字母不能是数字，首字母大写该函数可以被本包文件和其它包文件使用，类似 public ，首字母小写，只能被本包文件使用，其他包文件不能使用，类似 privat</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"只能本包使用"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"可以其它包使用"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不支持函数重载（PHP 也不支持函数的重载）,但可以使用别的方式实现（空接口）</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 错误，不支持传统的函数重载，但是可以使用别的方式去实现</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>函数也是一种数据类型，可以赋值给一个变量，则该变量就是一个函数类型的变量，通过该变量可以对函数进行调用</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    b <span class="token operator">:=</span> test    res <span class="token operator">:=</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"res=%v"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 结果：res = 1  </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>函数既然是一种数据类型，因此在 Go 中，函数可以作为形参，并且调用</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    a <span class="token operator">:=</span> <span class="token function">sumFunc</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"a = %v\n"</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">sum</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">sumFunc</span><span class="token punctuation">(</span>a <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">,</span> a1 <span class="token builtin">int</span><span class="token punctuation">,</span> a2 <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">a</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 结果：a = 3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为了简化数据类型定义，Go 支持自定义数据类型，这个在 C 语言当中就有，别的一般语言基本没有这么一个特性，也可以把它理解成为别名，这样就容易理解这个自定义数据类型</p><p>语法：</p><pre class="line-numbers language-yaml"><code class="language-yaml">type 自定义数据类型名 数据类型<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">type</span> myInt <span class="token builtin">int</span> <span class="token comment" spellcheck="true">// 那么现在的 myInt 就是 int 的一个别名，但是 Go 从语法中认为它们还是不同的二个类型</span><span class="token keyword">type</span> myFunc <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span>b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token comment" spellcheck="true">// 一个自定义的函数类型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Go 支持可变参数的传递，它的原理就是 args 是 slice 切片，通过 args[index] 可以访问到各个值</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"sum() = %v"</span><span class="token punctuation">,</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">sum</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> args <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    sum <span class="token operator">:=</span> a    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>        sum <span class="token operator">+=</span> args<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> sum<span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 结果：sum() = 50</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="函数参数的传递方式"><a href="#函数参数的传递方式" class="headerlink" title="函数参数的传递方式"></a>函数参数的传递方式</h4><p>Go 中没有引用传值，包括 <code>slice、map、chan 、interface</code> 在内所有类型，没有传引用的说法。指针也是将指针的值拷贝一份，可以确认的是 Go 语言中所有的传参都是值传递，都是一个副本，一个拷贝。因为拷贝的内容有时候是非引用类型<code>int、string、struct 等这些</code>，这样就在函数中就无法修改原内容数据；有的是引用类型<code>slice、map、chan 、interface</code>，这样就可以修改原内容数据。是否可以修改原内容数据，和传值、传引用没有必然的关系。在 C++ 中，传引用肯定是可以修改原内容数据的，在 Go 语言里，虽然只有传值，但是我们也可以修改原内容数据，因为参数是引用类型。</p><ul><li>值类型：基本数据类型 int 系列、float 系列、bool、string、array、struct</li><li>引用类型：指针、slice、map、chan、interface</li></ul><h3 id="函数递归"><a href="#函数递归" class="headerlink" title="函数递归"></a>函数递归</h3><p>一个函数在函数体内又调用了本身，那么就称之为函数递归。Go 语言支持递归，但在使用递归时，需要设置退出条件，否则递归将陷入无限循环。</p><h4 id="快速入门-1"><a href="#快速入门-1" class="headerlink" title="快速入门"></a>快速入门</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">test</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> n <span class="token operator">></span> <span class="token number">2</span> <span class="token punctuation">{</span>        n<span class="token operator">--</span>        <span class="token function">test</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"当前 n 的值为 %d \n"</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果</p><pre class="line-numbers language-yaml"><code class="language-yaml">当前 n 的值为 2 当前 n 的值为 2 当前 n 的值为 3 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/GI6yKg.png" alt></p><h4 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h4><ul><li>递归必须有退出条件，否则无限循环调用</li><li>执行一个函数时，就会创建一个新的受保护的独立空间（新函数栈）</li><li>函数的局部变量都是独立的，不会互相影响</li><li>当一个函数执行完毕，或者遇到 return 就会返回，尊崇谁调用，就将结果返回给谁，同时当函数执行完毕或者返回时，该函数本身也会自动被系统销毁</li></ul><h4 id="裴波那契数"><a href="#裴波那契数" class="headerlink" title="裴波那契数"></a>裴波那契数</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    result <span class="token operator">:=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"求出的裴波那契数为：%v"</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 1 1 2 3 5 8 13...</span><span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> n <span class="token operator">==</span> <span class="token number">2</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">1</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">f</span><span class="token punctuation">(</span>n<span class="token number">-1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">f</span><span class="token punctuation">(</span>n<span class="token number">-2</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre><code>求出的裴波那契数为：3</code></pre><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><p>Go 支持匿名函数，匿名函数就是没有名字的函数，如果我们某个函数只是希望使用一次，可以考虑使用匿名函数，匿名函数也可以实现多次调用。</p><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><pre class="line-numbers language-yaml"><code class="language-yaml">fun ( 参数列表) (返回值列表) <span class="token punctuation">{</span>        执行的语句<span class="token punctuation">...</span>        return 然后值列表<span class="token punctuation">}</span>(参数列表)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="快速入门-2"><a href="#快速入门-2" class="headerlink" title="快速入门"></a>快速入门</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">var</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 定义全局的匿名函数 乘</span>    Multiply <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> a <span class="token operator">*</span> b    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 在定义匿名函数时直接调用，这中种方式的匿名函数只能调用一次</span>    res1 <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> a <span class="token operator">+</span> b    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"res1 = %v\n"</span><span class="token punctuation">,</span> res1<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 在定义匿名函数时复制给一个变量，那么就可以反复去调用</span>    a <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> a <span class="token operator">+</span> b    <span class="token punctuation">}</span>    res2 <span class="token operator">:=</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"res2 = %v\n"</span><span class="token punctuation">,</span> res2<span class="token punctuation">)</span>    res3 <span class="token operator">:=</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"res3 = %v\n"</span><span class="token punctuation">,</span> res3<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 使用全局的匿名函数</span>    res4 <span class="token operator">:=</span> <span class="token function">Multiply</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"res4 = %v\n"</span><span class="token punctuation">,</span> res4<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-yaml"><code class="language-yaml">res1 = 30res2 = 2res3 = 5res4 = 100<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="闭包函数"><a href="#闭包函数" class="headerlink" title="闭包函数"></a>闭包函数</h3><p>闭包就是一个函数和与其相关的引用环境组合的一个整体（实体）</p><h4 id="快速入门-3"><a href="#快速入门-3" class="headerlink" title="快速入门"></a>快速入门</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    n <span class="token operator">:=</span> <span class="token number">10</span>    <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>        n <span class="token operator">=</span> n <span class="token operator">+</span> x        <span class="token keyword">return</span> n    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 返回一个闭包</span>    f <span class="token operator">:=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 调用闭包</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"第一次的调用%v\n"</span><span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"第二次的调用%v\n"</span><span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"第三次的调用%v\n"</span><span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-yaml"><code class="language-yaml">第一次的调用11第二次的调用13第三次的调用16<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>说明：</p><ol><li>add 是一个函数，返回的数据类型是 func(int) int，返回的是一个匿名函数，但是这个匿名函数引用到外的 n 因此这个匿名函数就和 n 形成一个整体，构成闭包。</li><li>也可以把闭包理解成 PHP 的思想来理解：add 相当于一个类，n 相当于属性，匿名函数相当于方法，属性只会初始化一次，它如果没被改变那么一直都是初始化的值，如果被改变那么它保存这个改变的值。</li><li>简单的来说就是闭包就是：返回的匿名函数它使用（引用）到了外部的变量，外部的变量只会初始化一次，如果被改变那么它保存这个改变的值。</li></ol><h4 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"strings"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">mackSuffix</span><span class="token punctuation">(</span>suffix <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>name <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">HasSuffix</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> suffix<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> name        <span class="token punctuation">}</span>        <span class="token keyword">return</span> name <span class="token operator">+</span> suffix    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 返回一个闭包</span>    f <span class="token operator">:=</span> <span class="token function">mackSuffix</span><span class="token punctuation">(</span><span class="token string">".jpg"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"文件名称是：%v\n"</span><span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token string">"哈哈哈.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"文件名称是：%v\n"</span><span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token string">"哈哈哈.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"文件名称是：%v\n"</span><span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token string">"哈哈哈"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-yaml"><code class="language-yaml">文件名称是：哈哈哈.jpg文件名称是：哈哈哈.png.jpg文件名称是：哈哈哈.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>说明：</p><ol><li>返回的匿名函数和 markSuffix(string suffix) 的 suffix 变量组合成一个闭包，因为返回的函数引用到了 suffix 这个变量。</li><li>闭包的好处，如果使用传统的方法，也可以轻松的去实现这个功能，但是传统方法需要每次都传入后缀名，而闭包因为可以保留上次引用的某个值，所以传入一次就可以反复使用。</li></ol><h3 id="defer"><a href="#defer" class="headerlink" title="defer"></a>defer</h3><p>在函数中，需要基础创建资源（比如：连接数据库，文件句柄，锁等）为了在函数执行完毕后，及时的释放资源，Go 的设计者提供了 defer （延时机制），当程序执行到 defer 时，暂时不执行会将 defer 后面的语句压入到独立的栈中。<strong>当函数执行完毕后，再从 defer 栈，按照先入后出的方式执行</strong>。</p><h4 id="快速入门-4"><a href="#快速入门-4" class="headerlink" title="快速入门"></a>快速入门</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"上面都执行完成了"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">sum</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    <span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"a 等于 %d \n"</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>    <span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"b 等于 %d \n"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>    result <span class="token operator">:=</span> a <span class="token operator">+</span> b    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"a + b 的和是 %d \n"</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-yaml"><code class="language-yaml">a + b 的和是 30 b 等于 20 a 等于 10 上面都执行完成了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="详解-1"><a href="#详解-1" class="headerlink" title="详解"></a>详解</h4><p>当程序执行到 defer 时，暂时不会将 defer 后面的语句执行出来，而是把他压入到 defer 栈当中。栈的特性相信大家都知道：先进后出和队列的特性完全相反。那么就会接着向下执行，执行到第三个 fmt 打印出 <code>a + b 的和是 30</code>接下 return 表示整个函数整个执行完毕了。此时，在回到 defer 栈当中把刚压入栈的取出来，先进后出的执行那么分别就是<code>b 等于 20</code>和<code>a 等于 10</code>。切记一点，defer 的语句会被压栈，执行时也是跟栈的特性一致。</p><blockquote><p>注意：在 defer 语句放入栈时，也会将相关的值拷贝同时入栈，看以下例子。</p></blockquote><h4 id="细节-1"><a href="#细节-1" class="headerlink" title="细节"></a>细节</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"上面都执行完成了"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">sum</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//  defer 语句前改变了他们，那么他们会是改变的，因为在入栈前已经改变了</span>  a<span class="token operator">++</span>    b<span class="token operator">++</span>    <span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"a 等于 %d \n"</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>    <span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"b 等于 %d \n"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// defer 语句后改变了他们，上面二个语句虽然在最后执行，但是在开始时就已经被压入栈了，随同一起压入的还拷贝的值，所有就算在他们之后改变了值也不会影响</span>  a<span class="token operator">++</span>    b<span class="token operator">++</span>    result <span class="token operator">:=</span> a <span class="token operator">+</span> b    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"a + b 的和是 %d \n"</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># defer 语句前改变了他们 结果</span>a + b 的和是 32 b 等于 21 a 等于 11 上面都执行完成了<span class="token comment" spellcheck="true"># defer 语句后改变了他们 结果</span>a + b 的和是 32 b 等于 20 a 等于 10 上面都执行完成了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="defer-的实际应用场景"><a href="#defer-的实际应用场景" class="headerlink" title="defer 的实际应用场景"></a>defer 的实际应用场景</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token comment" spellcheck="true">// 关闭文件流</span><span class="token keyword">defer</span> file<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 解锁一个加锁的资源 </span><span class="token keyword">defer</span> mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 关闭数据库链接</span><span class="token keyword">defer</span> <span class="token function">disconnectFromDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>详解：Go 编程中通常的做法是创建资源后，如（打开了文件，连接了数据，锁资源）可以立即执行 defer 关闭资源。在 defer 后，可继续使用创建的资源。就不需要我们时刻去关注启用了资源，在什么适合的时机关闭资源而烦心，让程序更加的简洁。</p><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><p>每一个源文件都可以包含一个 init 函数，该函数会在 main 函数前执行，被 Go 运行框架调用，也就是说 init 会在 main 函数前被调用，通常它用来做一个初始化的操作。</p><h4 id="快速入门-5"><a href="#快速入门-5" class="headerlink" title="快速入门"></a>快速入门</h4><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"我是 init 函数，我现在被调用了 \n"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"我是 main 函数，我现在被调用了 \n"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-yaml"><code class="language-yaml">我是 init 函数，我现在被调用了 我是 main 函数，我现在被调用了 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="细节-2"><a href="#细节-2" class="headerlink" title="细节"></a>细节</h4><ol><li><p>如果一个源文件同时包含全局变量定义、init 函数、main 函数，则执行的流程是：全局变量定义 &gt; init 函数 &gt; main 函数，它们的权重就是如此。</p></li><li><p>init 函数不能有参数值，与返回值。</p></li><li><p>如果一个包引入了另外一个包，它们都有全局变量定义和 init 函数，执行流程会是怎么样？</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/3A3Zfs.png" alt></p></li></ol><p>### </p>]]></content>
      
      
      <categories>
          
          <category> Golang-学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang-流程控制</title>
      <link href="/2020/09/16/Golang-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
      <url>/2020/09/16/Golang-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/8svyaT.png" alt></p><h3 id="if-else"><a href="#if-else" class="headerlink" title="if-else"></a>if-else</h3><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/cFYUQ3.png" alt></p><h3 id="if-else-if"><a href="#if-else-if" class="headerlink" title="if-else-if"></a>if-else-if</h3><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/lk35QJ.png" alt></p><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/TaL8yA.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/jzPAcA.png" alt></p><blockquote><p>如果 switch 的 case 当中存在 fallthrough 关键词那么不会退出 switch 而会继续执行下面的 case。</p></blockquote><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/QIC5wp.png" alt></p><blockquote><p>初始化，循环条件，迭代，都可以省略</p></blockquote><h4 id="基于条件判断的迭代"><a href="#基于条件判断的迭代" class="headerlink" title="基于条件判断的迭代"></a>基于条件判断的迭代</h4><p>for 结构的第二种形式是没有头部的条件判断迭代（类似其它语言中的 while 循环），基本形式为：for 条件语句 {}。</p><p>您也可以认为这是没有初始化语句和修饰语句的 for 结构，因此 ;; 便是多余的了。</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> i <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">5</span>    <span class="token keyword">for</span> i <span class="token operator">>=</span> <span class="token number">0</span> <span class="token punctuation">{</span>        i <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span>        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"The variable i is now: %d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h4><p>条件语句是可以被省略的，如 i:=0; ; i++ 或 for { } 或 for ;; { }（;; 会在使用 gofmt 时被移除）：这些循环的本质就是无限循环。最后一个形式也可以被改写为 for true { }，但一般情况下都会直接写 for { }。</p><p>如果 for 循环的头部没有条件语句，那么就会认为条件永远为 true，因此循环体内必须有相关的条件判断以确保会在某个时刻退出循环。</p><p>但这两者之间有所区别，break 只是退出当前的循环体，而 return 语句提前对函数进行返回，不会执行后续的代码。</p><p>无限循环</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">for</span> <span class="token punctuation">{</span>    <span class="token operator">...</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="for-range-结构"><a href="#for-range-结构" class="headerlink" title="for-range 结构"></a>for-range 结构</h4><p>这是 Go 特有的一种的迭代结构，您会发现它在许多情况下都非常有用。它可以迭代任何一个集合（包括数组和 map）。语法上很类似其它语言中 foreach 语句，但您依旧可以获得每次迭代所对应的索引。一般形式为：for ix, val := range coll { }。</p><p>要注意的是，val 始终为集合中对应索引的值拷贝，因此它一般只具有只读性质，对它所做的任何修改都不会影响到集合中原有的值（译者注：如果 val 为指针，则会产生指针的拷贝，依旧可以修改集合中的原值）。一个字符串是 Unicode 编码的字符（或称之为 rune）集合，因此您也可以用它迭代字符串：</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    str <span class="token operator">:=</span> <span class="token string">"Go is a beautiful language!"</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"The length of str is: %d\n"</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> pos<span class="token punctuation">,</span> char <span class="token operator">:=</span> <span class="token keyword">range</span> str <span class="token punctuation">{</span>        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Character on position %d is: %c \n"</span><span class="token punctuation">,</span> pos<span class="token punctuation">,</span> char<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 结果</span>The length of str is<span class="token punctuation">:</span> <span class="token number">27</span>Character on position <span class="token number">0</span> is<span class="token punctuation">:</span> G Character on position <span class="token number">1</span> is<span class="token punctuation">:</span> o Character on position <span class="token number">2</span> is<span class="token punctuation">:</span>   Character on position <span class="token number">3</span> is<span class="token punctuation">:</span> i Character on position <span class="token number">4</span> is<span class="token punctuation">:</span> s Character on position <span class="token number">5</span> is<span class="token punctuation">:</span>   Character on position <span class="token number">6</span> is<span class="token punctuation">:</span> a Character on position <span class="token number">7</span> is<span class="token punctuation">:</span>   Character on position <span class="token number">8</span> is<span class="token punctuation">:</span> b Character on position <span class="token number">9</span> is<span class="token punctuation">:</span> e Character on position <span class="token number">10</span> is<span class="token punctuation">:</span> a Character on position <span class="token number">11</span> is<span class="token punctuation">:</span> u Character on position <span class="token number">12</span> is<span class="token punctuation">:</span> t Character on position <span class="token number">13</span> is<span class="token punctuation">:</span> i Character on position <span class="token number">14</span> is<span class="token punctuation">:</span> f Character on position <span class="token number">15</span> is<span class="token punctuation">:</span> u Character on position <span class="token number">16</span> is<span class="token punctuation">:</span> l Character on position <span class="token number">17</span> is<span class="token punctuation">:</span>   Character on position <span class="token number">18</span> is<span class="token punctuation">:</span> l Character on position <span class="token number">19</span> is<span class="token punctuation">:</span> a Character on position <span class="token number">20</span> is<span class="token punctuation">:</span> n Character on position <span class="token number">21</span> is<span class="token punctuation">:</span> g Character on position <span class="token number">22</span> is<span class="token punctuation">:</span> u Character on position <span class="token number">23</span> is<span class="token punctuation">:</span> a Character on position <span class="token number">24</span> is<span class="token punctuation">:</span> g Character on position <span class="token number">25</span> is<span class="token punctuation">:</span> e Character on position <span class="token number">26</span> is<span class="token punctuation">:</span> <span class="token operator">!</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Break-与-continue"><a href="#Break-与-continue" class="headerlink" title="Break 与 continue"></a>Break 与 continue</h3><p>Break 跳出循环，continue 跳过本次循环</p><h3 id="goto"><a href="#goto" class="headerlink" title="goto"></a>goto</h3><p>非到必要不建议用 goto，其基本的使用跟 PHP 当中 goto 一直。goto 严重的影响程序流程结构的控制，所以说没有到必要的时候不建议使用。</p><p>实例：</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">goto</span> START    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>START<span class="token punctuation">:</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 结果：1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序执行的流程是从上至下一行一行的去执行代码，而 goto 却可以跳跃到任何他自己标记的地方，<strong>不管向下还是向上</strong>去执行，所以我觉得 goto 严重的影响程序流程结构的控制。</p>]]></content>
      
      
      <categories>
          
          <category> Golang-学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang-基本结构与类型</title>
      <link href="/2020/09/16/Golang-%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/09/16/Golang-%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h3><p>Go 语言中的函数名、变量名、常量名、类型名、语句标号和包名等所有的命名，都遵循一个简单的命名规则：<strong>一个名字必须以一个字母（Unicode字母）或下划线开头，后面可以跟任意数量的字母、数字或下划线。</strong></p><p>Go 语言中类似 if 和 switch 的关键字有25个；关键字不能用于自定义名字，只能在特定语法结构中使用。</p><pre class="line-numbers language-yaml"><code class="language-yaml">break      default       func     interface   selectcase       defer         go       map         structchan       else          goto     package     switchconst      fallthrough   if       range       typecontinue   for           import   return      var<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此外，还有大约 30 多个预定义的名字，比如 int 和 true 等，主要对应内建的常量、类型和函数。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">内建常量</span><span class="token punctuation">:</span>  true false iota nil<span class="token key atrule">内建类型</span><span class="token punctuation">:</span>  int int8 int16 int32 int64          uint uint8 uint16 uint32 uint64 uintptr          float32 float64 complex128 complex64          bool byte rune string error<span class="token key atrule">内建函数</span><span class="token punctuation">:</span>  make len cap new append copy close delete          complex real imag          panic recover<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这些内部预先定义的名字并不是关键字，你可以在定义中重新使用它们。在一些特殊的场景中重新定义它们也是有意义的，但是也要注意避免过度而引起语义混乱。</p><blockquote><p>当标识符（包括常量、变量、类型、函数名、结构字段等等）以一个大写字母开头，如：Echo，那么使用这种形式的标识符的对象就可以被外部包的代码所使用（需要先 import 导入这个包），这被称为<code>导出</code>（像面向对象语言中的 public ）；标识符如果以小写字母开头，则对包外是不可见的，但是他们在整个包的内部是可见并且可用的（像面向对象语言中的 private ）。名字的长度没有逻辑限制，但是 Go 语言的风格是尽量使用短小的名字。如果一个名字的作用域比较大，生命周期也比较长，那么用长的名字将会更有意义。Go 在习惯上推荐使用驼峰命令法。</p></blockquote><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>Go 是一门强类型语言，但是 Go 也提供了类型推导，在我的认知当中，只要声明时没有类型只有表达式，那么就属于类型推导。</p><h4 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量</h4><p>语法：类型和表达式可以省略其中一个，但不能二个都省略。</p><pre class="line-numbers language-yaml"><code class="language-yaml">var 变量名字 <span class="token punctuation">[</span>类型<span class="token punctuation">]</span> = 表达式<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果省略的是<code>类型</code>信息，那么将根据初始化表达式值来推导变量的类型信息。</p><pre class="line-numbers language-yaml"><code class="language-yaml">var a = 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果初始化<code>表达式</code>被省略，那么将用零值初始化该变量，因为在 Go 在声明变量时，<strong>内存当中就已经对这个变量进行了初始化操作</strong>。数值类型变量对应的零值是 0，布尔类型变量对应的零值是 false，字符串类型对应的零值是空字符串，接口或引用类型（包括 slice、指针、map、chan 和函数）变量对应的零值是 nil。数组或结构体等聚合类型对应的零值是每个元素或字段都是对应该类型的零值。</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">var</span> a <span class="token builtin">string</span><span class="token keyword">var</span> b <span class="token builtin">int</span><span class="token keyword">var</span> c <span class="token builtin">float32</span>fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// ""、0、0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>零值初始化机制可以确保每个声明的变量总是有一个良好定义的值，因此在 Go 语言中不存在未初始化的变量。这个特性可以简化很多代码，而且可以在没有增加额外工作的前提下确保边界条件下的合理行为。另外需要注意一点，当声明一个变量，那么当前程序中就必须去使用这个变量，否则报错。还是 Go 的格言：没有不必要的代码。</p><p>Go 声明变量非常多元化，除了以上声明变量的方法，还有以下声明变量的方法：</p><pre class="line-numbers language-go"><code class="language-go"><span class="token comment" spellcheck="true">// 一组声明多个，省略表达式</span><span class="token keyword">var</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c <span class="token builtin">int</span> <span class="token comment" spellcheck="true">// 0、0、0 int int int</span><span class="token comment" spellcheck="true">// 一组声明多个，省略类型</span><span class="token keyword">var</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"你好世界"</span><span class="token punctuation">,</span><span class="token number">3.1415</span> <span class="token comment" spellcheck="true">// int string float64</span><span class="token comment" spellcheck="true">// 分组声明</span><span class="token keyword">var</span> <span class="token punctuation">(</span>      a <span class="token builtin">int</span>    b <span class="token operator">=</span> <span class="token string">"你好世界"</span>    c <span class="token operator">=</span> <span class="token number">3.1415</span>    d <span class="token punctuation">,</span>e <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// int string float64 bool bool</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：<strong>在包级别声明的变量（全局变量）会在 main 入口函数执行前完成初始化</strong>，<strong>局部变量将在声明语句被执行到的时候完成初始化</strong>。</p><h4 id="类型推导"><a href="#类型推导" class="headerlink" title="类型推导"></a>类型推导</h4><p>Go 语言当中除了 <code>var</code> 来声明变量，还可以使用 <code>:=</code>来声明变量，更加的简洁。<code>:=</code>也叫做类型推导声明变量。</p><p>语法：不能省略任何的东西，因为它已经是最简洁的声明方式了。请记住<code>:=</code>是一个变量声明语句，而<code>=</code>是一个变量赋值操作。</p><pre class="line-numbers language-yaml"><code class="language-yaml">变量名字 <span class="token punctuation">:</span>= 表达式<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>它也支持一组多个声明，<strong>但是没有分组声明</strong>。</p><pre class="line-numbers language-go"><code class="language-go">变量名字，变量名字，变量名字 <span class="token operator">:=</span> 表达式，表达式，表达式<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h4><p><code>var</code> 声明可以在包内部声明（ import 下），简洁声明不可以在包内部声明（ import 下）。<code>var</code> 在包内部声明的变量全局可以使用，而简洁声明只有在其声明的内部使用。</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">var</span> a <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">100</span> <span class="token comment" spellcheck="true">// 全局可以使用</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    b <span class="token operator">:=</span> <span class="token number">100</span> <span class="token comment" spellcheck="true">// 只能在 main 函数当中使用</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>var</code> 声明和简洁声明，如果是在相同的作用域下他们不能声明相同变量，如在相同的函数体当中。如果 var 是在包内部声明，在函数体内部使用简洁声明一个相同的变量，那么此时就是赋值。<strong>相同作用域下不能存在二个相同的变量！</strong></p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> a <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">100</span>    a <span class="token operator">:=</span> <span class="token number">10000</span> <span class="token comment" spellcheck="true">// 错误声明</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ...</span><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">var</span> a <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">100</span> <span class="token comment" spellcheck="true">// 全局变量</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    a <span class="token operator">:=</span> <span class="token number">100000</span> <span class="token comment" spellcheck="true">// 局部变量，他们作用域完全不一样，此时正确声明</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>常量使用 <code>const</code>修饰，<strong>代表永远只读，不能修改。常量是在编译期间就已确定其值，之后永远不可修改</strong>！常量的类型只能是：数字类型（包括整型，浮点型，和复数类型）、布尔类型、字符串类型等。常量的表达式的值也是可以一些特定的内建函数，因为常量只要在声明时能确定其值，那么就属于有效定义的常量。</p><h4 id="声明常量"><a href="#声明常量" class="headerlink" title="声明常量"></a>声明常量</h4><p>语法：类型可以省略，因为可以表达式的值自动类型推导，但是表达式不可省略，<strong>定义常量时常量的表达式的值必须是在编译时就可以确定的值，否则编译无法通过。</strong></p><pre class="line-numbers language-yaml"><code class="language-yaml">const 常量名称 <span class="token punctuation">[</span>类型<span class="token punctuation">]</span> = 表达式<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>分组声明：</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">const</span><span class="token punctuation">(</span>    a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>  b <span class="token operator">=</span> <span class="token string">'string'</span><span class="token punctuation">,</span>  c <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="类型推导-1"><a href="#类型推导-1" class="headerlink" title="类型推导"></a>类型推导</h4><p>语法：注意：常量跟变量的推导类型不一样，常量是 <code>=</code> 而变量是 <code>:=</code>不能搞混了。</p><pre class="line-numbers language-yam"><code class="language-yam">const 常量名称 = 表达式<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="枚举声明"><a href="#枚举声明" class="headerlink" title="枚举声明"></a>枚举声明</h4><p>语法：第一个 iota 等于 0，<strong>每当 iota 在新的一行被使用时，它的值都会自动加 1</strong>；所以 a=0, b=1, c=2 可以简写为如下形式</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">const</span> <span class="token punctuation">(</span>    a <span class="token operator">=</span> <span class="token boolean">iota</span>    b    c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="作用域-1"><a href="#作用域-1" class="headerlink" title="作用域"></a>作用域</h4><p>常量可以在包内（import）下面，或函数内部声明常量，当然他们二个现在的作用域完全不一样，包内属于全局常量而函数内就是局部常量。</p><h3 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h3><h4 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h4><p>bool 默认为 float，并且布尔型的值只可以是 true 或者 false，两个类型相同的值可以使用相等 == 或者不等 != 运算符来进行比较并获得一个布尔型的值。</p><h4 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h4><p>整数：</p><ul><li>int8（-128 -&gt; 127）</li><li>int16（-32768 -&gt; 32767）</li><li>int32（-2,147,483,648 -&gt; 2,147,483,647）</li><li>int64（-9,223,372,036,854,775,808 -&gt; 9,223,372,036,854,775,807）</li></ul><p>无符号整数：</p><ul><li>uint8（0 -&gt; 255）</li><li>uint16（0 -&gt; 65,535）</li><li>uint32（0 -&gt; 4,294,967,295）</li><li>uint64（0 -&gt; 18,446,744,073,709,551,615）</li></ul><p>浮点型（IEEE-754 标准）：</p><ul><li>float32（+- 1e-45 -&gt; +- 3.4 * 1e38）</li><li>float64（+- 5  1e-324 -&gt; 107  1e308）</li></ul><p>复数</p><ul><li>complex64 (32 位实数和虚数)</li><li>complex128 (64 位实数和虚数)</li><li>复数表示：2 + 2i</li></ul><p>int 型是计算最快的一种类型。整型的零值为 0，浮点型的零值为 0.0。float32 精确到小数点后 7 位，float64 精确到小数点后 15 位。由于精确度的缘故，你在使用 == 或者 != 来比较浮点数时应当非常小心。你最好在正式使用前测试对于精确度要求较高的运算。</p><h4 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h4><p>byte 严格来说，这并不是 Go 语言的一个类型，字符只是整数的特殊用例。byte 类型是 uint8 的别名，对于只占用 1 个字节的传统 ASCII 编码的字符来说，完全没有问题。例如：var ch byte = ‘A’；字符使用单引号括起来。字符类型 <code>‘’</code> 表示，输出的是 ascll 码的数值。</p><h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><p>string 字符串类型 <code>“”</code> 表示。字符串是 UTF-8 字符的一个序列（当字符为 ASCII 码时则占用 1 个字节，其它字符根据需要占用 2-4 个字节）。UTF-8 是被广泛使用的编码格式，是文本文件的标准编码，其它包括 XML 和 JSON 在内，也都使用该编码。由于该编码对占用字节长度的不定性，Go 中的字符串也可能根据需要占用 1 至 4 个字节（示例见第 4.6 节），这与其它语言如 C++、Java 或者 Python 不同（Java 始终使用 2 个字节）。Go 这样做的好处是不仅减少了内存和硬盘空间占用，同时也不用像其它语言那样需要对使用 UTF-8 字符集的文本进行编码和解码。<br>字符串是一种值类型，且值不可变，即创建某个文本后你无法再次修改这个文本的内容；更深入地讲，字符串是字节的定长数组。</p><h3 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h3><h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/fqPo01.png" alt>  <img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/N1h2bN.png" alt></p><blockquote><p>Go 语言当中，没有：– a ++a ，这样操作。不像 PHP <strong>符号在前那么就是先运算在赋值</strong>，<strong>如果符号在后那么就是先赋值在运算</strong>，Go 当中只写在后面，只表示自增或者自减。</p></blockquote><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/GX6PLE.png" alt></p><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/qAOcIU.png" alt></p><h4 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/qkFzxT.png" alt></p><h4 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/suW9Ix.png" alt></p><h4 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/X2tsoT.png" alt></p><ul><li>sizeof 是获取变量占内存的大小，unsafe.Sizeof(a)</li></ul>]]></content>
      
      
      <categories>
          
          <category> Golang-学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang-环境搭建</title>
      <link href="/2020/09/16/Golang%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BD%A0%E5%A5%BDGolang/"/>
      <url>/2020/09/16/Golang%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BD%A0%E5%A5%BDGolang/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>Go 是一门全新的语言。尽管它从现有的语言中借鉴了许多理念，但其与众不同的特性， 使得使用 Go 编程在本质上就不同于其它语言。做为 PHP 开发人员，第二门语言选 Go 的同撩还是比较多，从此可以论证 Go 还是非常值得学习！</p><h3 id="语言特性"><a href="#语言特性" class="headerlink" title="语言特性"></a>语言特性</h3><ul><li><p>垃圾回收（GC）</p><ul><li>内存自动回收，再也不需要开发人员管理内存</li><li>开发人员专注业务实现，降低了心智负担</li><li>只需要new分配内存，不需要释放</li></ul></li><li><p>天然并发</p><ul><li><p>从语言面支持并发，非常简单</p></li><li><p>goroute，轻量级<strong>协程</strong>，创建成千上五个 goroute 成为可能 </p></li></ul></li><li><p>channel</p><ul><li>管道，类似 unix/linux 中的 pipe</li><li>多个 goroute 之间通过 channel 进行通信</li><li>支持任何类型</li></ul></li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 从 Go 语言中文网：https://studygolang.com/dl 根据自己系统下载 Go 软件包</span><span class="token function">sudo</span> <span class="token function">tar</span> -xzf go1.13.6.linux-amd64.tar.gz -C /usr/local<span class="token comment" spellcheck="true"># 建立软连接</span><span class="token function">sudo</span> <span class="token function">ln</span> -s /usr/local/go/bin/* /usr/bin/<span class="token comment" spellcheck="true"># 测试</span>go version<span class="token comment" spellcheck="true"># go version go1.15 darwin/amd64 , 正常情况下就可以看见这样信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Linux 如果是zsh,就把/.bashrc 改成 /.zshr</span><span class="token function">sudo</span> vim ~/.bashrc<span class="token function">export</span> GOROOT<span class="token operator">=</span>/usr/local/go   <span class="token comment" spellcheck="true"># 表示 Go 在你的电脑上的安装位置，有些安装包会自动设置默认的 goroot</span><span class="token function">export</span> GOPATH<span class="token operator">=</span><span class="token variable">$HOME</span>/go-work   <span class="token comment" spellcheck="true"># 默认安装包的路径,把默认路径换成自己的路径</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$GOROOT</span>/bin:<span class="token variable">$GOPATH</span>/bin<span class="token comment" spellcheck="true"># 使配置文件生效，这里有个大坑，千万别用 fish 里面执行它一直报错，人都差点搞死了</span><span class="token function">source</span> ~/.bashrc　<span class="token comment" spellcheck="true"># mac os 设置环境变量</span>vim ~/.bash_profile<span class="token function">export</span> GOPATH<span class="token operator">=</span>/Users/daixianjin/Desktop/go<span class="token function">export</span> GOBIN<span class="token operator">=</span><span class="token variable">$GOPATH</span>/bin<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$GOBIN</span><span class="token function">export</span> GOMODCACHE<span class="token operator">=</span>/Users/daixianjin/Desktop/go/pkg<span class="token comment" spellcheck="true"># 立即生效</span><span class="token function">source</span> .bash_profile<span class="token comment" spellcheck="true"># 发现关闭终端后立马失效，在 ~/.zshrc 文件最后，增加一行：</span><span class="token function">source</span> ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="查看环境变量"><a href="#查看环境变量" class="headerlink" title="查看环境变量"></a>查看环境变量</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># go env 查看 Go 环境变量</span>go <span class="token function">env</span>GO111MODULE<span class="token operator">=</span><span class="token string">"on"</span>GOARCH<span class="token operator">=</span><span class="token string">"amd64"</span>GOBIN<span class="token operator">=</span><span class="token string">"/Users/daixianjin/Desktop/go/bin"</span>GOCACHE<span class="token operator">=</span><span class="token string">"/Users/daixianjin/Library/Caches/go-build"</span>GOENV<span class="token operator">=</span><span class="token string">"/Users/daixianjin/Library/Application Support/go/env"</span>GOEXE<span class="token operator">=</span><span class="token string">""</span>GOFLAGS<span class="token operator">=</span><span class="token string">""</span>GOHOSTARCH<span class="token operator">=</span><span class="token string">"amd64"</span>GOHOSTOS<span class="token operator">=</span><span class="token string">"darwin"</span>GOINSECURE<span class="token operator">=</span><span class="token string">""</span>GOMODCACHE<span class="token operator">=</span><span class="token string">"/Users/daixianjin/Desktop/go/pkg"</span>GONOPROXY<span class="token operator">=</span><span class="token string">""</span>GONOSUMDB<span class="token operator">=</span><span class="token string">""</span>GOOS<span class="token operator">=</span><span class="token string">"darwin"</span>GOPATH<span class="token operator">=</span><span class="token string">"/Users/daixianjin/Desktop/go"</span>GOPRIVATE<span class="token operator">=</span><span class="token string">""</span>GOPROXY<span class="token operator">=</span><span class="token string">"https://goproxy.cn"</span>GOROOT<span class="token operator">=</span><span class="token string">"/usr/local/go"</span>GOSUMDB<span class="token operator">=</span><span class="token string">"sum.golang.org"</span>GOTMPDIR<span class="token operator">=</span><span class="token string">""</span>GOTOOLDIR<span class="token operator">=</span><span class="token string">"/usr/local/go/pkg/tool/darwin_amd64"</span>GCCGO<span class="token operator">=</span><span class="token string">"gccgo"</span>AR<span class="token operator">=</span><span class="token string">"ar"</span>CC<span class="token operator">=</span><span class="token string">"clang"</span>CXX<span class="token operator">=</span><span class="token string">"clang++"</span>CGO_ENABLED<span class="token operator">=</span><span class="token string">"1"</span>GOMOD<span class="token operator">=</span><span class="token string">"/dev/null"</span>CGO_CFLAGS<span class="token operator">=</span><span class="token string">"-g -O2"</span>CGO_CPPFLAGS<span class="token operator">=</span><span class="token string">""</span>CGO_CXXFLAGS<span class="token operator">=</span><span class="token string">"-g -O2"</span>CGO_FFLAGS<span class="token operator">=</span><span class="token string">"-g -O2"</span>CGO_LDFLAGS<span class="token operator">=</span><span class="token string">"-g -O2"</span>PKG_CONFIG<span class="token operator">=</span><span class="token string">"pkg-config"</span>GOGCCFLAGS<span class="token operator">=</span><span class="token string">"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/jg/7hbx9k8d18qdp5z6f0ddlsr00000gp/T/go-build058590651=/tmp/go-build -gno-record-gcc-switches -fno-common"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>GOPATH 对于现在的 Go 语言来说不晓得也没关系，现在官方推荐 Go module 跟 Composer 有点相像！</p></blockquote><h4 id="Go-Module"><a href="#Go-Module" class="headerlink" title="Go Module"></a>Go Module</h4><p>Go module 是 Go 官方自带的 Go 依赖管理库（感觉跟 Composer 很像），在 1.13 版本正式推荐使用。Go module 可以将某个项目(文件夹)下的所有依赖整理成一个 go.mod 文件，里面写入了依赖的版本等。使用 Go module 之后我们可不用将代码放置在 src下了。</p><h5 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 设置环境变量，开启 Go module</span><span class="token function">export</span> GO111MODULE<span class="token operator">=</span>on<span class="token comment" spellcheck="true"># 换成国内代理，如果不换，你会体验到什么是超级漫长的等待...</span><span class="token function">export</span> GOPROXY<span class="token operator">=</span>https://goproxy.cn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 随便在任何一个位置创建一个新的项目</span><span class="token function">mkdir</span> learn<span class="token comment" spellcheck="true"># 初始化,会在当前目录下生成一个 go.mod 文件并且为空</span>go mod init learn<span class="token comment" spellcheck="true"># 检查依赖，tidy 会检测该文件夹目录下所有引入的依赖,拉取缺少的模块，移除不用的模块</span>go mod tidy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/YXnld7.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/suQjZ4.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/F6CxaN.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/TZw9bM.png" alt></p><blockquote><p>当然，可以不用 tidy 检查依赖，直接 <code>go build main.go</code> 或者 <code>go run main.go</code> 也会自动把依赖导入好，所以 go module 你值得拥有，官方都在推了，那还等什么赶快用起来。</p></blockquote><h5 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 导入依赖</span>go mod vendor<span class="token comment" spellcheck="true"># 执行此命令，会将刚才下载至 GOPATH 下的依赖转移至该项目根目录下的 vendor(自动新建) 文件夹下</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/JwlZWl.png" alt></p><h5 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 将会升级到最新的次要版本或者修订版本(x.y.z, z是修订版本号， y是次要版本号)</span>go get -u <span class="token comment" spellcheck="true"># 将会升级到最新的修订版本</span>go get -u<span class="token operator">=</span>patch <span class="token comment" spellcheck="true"># 将会升级到指定的版本号 version</span>go get package@version <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h5><pre class="line-numbers language-bash"><code class="language-bash">go mod init  <span class="token comment" spellcheck="true"># 初始化 go.mod</span>go mod tidy  <span class="token comment" spellcheck="true"># 更新依赖文件</span>go mod download  <span class="token comment" spellcheck="true"># 下载依赖的 module 到本地 cache</span>go mod vendor  <span class="token comment" spellcheck="true"># 将依赖转移至本地的 vendor 文件</span>go mod edit  <span class="token comment" spellcheck="true"># 手动修改依赖文件</span>go mod graph  <span class="token comment" spellcheck="true"># 打印依赖图</span>go mod verify  <span class="token comment" spellcheck="true"># 校验依赖</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="Goland-设置-Go-module"><a href="#Goland-设置-Go-module" class="headerlink" title="Goland 设置 Go module"></a>Goland 设置 Go module</h5><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/20200818223505.png" alt></p><h4 id="Go-fmt"><a href="#Go-fmt" class="headerlink" title="Go fmt"></a>Go fmt</h4><h5 id="手动代码格式"><a href="#手动代码格式" class="headerlink" title="手动代码格式"></a>手动代码格式</h5><p>代码格式工具，我个人觉得非常好，不需要再去争论代码风格上面的各种问题了，也不需要去适应同事的风格，一个命令轻松搞定，简单快乐！</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 代码风格格式化，但是只是格式化输出</span>gofmt dev.go<span class="token comment" spellcheck="true"># 代码风格格式化，直接格式整个项目的代码，并且重新编排项目代码</span>gofmt -w dev.go<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="Goland-设置-Go-fmt"><a href="#Goland-设置-Go-fmt" class="headerlink" title="Goland 设置 Go fmt"></a>Goland 设置 Go fmt</h5><p>首先，得保证安装了一个叫做 ”File Watchers” 的插件，并设置为启用状态：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/oTQO1A.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/S88pdN.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/5QBrf8.png" alt></p><blockquote><p>配置好了 Go fmt 按 command + s 保存后，代码自动格式化。非常舒服！</p></blockquote><h3 id="国际惯例"><a href="#国际惯例" class="headerlink" title="国际惯例"></a>国际惯例</h3><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"你好世界"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Go 语言的代码通过<strong>包</strong>（package）组织，包类似于其它语言里的库（libraries）或者模块（modules）。也就是说程序一开始，就要声明这个程序属于哪个包。一个包由位于单个目录下的一个或多个<code>.go</code>源代码文件组成, 目录定义包的作用。每个源文件都以一条<code>package</code>声明语句开始，紧跟着一系列导入（import）的包，之后是存储在这个文件里的程序语句。</p><h3 id="包的概念"><a href="#包的概念" class="headerlink" title="包的概念"></a>包的概念</h3><p>从以上可得知 Go 语言其实就是包组成，那么包的概念就必须清晰明了，这是 Go 语言开头的第一步。首先来看下一个包的结构：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/JwaPtb.png" alt></p><p>这是一个简单结构，先刨除 src 不看。可以看见 <code>a.go</code> 和 <code>b.go</code>他们二个在 <code>learn07</code>目录下，那么也就是一个包由位于单个目录下的一个或多个<code>.go</code>源代码文件组成。而 另外二个<code>a.go</code> 和 <code>b.go</code> 他们二个在<code>api</code>目录下也就是相同道理。虽然说他们都叫<code>a 和 b</code>但他们完全是属于二个不通的目录，Go 语言的包其实就是这么简单理解就好。</p><h4 id="包的调用"><a href="#包的调用" class="headerlink" title="包的调用"></a>包的调用</h4><p>在理解包的调用之前先了解 Go 的一些机制。</p><ul><li><p>同一个包的包名必须一致，另外同个包当中的全局变量，全局常量，方法等等都是公用。相当于是一个大源文件，然后拆分成多个源文件，实则都是这个大源文件。</p></li><li><p>在 Go 语言当中大写开头（Age）就是表示导出包，可以被外部调用也就相当于 PHP 当中的 public，而小写开头（name）表示，相当于 PHP 当中的 private 不可以被外部所调用。包之间要相互使用那么就必须 import 要使用的包，同一个包之间相互使用可以省略 import 和大小写的问题，因为他们都在相同目录下，并且都属于 同一个包。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/RCXyuy.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/zPbv8T.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/ePXLks.png" alt></p><blockquote><p>从上面可以看到 a 和 b 同属于 main 包，所以他们相互之间调用无需 import 也不需关注大写小写是否可以被调用的问题，但是编译时必须把使用的包全部编译否则报错。如果 <code>learn07</code>下面的 a.go 要调用 <code>api</code> 当中的 a.go 和 b.go 那么他首先需要 import 其次如果 a.go 和 b.go 当中存在小写方法，那么<code>learn07</code>下面的 a.go 也无法调用他们之间的小写方法。</p></blockquote><h4 id="特殊的-main-包"><a href="#特殊的-main-包" class="headerlink" title="特殊的 main 包"></a>特殊的 main 包</h4><p>main 包在 Go 语言当中是一个特殊的存在，实际意义上他并不是一个包不能被 import，他定义了一个独立可执行的程序。main 包当中的 main 函数就是整个程序执行的入口了，也叫 main 主函数，一般 main 主函数当中会调用其它很多函数完成工作。<strong>只有 main 包才可以被编译，其他都包只能被 import，相同目录下 main 包可以有多个，但是 main 包当中的 main 主函数有且只能有一个，并且 main 主函数不能有参数与返回值！！！</strong></p><h4 id="特殊的-init-函数"><a href="#特殊的-init-函数" class="headerlink" title="特殊的 init 函数"></a>特殊的 init 函数</h4><p>每个包当中都可以包含一个 init 函数，这个 init 函数在 main 主函数调用之前就会自动被 Go 运行框架调用，init 的优先级高于 main 主函数，init 函数跟 main 函数一样不能有参数和返回值。</p><h4 id="需要遵循的规定"><a href="#需要遵循的规定" class="headerlink" title="需要遵循的规定"></a>需要遵循的规定</h4><p>首先要注意一点，package 先 ，import 后，<strong>他们不能颠倒位置</strong>，package <strong>只能有一个而不能多个</strong>，import 可以有多个。其次如果说 import 导入了包，那么你都必须去使用导入的包，不然编译无法通过，这正是遵循了 Go 的格言：“没有不必要的代码！“。Go 的语法要求特别的严格，在 package 和 import 之后，才可以定义 函数、常亮、变量、类型的程序声明语句。程序声明语句他们没有顺序要求，可以随心所欲来！Go 语言不需要在语句或者声明的末尾添加分号，除非一行上有多条语句。如：for，if 等。实际上，编译器会主动把特定符号后的换行符转换为分号, 因此换行符添加的位置会影响 Go 代码的正确解析。</p><h3 id="编译程序"><a href="#编译程序" class="headerlink" title="编译程序"></a>编译程序</h3><p>Go 是一门编译型语言，Go 语言的工具链将源代码及其依赖转换成计算机的机器指令（译注：静态编译）。 Go 语言提供的工具都通过一个单独的命令 Go 调用，Go 命令有一系列子命令。最简单的一个子命令就是 run。这个命令编译一个或多个以 <code>.go</code> 结尾的源文件，链接库文件，并运行最终生成的可执行文件。注意：Go 语言编译代码是一行一行的编译，所以一行只能写一句代码，不能一行写多句代码，否则报错！</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 编译并运行源文件</span>go run hello.go<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>编译生成一个可执行文件，在 Windows 下会生成一个 <code>.exe</code>文件，OS X  和 Linux 下会成才一个二进制文件，可以直接运行，Go 编译后不依附环境，但是需要相同的平台才能运行。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 编译成可执行的二进制文件</span>go build hello.go<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p> 如果使用了 Go module 那么<code>go build main.go</code> 或者 <code>go run main.go</code> 会自动把依赖导入好。</p></blockquote><h3 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h3><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/ST6956.png" alt></p><p><strong>特殊：%v 可以代表任意类型</strong></p><p>实例一：</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    age <span class="token operator">:=</span> <span class="token number">24</span>    name <span class="token operator">:=</span> <span class="token string">"小明"</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"姓名是：%d 年龄是：%s"</span><span class="token punctuation">,</span> age<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-yam"><code class="language-yam">姓名是：24 年龄是：小明<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>实例二：</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    age <span class="token operator">:=</span> <span class="token number">24</span>    name <span class="token operator">:=</span> <span class="token string">"小明"</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"姓名是：%v 年龄是：%v"</span><span class="token punctuation">,</span> age<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-yaml"><code class="language-yaml">姓名是：24 年龄是：小明<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>实例三：标准变量输出</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    age <span class="token operator">:=</span> <span class="token number">24</span>    name <span class="token operator">:=</span> <span class="token string">"道法自然"</span>    result <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"年龄-%v 姓名-%v"</span><span class="token punctuation">,</span> age<span class="token punctuation">,</span> name<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"变量赋值标准输出: %v 现在变量的类型 %T"</span><span class="token punctuation">,</span> result<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">变量赋值标准输出</span><span class="token punctuation">:</span> 年龄<span class="token punctuation">-</span>24 姓名<span class="token punctuation">-</span>道法自然 现在变量的类型 string<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>实例四：标准输入</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> age <span class="token builtin">int</span>    <span class="token keyword">var</span> name <span class="token builtin">string</span>    fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">"\n 请输入您的年龄："</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>age<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">"\n 请输入您的姓名："</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>name<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"\n 您输入的年龄为：%v 您输入的姓名为：%v"</span><span class="token punctuation">,</span> age<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-yam"><code class="language-yam">请输入您的年龄：24请输入您的姓名：道法自然您输入的年龄为：24 您输入的姓名为：道法自然<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>常用的转义字符有以下几个:</p><ul><li>\t: 表示一个制表符(tab), 通常可以使用它进行排版; </li><li>\n: 表示一个换行符; </li><li>: 表示一个反斜线; </li><li>“: 表示一个”; </li><li>\r: 表示一个回车(从当前行的最前面开始输出,覆盖以前的内容); </li></ul><p>实例：</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">"你好世界 \n我很好"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-yaml"><code class="language-yaml">你好世界 我很好<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Golang-学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大战-vue-element-admin</title>
      <link href="/2020/08/28/%E5%A4%A7%E6%88%98-Vue/"/>
      <url>/2020/08/28/%E5%A4%A7%E6%88%98-Vue/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>说真的，叫一个毛前端都不会的后端去整前端，那个难受得呀是真的非常难顶。一路走来，不是在踩坑就是走在坑的路上。vue-element-admin 官方文档真的不顶，反正我个人是这么感觉，拿我们 Laravel 文档来说，真的不要太好太好，一切清清楚楚一目了然！呸，菜是原罪！好像没毛病…菜确实是原罪！自己写前端了，突然发现以前只管写好接口扔给前端不管不顾，有些…真正自己开始着手操作了发现都不容易呀！开篇文章记录下心路历程，走向进阶之路。</p><blockquote><p>反正我个人观点 - 不懂：百度 + 谷歌 + 动手 + 问人 = 答案！</p></blockquote><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p>我感觉这是非常重要的一个环节，一定要先了解目录结构才能更好的去使用，</p><pre><code>├── build                      # 构建相关├── mock                       # 项目mock 模拟数据├── plop-templates             # 基本模板├── public                     # 静态资源│   │── favicon.ico            # favicon图标│   └── index.html             # html模板├── src                        # 源代码│   ├── api                    # 所有请求│   ├── assets                 # 主题 字体等静态资源│   ├── components             # 全局公用组件│   ├── directive              # 全局指令│   ├── filters                # 全局 filter│   ├── icons                  # 项目所有 svg icons│   ├── lang                   # 国际化 language│   ├── layout                 # 全局 layout│   ├── router                 # 路由│   ├── store                  # 全局 store管理│   ├── styles                 # 全局样式│   ├── utils                  # 全局公用方法│   ├── vendor                 # 公用vendor│   ├── views                  # views 所有页面│   ├── App.vue                # 入口页面│   ├── main.js                # 入口文件 加载组件 初始化等│   └── permission.js          # 权限管理├── tests                      # 测试├── .env.xxx                   # 环境变量配置├── .eslintrc.js               # eslint 配置项├── .babelrc                   # babel-loader 配置├── .travis.yml                # 自动化CI配置├── vue.config.js              # vue-cli 配置├── postcss.config.js          # postcss 配置└── package.json               # package.json</code></pre><h5 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h5><ul><li>集成版本： <a href="https://github.com/PanJiaChen/vue-element-admin" target="_blank" rel="noopener">vue-element-admin</a></li><li>基础版本：<a href="https://github.com/PanJiaChen/vue-admin-template" target="_blank" rel="noopener">vue-admin-template</a></li></ul><p>当然不止这二个版本，还有别的版本，现目前使用的就是集成版本，集成和基础感觉都大同小异。</p><h4 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h4><p><code>src/router</code>就是存放路由的地方，在入口文件 main.js 会加载路由。</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/8siL2i.png" alt></p><p>可以看见，router 下面有 modules 和 index.js ，index.js 应该是路由的入口，modules 应该属于分组路由。</p><p>大概的了解下，index.js 路由的加载，路由这块看不懂就非常恼火。</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 没有权限要求的基本页面，可以访问所有角色，相当于公共的路由</span><span class="token keyword">export</span> <span class="token keyword">const</span> constantRoutes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">// 异步路由，需要根据用户角色动态加载的路由</span><span class="token keyword">export</span> <span class="token keyword">const</span> asyncRoutes <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token comment" spellcheck="true">// 这里加载的就有 modules 当中的路由</span>  <span class="token comment" spellcheck="true">// 404页必须放在最后！</span>  <span class="token punctuation">{</span> path<span class="token punctuation">:</span> <span class="token string">'*'</span><span class="token punctuation">,</span> redirect<span class="token punctuation">:</span> <span class="token string">'/404'</span><span class="token punctuation">,</span> hidden<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>路由配置项：</p><pre><code>// 当设置 true 的时候该路由不会在侧边栏出现 如401，login等页面，或者如一些编辑页面/edit/1hidden: true // (默认 false)//当设置 noRedirect 的时候该路由在面包屑导航中不可被点击redirect: &#39;noRedirect&#39;// 当你一个路由下面的 children 声明的路由大于1个时，自动会变成嵌套的模式--如组件页面// 只有一个时，会将那个子路由当做根路由显示在侧边栏--如引导页面// 若你想不管路由下面的 children 声明的个数都显示你的根路由// 你可以设置 alwaysShow: true，这样它就会忽略之前定义的规则，一直显示根路由alwaysShow: truename: &#39;router-name&#39; // 设定路由的名字，一定要填写不然使用&lt;keep-alive&gt;时会出现各种问题meta: {  roles: [&#39;admin&#39;, &#39;editor&#39;] // 设置该路由进入的权限，支持多个权限叠加  title: &#39;title&#39; // 设置该路由在侧边栏和面包屑中展示的名字  icon: &#39;svg-name&#39; // 设置该路由的图标，支持 svg-class，也支持 el-icon-x element-ui 的 icon  noCache: true // 如果设置为true，则不会被 &lt;keep-alive&gt; 缓存(默认 false)  breadcrumb: false //  如果设置为false，则不会在breadcrumb面包屑中显示(默认 true)  affix: true // 若果设置为true，它则会固定在tags-view中(默认 false)  // 当路由设置了该属性，则会高亮相对应的侧边栏。  // 这在某些场景非常有用，比如：一个文章的列表页路由为：/article/list  // 点击文章进入文章详情页，这时候路由为/article/1，但你想在侧边栏高亮文章列表的路由，就可以进行如下设置  activeMenu: &#39;/article/list&#39;}</code></pre><p>示例：</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  path<span class="token operator">:</span> '/permission'<span class="token punctuation">,</span>  component<span class="token operator">:</span> Layout<span class="token punctuation">,</span>  redirect<span class="token operator">:</span> '/permission/index'<span class="token punctuation">,</span> //重定向地址，在面包屑中点击会重定向去的地址  hidden<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> // 不在侧边栏线上  alwaysShow<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> //一直显示根路由  meta<span class="token operator">:</span> <span class="token punctuation">{</span> roles<span class="token operator">:</span> <span class="token punctuation">[</span>'admin'<span class="token punctuation">,</span>'editor'<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> //你可以在根路由设置权限，这样它下面所以的子路由都继承了这个权限  children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>    path<span class="token operator">:</span> 'index'<span class="token punctuation">,</span>    component<span class="token operator">:</span> (<span class="token punctuation">)</span>=>import('permission/index'<span class="token punctuation">)</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> 'permission'<span class="token punctuation">,</span>    meta<span class="token operator">:</span> <span class="token punctuation">{</span>      title<span class="token operator">:</span> 'permission'<span class="token punctuation">,</span>      icon<span class="token operator">:</span> 'lock'<span class="token punctuation">,</span> //图标      roles<span class="token operator">:</span> <span class="token punctuation">[</span>'admin'<span class="token punctuation">,</span>'editor'<span class="token punctuation">]</span><span class="token punctuation">,</span> //或者你可以给每一个子路由设置自己的权限      noCache<span class="token operator">:</span> <span class="token boolean">true</span> // 不会被 &lt;keep-alive> 缓存    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>够了，了解了那么多了那就就开始干了，我是现在记录时才认真的看文档查资料，然后踩了很多坑，非常建议仔细仔细看文档，可能有的同僚跟我一样上来随便看下就干起走，这样踩坑是真不少呀！</p></blockquote><h3 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h3><p>就登陆都搞了二天，汗颜 = =!!! 登陆页面 <code>src/login/index.vue</code></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">:loading</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span><span class="token number">30</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">@click.native.prevent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleLogin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个 button 事件方法：handleLogin</p><pre class="line-numbers language-js"><code class="language-js">    <span class="token function">handleLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>loginForm<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>valid <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>valid<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'user/login'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>loginForm<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>redirect <span class="token operator">||</span> <span class="token string">'/'</span><span class="token punctuation">,</span> query<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>otherQuery <span class="token punctuation">}</span><span class="token punctuation">)</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'error submit!!'</span><span class="token punctuation">)</span>          <span class="token keyword">return</span> <span class="token boolean">false</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>验证通过就会调用 user/login 方法：<code>src/store/modules/user.js</code>传递表单数据，根据 .then 回调 this.$router.push 这个方法用于跟踪：我是从哪里跳到 /login 页面的，登录后我就返回哪里。</p><h4 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h4><p><code>src/store/modules/user.js</code> 的 login 方法：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 登陆 { commit },userInfo 看不懂啥意思</span>  <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">{</span> commit <span class="token punctuation">}</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> username<span class="token punctuation">,</span> password <span class="token punctuation">}</span> <span class="token operator">=</span> userInfo    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 下面这个 login 就是调用后台的 api 请求方法</span>      <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">{</span> username<span class="token punctuation">:</span> username<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> password <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> response        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'SET_TOKEN'</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// token 存到 vuex 当中</span>        <span class="token function">setToken</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// token 存到 cookie 里面</span>        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 看不懂</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>       <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面说了调用 login 的 api 请求方法：<code>src/api/user.js</code></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">'@/utils/request'</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    url<span class="token punctuation">:</span> <span class="token string">'login'</span><span class="token punctuation">,</span>    method<span class="token punctuation">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>    data  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>走到这一步后就各种不懂了，账号密码输正确了接口都返回正确的 Token 但是前端就一直告诉我 Error 而且啥提示都没有，说真的找了好久找不到问题，确实不会，又开始摇人：看到上面的 ‘@/utils/request’ 了吗？点进去你就会看见封装的请求了。</p><p><code>src/utils/request</code>，贴上我自己修改的结果：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> MessageBox<span class="token punctuation">,</span> Message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'element-ui'</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'@/store'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> getToken <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@/utils/auth'</span><span class="token comment" spellcheck="true">// 这里应该是请求的接口地址和超时时间</span><span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  baseURL<span class="token punctuation">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>VUE_APP_BASE_API<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// url = base url + request url</span>  <span class="token comment" spellcheck="true">// withCredentials: true, // send cookies when cross-domain requests</span>  timeout<span class="token punctuation">:</span> <span class="token number">5000</span> <span class="token comment" spellcheck="true">// request timeout</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// request interceptor</span>service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>  config <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// do something before request is sent</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// let each request carry token</span>      <span class="token comment" spellcheck="true">// ['X-Token'] is a custom headers key</span>      <span class="token comment" spellcheck="true">// please modify it according to the actual situation</span>      config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Authorization'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'Bearer '</span> <span class="token operator">+</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">// 这里应该是协议头的 token 传递，因为我后台使用的 jwt</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> config  <span class="token punctuation">}</span><span class="token punctuation">,</span>  error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// do something with request error</span>    <span class="token comment" spellcheck="true">// 这里应该错误做啥，看不懂</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// for debug</span>    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// response interceptor</span>service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>  <span class="token comment" spellcheck="true">/**   * If you want to get http information such as headers or status   * Please return  response => response  */</span>  <span class="token comment" spellcheck="true">/**   * Determine the request status by custom code   * Here is just an example   * You can also judge the status by HTTP Status Code   */</span>  response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> res <span class="token operator">=</span> response<span class="token punctuation">.</span>data    <span class="token comment" spellcheck="true">// 0 表示全部正常</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        message<span class="token punctuation">:</span> res<span class="token punctuation">.</span>msg <span class="token operator">||</span> <span class="token string">'Error'</span><span class="token punctuation">,</span>        type<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>        duration<span class="token punctuation">:</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1000</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">// 捕获 10004 表示登陆失效</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">10004</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// to re-login</span>        MessageBox<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">'You have been logged out, you can cancel to stay on this page, or log in again'</span><span class="token punctuation">,</span> <span class="token string">'Confirm logout'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>          confirmButtonText<span class="token punctuation">:</span> <span class="token string">'Re-Login'</span><span class="token punctuation">,</span>          cancelButtonText<span class="token punctuation">:</span> <span class="token string">'Cancel'</span><span class="token punctuation">,</span>          type<span class="token punctuation">:</span> <span class="token string">'warning'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'user/resetToken'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>msg <span class="token operator">||</span> <span class="token string">'Error'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> res <span class="token comment" spellcheck="true">// 这个 res 必须返回</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// eslint-disable-next-line handle-callback-err</span>  error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      message<span class="token punctuation">:</span> <span class="token string">'service error'</span><span class="token punctuation">,</span>      type<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>      duration<span class="token punctuation">:</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1000</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面 <code>src/store/user.js</code>当中的 login 方法执行完成，重点来了，这一步卡的死死的，因为当前项目没有权限这个说法…所以我后台压根没写 roles 这个东西。</p><h4 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h4><p>当上面的 login 方法执行完成后，会走到 <code>src/permission.js</code>当中，不啰嗦看代码。</p><pre class="line-numbers language-js"><code class="language-js">router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// start progress bar</span>  NProgress<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// set page title</span>  document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token function">getPageTitle</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// determine whether the user has logged in</span>  <span class="token comment" spellcheck="true">// 这里应该是在 cookie 当中读取 token，没有任何的接口请求</span>  <span class="token keyword">const</span> hasToken <span class="token operator">=</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 判断是否有 cookie，有就表示登陆的</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>hasToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">'/login'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 上面说了判断是否有 cookie 如果有 cookie 表示登陆的，如果现在去的是 /lgoin 就跳转 /</span>      <span class="token comment" spellcheck="true">// if is logged in, redirect to the home page</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token punctuation">:</span> <span class="token string">'/'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>      NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// hack: https://github.com/PanJiaChen/vue-element-admin/pull/2939</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// determine whether the user has obtained his permission roles through getInfo</span>      <span class="token comment" spellcheck="true">// 从 vuex 当中取得用户的角色权限，权限只能是 ['xx'] 或 ['xx','xx'..] 一个多个以上，如果有那么直接进入</span>      <span class="token keyword">const</span> hasRoles <span class="token operator">=</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>roles <span class="token operator">&amp;&amp;</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>hasRoles<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">// 重点一：vuex 当中没有，进入这里，请求 ‘src/store/modules/user.js’ 当中的 getInfo</span>          <span class="token keyword">const</span> <span class="token punctuation">{</span> roles <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'user/getInfo'</span><span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">// 重点二：生成可访问的路由</span>          <span class="token keyword">const</span> accessRoutes <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'permission/generateRoutes'</span><span class="token punctuation">,</span> roles<span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">// 将可以访问的路由添加上</span>          router<span class="token punctuation">.</span><span class="token function">addRoutes</span><span class="token punctuation">(</span>accessRoutes<span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">// 进入路由</span>          <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>to<span class="token punctuation">,</span> replace<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">// 如果出现异常  清空路由</span>          <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'user/resetToken'</span><span class="token punctuation">)</span>          Message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error <span class="token operator">||</span> <span class="token string">'Has Error'</span><span class="token punctuation">)</span>          <span class="token function">next</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`/login?redirect=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>to<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span>          NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 没有token 也就是没有登陆的情况下  </span>    <span class="token comment" spellcheck="true">// 判断是否是白名单(也就是说不需要登陆就可以访问的路由)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>whiteList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// in the free login whitelist, go directly</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 其他的一律跳到 login 页面</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`/login?redirect=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>to<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span>      NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="重点一"><a href="#重点一" class="headerlink" title="重点一"></a>重点一</h5><p>这里的重点一对标上面写到的重点一，接下来的操作可能跟正常项目有点出路，在啰嗦下当前公司项目不需要权限这块，就没做权限，不过大同小异。</p><p><code>src/store/modules/user.js</code> 当中的 getInfo 方法</p><pre class="line-numbers language-js"><code class="language-js">  <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span> commit<span class="token punctuation">,</span> state <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 接口请求</span>      <span class="token function">getInfo</span><span class="token punctuation">(</span>state<span class="token punctuation">.</span>token<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> response                <span class="token comment" spellcheck="true">// 如果不存在响应那么就是验证失败，要重新去登陆</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">'Verification failed, please Login again.'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 这里是存储用户的一些信息包括角色到 vuex 当中，我这里就存了个用户名其他全部固定</span>        <span class="token keyword">const</span> <span class="token punctuation">{</span> username <span class="token punctuation">}</span> <span class="token operator">=</span> data        <span class="token comment" spellcheck="true">// if (!roles || roles.length &lt;= 0) {</span>        <span class="token comment" spellcheck="true">//   reject('getInfo: roles must be a non-null array!')</span>        <span class="token comment" spellcheck="true">// } // 这里我注视掉了，也是关于角色的验证</span>        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'SET_ROLES'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'admin'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 角色，我这里没角色就固定 admin 了</span>        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'SET_NAME'</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span>        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'SET_AVATAR'</span><span class="token punctuation">,</span> <span class="token string">'https://cdn.jsdelivr.net/gh/daixianjin/MyImages/QwPnoZreAbYaV7K.jpg'</span><span class="token punctuation">)</span>        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'SET_INTRODUCTION'</span><span class="token punctuation">,</span> <span class="token string">'你好世界'</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">'roles'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'admin'</span> <span class="token comment" spellcheck="true">// 把我们后台返回的数据里面添加进 roles ，因为整个 data 会返回重点二当中需要roles</span>        <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="重点二"><a href="#重点二" class="headerlink" title="重点二"></a>重点二</h5><p>上面 getInfo 获取到用户的信息，会保存到 vuex 当中。</p><p><code>src/store/modules/permission.js</code>当中的 generateRoutes 方法。</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token function">generateRoutes</span><span class="token punctuation">(</span><span class="token punctuation">{</span> commit <span class="token punctuation">}</span><span class="token punctuation">,</span> roles<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token keyword">let</span> accessedRoutes      <span class="token comment" spellcheck="true">// 是 admin 所有路由，不是 filter 过滤匹配，当然我 getInfo 哪里插入 roles 等于 admin</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>roles<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        accessedRoutes <span class="token operator">=</span> asyncRoutes <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        accessedRoutes <span class="token operator">=</span> <span class="token function">filterAsyncRoutes</span><span class="token punctuation">(</span>asyncRoutes<span class="token punctuation">,</span> roles<span class="token punctuation">)</span>      <span class="token punctuation">}</span>      <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'SET_ROUTES'</span><span class="token punctuation">,</span> accessedRoutes<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 存储 Vuex 当中存储匹配的路由</span>      <span class="token function">resolve</span><span class="token punctuation">(</span>accessedRoutes<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 返回所有的路由，在往上看 `src/permission.js`</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简单的介绍了下 generateRoutes 当中，<code>src/store/modules/permission.js</code> 还存在另外二个方法，用来验证权限和 filter 过滤匹配，不过目前我用不到也不去搞了。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>真心不容易，非常不容易，查查资料自己搞搞总算是大概明白了。说真话，在我开始记录这篇文章时，我是压根不懂！到现在基本明白了，正是应征我的个人观点：不懂：百度 + 谷歌 + 动手 + 问人 = 答案！我靠，我第一次写到能首尾呼应，很强！哈哈哈哈哈啊哈哈！！！</p><p>这个图感觉很好：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/20200528091630375.png" alt></p><blockquote><p>参考文章：</p><p><a href="https://blog.csdn.net/hanguofei/article/details/106396581" target="_blank" rel="noopener">vue-element-admin登录流程梳理</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全球国家国旗名称</title>
      <link href="/2020/08/26/%E5%85%A8%E7%90%83%E5%9B%BD%E5%AE%B6%E5%9B%BD%E6%97%97%E5%90%8D%E7%A7%B0/"/>
      <url>/2020/08/26/%E5%85%A8%E7%90%83%E5%9B%BD%E5%AE%B6%E5%9B%BD%E6%97%97%E5%90%8D%E7%A7%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>刚好公司项目需要用到全世界所有国家的国旗、名称、简称、中文、英文。刚开始半天没找到好的数据，就想自己找一个网站手动复制粘贴。说真的，操作到 50 个时候我是真的觉得好难受，太多太多了几百个国家的信息实在太难了。没办法了，就试着写写爬虫，<a href="https://www.ifreesite.com/world" target="_blank" rel="noopener">https://www.ifreesite.com/world</a>    所有国旗都能爬下来，需要的数据也完全爬下来了。但是最终组装时，发现这个站点很多信息不对称要么少了缩写，要么就没中文什么的，实在太恼火了，放弃了！有逛了一大圈，终于找到一个哥们提供的 JSON，真的不容易呀！</p><blockquote><p>​    Github 地址：<a href="https://github.com/bydai/blog，如果觉得不错，不妨给这哥们一个" target="_blank" rel="noopener">https://github.com/bydai/blog，如果觉得不错，不妨给这哥们一个</a> start 下面会粘贴我自己整理的 JSON 数据，欢迎白嫖！</p></blockquote><h3 id="Json"><a href="#Json" class="headerlink" title="Json"></a>Json</h3><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"BG"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BG"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BGR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Bulgaria"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"保加利亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"359"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEMAAAAoCAIAAAAqm9C9AAAABmJLR0QA/wD/AP+gvaeTAAAAeElEQVRYhe3SQQ2AQBAEQSCnABFYQQH6MIACVPDiQ3ig5DCxyXY2XQqmkxl770MJU/aAMJbwWMJjCY8lPJbw1Clp27lnb4jRjvfK3hCjzrss4bGExxIeS3gs4Wnr82VviDHey5y9IUadd1nCYwmPJTyW8FjCU6fkB7S8CmppV7CaAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BF"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BF"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BFA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Burkina Faso"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"布基纳法索"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"226"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAABeElEQVRYhe2Xu0oDQRiFz2xmsgmrJDGksImNNgZF0hgsxUYJKOgjpBB8HiuDjeAD+A6iVlbaqEgqxdtmxZgd9jIWQgySQpJ/RwLzdfuze87HMrMX5lYWMG5Y/y0wDEZaF0ZaF0ZaF0ZaF0ZaF0a6P7cYWYU4qfCEcvlqV6x1EwpPSlpUJa/6CYXzJEKZE1vlCArMiVWH/r4QSXMw+2cFi5oEU2AQyzK4sHtzJS2EBG2M5s+Fq0zjndckS6vBJwQIzrP+wSRCNnobkTQAgFdlZs9j2d/e6pP5+7nw0h541RAwHK5TZQHIp8KT2duViU5vctZx6jdzXpQibCHeJe2IP4Wif/IYpGmNQS7tWPFGzgNwL9N3vg2gnms7FvFbhlh6q+CmgOZzafGqsnQ933wpMWAz36ZtIX5O7+TdRmvm6LX4fbjbKp9+ONsF9/htirCFeCNOi+AhEH8ZjgLx8hgoR2sM82mqDyOtCyOtCyOtCyOtCyOti7GU/gIp0GTxvABl4gAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ARG"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Argentina"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"阿根廷"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"54"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEAAAAAoCAYAAABOzvzpAAAABmJLR0QA/wD/AP+gvaeTAAACLElEQVRoge2YTW7TQBhA39iOJ46bpAmUlpKECgkWbKiEuuES7DgJN2KFxIJbABKosCM0VUqjJv2B5sdxajv2DLeYkYjfBebpaexvZsTbD0PNBuPYFrBNGcC2gG3KALYFbFMGsC1gmzKAbQHblAFsC9hm4wOIH6PlRl+GhNbaeIAiu6NII/IsRggPx/HxgjqurJlWwTO9YJElzIafyOI/FPEER2icsEOldo/mwRGe3DLqY3QH5GnM1fePkFyi8CjiC5I4onb/GV7FRXkt9l++walIU0rmdkCRrlj8/obI/xLPL0hvz4muz1C5YjHu0zo4pNYqmJ19ptk7MvY5GAuQJxHZ8pJ1kjEfHiPpc/g8RgOnJyHpvE212SWZTajvr4wFMDYG1+kSkjHxzS+yuwXdTsx4pLg4V3R7MdH1Oel0hMinpMupKS2DP0GtUKKCDBoI10FKaLQdXKHxJei8IEtjQpWAMHc8MbZStd4Gt43ffERj7zGDkxBXAAhOByF+0CDceYoIOvjVuiktcztAuAGy+YAkvcJv9JjPpvwcTBGOy9bDA5qtLpWqxN/axTU4Co2OQZVnjL++x8lvydeK1U2famMbL9hDCAVyl90Xr/Gq/2kAgDxdEo2OSRYT9GqC0gI33EOGO2w/eWX0DAC2jsLpivwuQqs1Sq/x/BBX1nH9wLRKeRny3n25se1glY1/DygD2BawTRnAtoBtygC2BWxTBrAtYJsygG0B22x8gH9y+teg24KIdwAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AT"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AT"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"AUT"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Austria"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"奥地利"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"43"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAaklEQVRYhe3YsQ2AUAzEUIJYhhEYHQqYiAGg+cwQCkeR7AlecdXFvW5Tt+ZqwJ9EU4mmEk0lmko0VUt0PPtZbUgXY4xqQ7qW8xBNJZpKNJVoKtFUy3tc1YZ04S0GJZpKNJVoKtFUoqlaoj8inArNd2GOLgAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AW"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AW"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ABW"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Aruba"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"阿鲁巴"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"297"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAABwElEQVRYhe3XzUvCYBzA8d/mZi6bssSBFlrQC2KXpES0F6K0/oBu3TtE0D9Rh/6PbnXqWlJkGppIJ0l6IRF6kzRfs9TqUEjEBq7D82yx7/Fhhw/j+f3YiJnNK1BaJG7AXxJF20w0rSFQUtpPFD03zLjsDEpK+4mi3Vex6a4iSkr7CaN7OZo5Cjsv4oQsL4gw2ttHl/YjjeCxw9KBGNROv9EWI7XoYhfS0WaxXDk5W7Hm50dYA6PBghOL+NrTdhM9M6DzpBNMJFLaCzdzhdYTWruVXZjKur0h49DBeTlfaeLTfqfp968BQKn23gBSy3NmPdlJftQz9x/1OgBQfDcb8OVGx065wVjm7b7QwA0GaL3pnw3w2lU+Sywtk6z+Zmd7K/HyUJSFtZXAIF4+vu02e7R2q8Hvk6EYxLZH9LqqD0xWJ7wyFAMAJXhaeX1/HPekDDbIKgcNAGHOkbytASgKfZgqP1fxbzfBRNFy2Mdi/a/vaTmnolGlolGlolGlSDQ1aQniNkiOeE3yuA2So55qZtwGyQn8bsk/RQ4icZtw4jZIjjLpsrgNkqM24uu4DZKjQnezuA2SU+QgqmhUqWhUfQJlaICmiFaYUQAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BB"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BB"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BRB"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Barbados"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"巴巴多斯"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAACcklEQVRoge2YP2gTURzHPy/0Li2HIAhKqwm10pRCh0yxVjIoGIRCkYpDJyf/gJMuplNxKLgLWi1EnAQHi7RDx1pqG0XsYBtFIa3WXNU0Q6Bpkl64OJwNVA0dzLvD877T3b3vvd/vw/v93nFPEBqp0kBVHz1u5HSIi0MNnc/X0Nn+AXnAbpcH7HZ5wG6XB+x2OQKcyVbIZCtOhHYGeGwiz9hE3onQ9gObJiQm8zycymOadkeXBDw5V2AwrjPxfPM3qMRUHn3DKunE1O5VNk14OrPJuZs6k3MFGanJAe7v01j7XmEwrhO9usaKbgCwum4Qv7tR8w3f2+DTV2ssnTE4eeUz54d1MtkK/X2ajNTkAPt8cOfGQYSA5HKR9Zy1QRXLVeYfBGq+F/cDbJWsv9P1XIVXqRJCWO/6JDWbtB7u7WkmFtEwTUgulQDoblcJBdWaJxRU6W637l8ulzBNiEU0enuaZaUld9O6PrQfgOnk3v2449l5R5akAsciGl1BldnFYq10/6RC0WR2sUhXUCUWkdO7O5IKLAQMRDXKRpX5t8W6voWlEmWjykBUQwiZGdnwHT7zc8VSK9t1PcvpMgCx43JXF2wAjoZb8CuC1Eq5rufd6jZ+RRANt8hOhybZAZpVwbEjCq/fl5l5s8XHNaM2Nv4sT2fAGusMqPgVyfWMDcAAwUMK08kCp6592fX88u1vteuzvfLLGWwCbm9tIhpuoaNNoeOwwsh4DoBblw6QzhikdYOjbYodqSCcOIgXJz5Y3oXQ3l7vIP7v5AG7XbZsWr/qwul9ToQFHAJ+MtrqRFjgPyxpD9jt8oDdLg/Y7fKA3a4f+H/ExvCtkAMAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BJ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BJ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BEN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Benin"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"贝宁"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"229"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH2gcMFzMChItHqAAAAGpJREFUaIHt0cENgCAMQFEk7MA6nrkxFZOxDSOY6Awcqsn3vwHa/vRIo98p0NVm5Pht+esD3mYwncF0BtMZTGcwncF0BtMZTGcwXYlesM4avWLL7z5sMJ3BdAbTGUxnMJ3BdAbTGUxnMN0D5sEFd6o9xucAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AZ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AZ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"AZE"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Azerbaijan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"阿塞拜疆"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"994"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAACGUlEQVRoge2XzWsTQRjGn9mv7KZpa9RaolZa20IspkgaQVRUCnpQ9OBF1IOH1rPpxT9CiloP0qMnmwrxbpWgCEq1BrRKS1X8uIiW1rox291ssuMh4KHpdWZhMr/rO+zz/PYw+y7B5HM0E0rYBXgjhUVHCouOFBYdKSw6Ulh0mk6Y3E2PhN2BK+QrMnyS1I5469illgsnlXgrKLwXb+070+7jWT7p/+EkbJ4Y6sjfULa2OfmCPZHz338GYKR69cH+0mQe1RqHDnV4COsDPYnZeyQW/T120749tWFqDmfcwhwxDepWWDcBn0srPp4lsaiTLzTaAvCXvqs9ifh4FoC6ewfrMhrrAGVbu3XqEAB7IrfpgbZrF83hjL6/1zg4ULp1v5ybYduH6dMB6P17oCoAKsXFxqm2dxexIkY6SQw9ktmndnVqXZ1M+4T8HSYtVv11AAAh8KuB4zJNZC7sL32rX8JGOrnJdP4T/bteKS5Sv+q9+lD7uRqs/GHaR81iJ9MAuu4ZQ0k92a1u31KeetR4wF/44jx4QszI8vnrwVqJ2mWmfZgLA/DffYxdOaOn+kCp96y4YWoePVCZW3ALr1GtsbYFH+Fgec17OR89d8w6fcRI9dV+rAS/VommmocHrbPHy9MzCCi33SOE1VLrTlDHdZ++CWe1HL08yjkyXAgeXg27A1ea7n9YCouOFBYdKSw6Ulh0pLDoNJ3wP17wqYC0e7EHAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BA"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BA"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BIH"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Bosnia and Herzegovina"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"波斯尼亚和黑塞哥维那"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"387"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAACJ0lEQVRogdWUPUgbYRjH/+97moglKmogtbWDTgqCQhxE7dIWCt3qIA4uSpcquigBFxeHksUI6uBga5dsdbVuHdqCGKRVsFUSRNC2fuUDB6Mk5yDCcUOPy9297/P+pne4rx/3PD+G5gVYEY10Tb7pABBd2opEvwPgnAEoFvWB7s2PIysaL1o+xF06pyKJ1JMSbuSWVzCG592Nr9+u9Y2svehpZAwAnnY29IYfAoh/DffHhm8KWgnvlkKZ5RXVAX//2Of9gyyAnb2L6oA/k8v3vWzSdXzZOAbwaaN9YG4oPr5crhU8/17HWAtncvlMLn931jibn+71+bRnXY916KFg5fV1YWYxoZCz9Ugb2U2mYx9+drTW19b462oq2lvqZ9//+JVM4/4/059te8IANrdPVtdTd+fV9VRi5xQA54xzpoSzbeH/N4y+s/UOm1C9YbaFVW+Y7ZE2omLDHAlDwYY5FVauYbZ32IRyDXMqrFzDnI60ESUa5qYwVGiYy8L0G+Z0h03Qb5jLwvQb5vJIG6HZMA+FQbJh3goTbJjLO2yCYMO8FSbYMG9H2giRhokTBo2GCRWm0DBvd9gEhYYJFabQMKEjbURWw6QJQ1LDZApLaZjQHTYhpWEyhaU0TOZIGxHWMCrCENUwQsJiGiZzh02IaRghYVsNK/ktGmpfufTBbnKWvjr8czk62PYo9KCyosxXrk28+7b9+xzA7lEo+S94kg38zVaV8ORbfjGQQ6tWHBAAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BH"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BH"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BHR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Bahrain"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"巴林"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"973"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEMAAAAoCAIAAAAqm9C9AAAABmJLR0QA/wD/AP+gvaeTAAABAElEQVRYhe3VOwvCMBSG4aT6/3+BgyIKQUWKioM46aCbDh0EQcFFtKn3ipc0DlKXToknIPI9e5NzhublWmtmQh1Pu3pblmvxNDD60DVuusnHbb6QlYasNp/bkHYmO/abvGmlzsNxWBSHTk8/FdVYFr7d5OOx3kTClyVxW65IDjTlUR3Ecx73OMvnqQ409e3F+v44dPthUZwGI5YkJDPZsd/kGszCQmXnd9X+SDiQNeNNkksc1VuyJOLJb73Cxv+JVoqphNE8E5TQkxR6Qg89SaEn9NAT9MQd9CQDPSGDnqAn7qAn6Ik76EkGekIGPUFP3EFPUugJPfQkhZ7Q+5+evADelphcVMYVNAAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BS"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BS"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BHS"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Bahamas"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"巴哈马"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAC4UlEQVRogeWZ20tTcQDHv+ccd84ubqabOlLbvJw11myZi6wwSh8UBRfZjWzloAsYWQpFL4IP0UtRf0G95kuhkFGmpBgKUuaLFQgaNrQib0lpza0e9lB4wV1+v7Mz+zyNwX7n89k5v3N+5xwGRQfhrkfaZvwfcPB+wLOHmJ+DxQ5eiLUPdTgA+B3AyDA6W8ELyLWBYWJtRRHu78dfPzHUj/4uGLNgzIydEl245V/Mz6L3KUbfQ7QjURcLJbqsCA4yOY6OR5ifhdUBhUJaJbqsEQwgEMDIMLrbodIg27JhJvbawUEWf+D1Swz2ISsHhnRJlOiyXnCQma948RgfRyFugzqRshJdQgsO4h1DZxuWfLDkgwvnh3IiTG//Et4OovsJtEkwi3SU6BLRjlr4joEevHuD7K3YlEJaiS5RHJlfJvG8FZ+8sDqgVJFToguBi41GK7g8zoqaHQmKOJjYxK6uYrb6VpNYUaInNSAliO2T6VlfS9vnvldzhfnaVD1PaljiED4Ix8YX7j2YmJrxFRUmKQWW7OBEID/rAgEMDH273zIh8Kxzu45l5bUmpXWaWVgMdPRMt3dNWUWNKUNJaSsRIMXfX1lquNssmrNkcemSYpqxLPx+CbYTEnT38O4C3Z1myy6HjB4k0Ao2pvI3r+fVHDbK7T6avI7As9fqTI3nt2jUclx4EQ6urky7cTU31yyL89OqEAu2WxNvN4kl+5JJDUgJAsG6ZNXxi3sOuGwcJ8el1TKiC+Y4lB3B0bNx9EA3iuCCvThzGRlmYi6SEFFweiZqr8BZTFpGCsIMVmlw4gLKqsEl0PGhTsjBDIvSKhw7h2QDTR/qhBZsdcDTiBwrZRkpWC841Qh3PYpKNsyrlrUzeAEuN1xuCDK6m42e1YIZBsXlOFkHfZrkPtRZEWy2wNMA285YyEjBP8FJKXBfwv5yMHGwQowYBgAUPA6dRtWpOHqBEDEM7E7UNsCUF2sTifgDe2CK2KV+y9QAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BW"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BW"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BWA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Botswana"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"博茨瓦纳"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"267"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAZUlEQVRYhe3WwQ2AMAwEQYJoGYqySwq9hBrCYy1LOxXs727cMY9uzuqAP4ymGE0xmmI0xWiK0ZSW0WOtVd2w7crM6gZJgoyIqG7Y1nNcnnyrG7a1/B5GU4ymGE0xmmI0xWhKy+gPZ7cONcE4ap8AAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CA"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CA"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CAN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Canada"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"加拿大"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAACuElEQVRoge1ZPU8qQRQ9yFoJHR++wm7VhAAqnYbWhMqYYCmlra02/ACx0ITCoCEW+he0RkssUUPiJsYSYgeo6K7nFW58auApzCyz5L2TCZnM3jn3ntzZy+yMhxAAhWb3D4+n76kjEsMYCvwXPBiYJkxTiWdFgvf3cXCgxLNHQdFqNKDrAGAY8Pv7YRiyorWzg3od9Tp2dwfvfOAZrtWg62g2AcDng2EgHO6ZxO0ZfnhAJoNqFQC2tmy1AJpN5HIAUK0ik8Hj4yCCoUj7Oaam6PUyEqHX+4nhfXB6ugc2gZgH9Q4nErAsXF/Dsj6Nvw8mEoMJZFCCZ2dFDSTBScFPT3/6MzPfGH80+DhRNpwUnMshn7f7367Yd4N8HtvbDkYls2hlsywWWanQskhyfp6axtNT++n4eFeeX79sm5MTahoXFkjSNFmpsFhkNiuxaEkVvLpqj/v9jETsvs/HiwuSTKW68qRSJFkuc2zMHolE6Pfb/UzGrYKPjjqbhUK8uuLSUlee5WVeXjIU6vz0+FiiYKk7rft7hMN4fRWh/IqREdRqCAQ+DbplpxUIIBqVSQggHv+qVgyyq/TEhNsJpb3D5TKTSSG2bi2ZtMueu7aWsZj9lSsduo5YTBqbtAy/oVCgpknL7egoC4UOXgQ4ZQsmWSoxGJSgNhhkqdTZhbsEkzQMRqNCzLEYDaMrv+sEk2w0mE73SZtOs9H4G7kbBZO0LG5s9My5uWlvxYdP8Bt6Wtvx+I84BWJ2+ACg3cbdXQ/2t7dotx2LBgA0R9lxdgafD3Nz0HVMTkLX7ba3h5cXrK/DMOx2c2P/np9jcdG5iFQcxAM4PIRpYm2tz+kCHw8OZ7gbWi01fpXdLTWbeH5W4lldhhVdpqsTrKlxrWhJt1qqlvQ/J1jRkl5Z6fNmWBiK/ocF4ZZDvGHAb9KHkkAeZaENAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">3</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CF"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CF"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CAF"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Central African Republic"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"中非共和国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"236"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH2wgFBBELcIGv+wAAAWpJREFUaIHtlbFLQkEcxz+XNtXyBqFJ8m1iifAKtxoKp3DQP6Al/BOEaIuiobGlocUtUhpqFqS2MojEdMoIB0PIsUHk2qxA7Ibuged9toMv3Pdzv/fuBIl9iWaeXq+UcvHFtOYmMKMSSoQ7JMId3V18IagSynjPADy+LWgt4wdKE856dbJeXXcXXxg54dnAgMNMmZ21BwCcuU8APk6OADi78di73KA/CPhU8/8YOeH+IEC+mCJXSCPE950mhCRXSJMvpiZSFv74pEvVGK2uM1y3ug6lakx7KZ2MvbTcUI94+J2D63UAdrducUM9Xn4cwqQxVjjpttk83qbSjABQbrgk3ba5wud3S0gphutKM/Lrn55EhJRSu0HNWVXKLffuNTdRfIdNwgqbjhU2HStsOlbYdILR06j2TS6YV8r50WXqJmyFTccKm44VNh0rbDrBRrKpfZMaK0o5P7pM3YStsOlYYdOxwqZjhU3nCxGIUdYmnWbvAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CH"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CH"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CHE"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Switzerland"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"瑞士"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"41"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAIAAAADnC86AAAABmJLR0QA/wD/AP+gvaeTAAAApUlEQVRYhe2WTRHEMAiFaWcFREIcVEKsIA0pVEIdIKEO0nv3ceCQ7WzDm5z4yXcgAZZOz2h9iJvgBI/TJ5zBTLXejWYkErunR49q/5Zq9J75apzgBA/TgucxMzHjjG2jUu7G86TjwPEisLc4natWag27oEpx41Wheb4aJ/hncl61Ge07dkW/kxm25zxOcIL/Hhxf6EXApPO6hC9nERiv+Wqc4PeDL8tijUUnb0g4AAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CI"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CI"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CIV"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"CÃ´te dÂ’Ivoire"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"科特迪瓦"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"225"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAVUlEQVRYhe3OsRFAABAAQUTaVAmdKFNIDx+cZDe/mVufcxnbr3fcrvcxbrdx+SPTFdMV0xXTFdMV0xXTFdMV0xXTFdMV0xXTFdMV0xXTFdMV0xXTlQ+ZTAROCO0kyAAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CL"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CL"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CHL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Chile"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"智利"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"56"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAABQElEQVRYhWNksFzGQC74fyySbL2UAKYBsZVCMOpoeoFh52hzbRFTTSG6OYV4wIJHLsVP6f8/htPXT9HNNUQCfI52N5dk+E83l5AA0B3tYy2dE6L65fuf//8ZZMW4GBgYVrbYMDMxcHOwTF17e8vRpwPhSHSA7ugtR59KCHNMKTJhZ4Mm9zAn2Z+//ub0nh0kLmZgYGDEWiOKC3HcXe3LzcnCwMDw5fsfldDNL9/9wFQ2uGpEbg4WiIsZGBh4OFm4OfAlffoD7I7ODFR5//mXZepuy9Td7z//Sg9UobOz8AMcIc3Fohm59cTVNyeuvtGM3MrLyUpnZ+EH2NM0kWBwpelBDkYdTS8w6mh6Acar2nID7QaSwZAM6VFH0wuMOppeYNTR9AKjjqYXGHU0vcCoo+kFRh1NLzDqaHqBUUfTCwAA6EBFprawz8wAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CM"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CM"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CMR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Cameroon"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"喀麦隆"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"237"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAABWUlEQVRYhe3Wv0rDUBTH8d85Tey/iMUuDk6CawefoNAn6At0c/AJ/DP1EUQEB+kj+AQujk6dWxC0i1YQFIptkzQ5LnVwEQznXpfz3RK4J5/h5iaEsx6KNry6L7y2dfdReC0XXvmPGdpXhvaVoX1laF8Z2leG9pUrNIVCoTga7grdaK8a7dTRcFforU681XGFDlwMJUbUWgmIGJLrz9dDE3YOF9HBKp8zhcI1ALJ3PpOMuSqfw+DlugKlTa6HFrwOKlxZNrsx0fpevZUB2dtNeTooa4mhuz0ko+eL6vvtxv7lDCUAEKGHo2gxKik+BS5eRA4F30giYQcHnz662Y0loUm/NunXJKXtbqL+CO3TgxA2MO5tJlMGMB4Fu8dzEBQ3NNTRHMjjaT1fri+TKT+dRBxIntKv6/6WMjpPCT8/KXkMQFMM+2Hyl6F9ZWhfGdpXhvaVoX1laF99AesXW1NJCXCnAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CN"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CN"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CHN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"China"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"中国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"86"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAACJElEQVRYhe2XQYsTMRTH/0km0850a8tuReoWUXAPC4KIK2L9FIInD4Jn9SL4ETwp6GU/gYIHv4QLIoiC6MXDop5kUdZ1a2umYyaJFym2zMxqnGZcnN8xIZNfkvceb8i71Tb2G7RsARsspWnTgCI4lRRr85t4dssIQ299qAWJ3zb0V1Ks057k3TTvab6s06cOKyNhJPyjaj5ieZCcRGxfGsNg92E9fSVFcEaKZ3xubpnk3XSjLxvnZdas0ZgY108kxAM9YAq2yyAzpnlP+8cUAN7VcivvbMQ3i1fGpGa2bi4UL5jGlHRtRS1dFWzBACDBz2vr3hmaiABQI/J5PYw32cwngpOJ0SAa/ooav7bM7D9iNqZZy3RuiHBtNirEc759N1SD9EIRrsnoFTeZoVQwaYnIsHg5al2MJwODR7Wd+wFKqBPppAWrghpMjasB/XeMkVU9wnMSwOixP9rwAYT9PR7eP668pfSKPg9S8sY7qP2e+nSr8e0pByCe8M514XV0sp1xwr5sXYgJxZcH9ehlGYkIoL6aqF36a5njXU3bOn6TIUSwfG8Ihg/XmvMTndrw71tTwsCPKC2IHhItXPQhtl1eaACEZyUAo/D9PUs+UjfGsO7yaNN0b4+0IPEmUzuum3LL/VjLQAMG3iF3RWOCbUwzQCM4LaMXJXR5thVKAUApxvi//hHLpZJ2RSXtikraFZW0KyppV1TSrqikXVFJu2JfSv8A8EGtd2CJ4vkAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">1</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CRI"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Costa Rica"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"哥斯达黎加"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"506"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEMAAAAoCAIAAAAqm9C9AAAABmJLR0QA/wD/AP+gvaeTAAACIklEQVRYhWNk0K5nGBaAaaAdQDUw6pPBB0Z9MvgAS6i79kC7gTqA8f///wPtBuqA4ZO6Rn0y+MCoTwYfYLwXnzvQbqAOYDwnqEaqHmZ+PtH0WF5bC0ZW1q9nL72eufDXo6e0cBxJgOTUxa6iqHlsy6eI4DXvv2z69P2Wpanmsa28jja0cBxJgDSfMHFwKC2ddv8/07XXXzm5mJh+v379h+3Ciw8K8yewyUrRyInEuo0k1cKxIRyqSr9enX9wrOPj3QNfXlx+fnby2+vrmXm4JMpyaOREIgELSar5vVxeP7705uktYb24XwIa//8zsH998f/z+UfXdkp7OjMwMjIMXNuHtDhhV1H48+Pru/f3WNhvXriy78XLG7fevb7z8jETExuzID+LkACNXEkMIC1Ovn97f2BO1sGP5qdOXfzw/ZKCsNajN7f4GPi5L613z51MIycSCUiLk7+PXnz7y3CZ8et9pjeqquamWgZvOAU//ef88P038w/GP+8+0MiVxADSfPJ160Fz32zHP6+47wXxvbL7dFuE50GE+39GfUtvxlOPBzCTMJBaMzKxs6sf2vCF48v2RQ0HH4h9+8drJ33HKyhNWtn2ho3vr8fPaOdQgoDkOp5dRVF148I/XP8enlv+68dXRaNgbl7Fe7E5n/cfoZETiQTDp7UyjFqQo/34QQdGfTL4wKhPBh9gDC1aNdBuoA5gHJ3TGnRg1CeDD4z6ZPABAMKBxvpHM1L0AAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CU"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CU"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CUB"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Cuba"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"古巴"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"53"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAADeElEQVRoge2aWUgUcRzHv3Ose427ul7rgaRRFiLRoSlGHqFCipkmGlIRBEVGERGSEZIFPqhIgU+iPUhkWBZhkEaFFEFQ+eBDbqGWoB3eSuK67k4Pukse7M7sju7OOp+3HWbm/+XD/9j5/f9EfVgWW80k4TuthQR/iO7AWNZEkGhRxqJBtRszpI+7M4kKojswlrX+mCQUqGf2ok25AxYQ7swlGpYJtNJLB6CWScRHn1B3ZBIVawq08kqxBTXqRPyimI3MJCrsCgQAIyg0q+JwT70Ls4Rso3KJBocCrYySKtQy+9GhiAYrzY82OAu00iMLRjWTiB5Z8HplEhW8BS4+RUBXnIfQ6xchCwlah1jiwTmBS5BqFUIunUHQ+VMg5XIhc4kGlwRakUdFIqziCrTZh4TIJCoEEWiFSY5HRFU5FDu3CfVKj0dQgQBA0BQCThZCX1YKWucv5Ks9ElLoF7ILZow2teBLwmGMNNwHu2AWugmPgpdAv5wMzveap2YwVF4FQ2o+pl+/4x1MLHAWSNAUwquugdLw+6ybM/Shv+gc+ktKYRwY5B3Q06G53sgkJ0CmD4YmKxUTre28G5ru7MLYy7deVzbj3AO1S8PXL5v7MF6JjLXgxGwPnoy3Im/uK0gIun65hTVXYYIiEXL5LHTFR2zXaH0QSLkc7IIZpqGftutTL95guLIO7Pw878Z76QDU+Cbhk0zvZHz3Y/dvjH9BNiKqb4DyXT3vWYxGDFfUYLSpBWCd70ksCHQoonFHHS/KspndITzx+DkMacdWTf4LI2P4lnkco40PXJLnDThcROYHh0D6LJ/wSZUSxr4fLjfuDUPY4SKi2hMHWbge5slpDN+qg+n3CEi1Cr7pyU43OkYqcVNzECW6PFHLAzgI9MvJwN8Pn2FIK8Cfu40wpORjurPLtirzwUSQaFbF4aiuEE8V271i48rht7CuKBcTj9rBmi3/PUVAV5SL8YfPOM+BmswUhN8ugzwq0qXAnobgxYSVKGK2IqzyKjTpB9azGbfB+UuEL5TWF/qyCwg8XQyCptarGbcjuMDNVs4SVOBmLKgKInAzl/RdEihtKjkrUNrWtCFtrLsI5x4oHe1YG4cCpcNF9rErUDre5pg1BUoHLLmzTODiEd99aFPGeEWlZCOggcUyk7ftlm0U9HufCNQwiRig/dydRZT8A5NuA2TxIC2hAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CV"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CV"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CPV"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Cape Verde"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"佛得角"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"238"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAC70lEQVRYhe2Xy08TURTGz7zaWotAeVgFKRCoCSVifBAToonxQQQ3bnTnQuLCYIgb2eif4M6V0YSASoKasNAYxeimSCIkCIWWlBIeGmylUwx06Mx0OnNdNCESGWduX5bQ32rm5jsnX07uPfdcAk49hJ0G+b8NJEPedLbIm84WedPZIm86W+RNZ4vdavrG6fHUk2BBQWUbVgBJKggRiW9bIdd3c7Dz/NiJ6oDLV8WJxr81mQC70vfbXZvfwTXL8NwhUOCzvzKwVrCtJhNgVLrAJPZ2DHacGb/c5Hf5q8KcGQDMjNT5tM3AyAtsMQA4bOzrrv4rJ72NB0ND03UxmcqEaYxKRwTjwGgjH6M9y2WzwdLE4seZ2phCf5qpTfzOBks9P8pjMWZgtJETDen3CwC4e5qmlO5XrYuhop/rFjXNUrjo7suLNCmvRFQ1KULoeW4RBEr6YKUSq5oTIaQpktffA2mhLC242WXOBYpA7buQlDd1kBYS+1hw2/mpGont0RRvDezh3TW82y6xT7ACNdFTaSR4nQRQxoYp3IqIXicCMDVMA6RzhxALt7r+rSAZiTSLAEje2IPitP7UJB0n9/IAhBI1KhKTms8tEF+rD6cxXXbYkQMTXXSpVVPElK9CnJJWC3GzM9Y1RMvxFWtS3tTR0QR6BW+TMHNMCj/HOuMS+4z3HRW9TRLbm2SbUEFH90BxweMAAJPTDwTOLIFk0VOPAJmcc3iBWugwLUeU6BhCMmVpAdKMkVuJytwIQRCkuRmoAm29bnRd47kGdve41qx9xejRpALePP3g6tC99uHjtcsT3w+scttslXpb+NH1N13nvlQUR1yz9pyYp9+5HQY6HhUN/mDJ5vqfb0R/sGRDZAyM/HbSkSvztL30V/eL1miM9gXLQOWNiAi409+2v5CbD6W7PSdnej5k5SUm4RgAONFQYV0/61jsGznywVOXWPQFyniJyZxjSP0an1yyldzunvhmS4sbneyOlpcL7EjTvwHsr2BpoG59VwAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CY"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CY"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CYP"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Cyprus"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"塞浦路斯"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"357"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAELElEQVRYhe2Ye2xTVRzHz322d323uLlunR03g23qhOlQNlddgwEEMp/RKBCjJhijEk0MMf5n9D81kUSixCUSMY5gijEDFbMJ25ThHrCHTJCxbuxB17W2t+tt19tzrn/MlIui3Ht712myz3/39vx+30+ac849OZgoiuD/Br7UAmpYls4Vy9K54r8inZjo4Uc7ZA5eamlRDJ/6cPQjT2y4hc4vl1lELqrSv5AKjcRH2iJ9n81PD6zc3UfbV8qvXRppfrR9onm7ELmcV+op2zNC5DkUledUGiajc+e/ifYdjP16VFdQ6drhM9/aCDDFU1Qb6clDO601zxKMDacY0lSI60xXReOzAjcVbH0rfrENpeIiTAEAjKs3l+w8gpE6dXHaSEM+7P+4IfNI5NlpWykAID0XSMemRQQzP+kLqwys1173smpjoJV0mg9JHyEfTvDhvw/DcMK1w0c72Czj1Gx5IkrPzwxzA4eF6AQAAMZnk5O9cgoJxp69MVD3TweO7Ql1vA8AwCnGVNnIj58SoSCnMM2HuMEvzbc/piJUCibzPJ0Kj3L9zSsa3ohfOjH2ycaF9aQCQm9x7zqhd65RV76AXGkRwUt77xR+98NkNJs8gGE4ZWBf7Vf0NfkLcqcHhhMG9v5Q5wcqMhz1r9nXvyhExrhfvlrheR0jdfDahasUBXNa76xWl2FZ8yTtYGkHa2C9f6Ya89W1WkDB7mGt3m6vfUlRd0Jvsd29S+9cq9DqBsid0wvw/k7/fq+cvYJgrPa63baa5yirKwu966NMGgCQnO6P9B6Inv0iHbtybSfcfNvDTHENTEaNZQ8wrnU4bdDSVBql7goBJiLckA8gIe+WOoGbGv90a8GWdx11r2jud31EJaRS89+1+RBCCCHp+8C3b3JDR2Q2QQie7j05E5xSFC1F2ReRouij3x9CCCJRfHDD45n3+Rvfltmht//HYOjK54f3Ne09pihaiuKzxxMPPQ8wrKqyprPruNLa030nHfZ8k8Hy1KMv0FQOT3kMY+QTcV/LAYQgSVL33NVw4xoAAAD+8Qs/dLQghBru3WI0mJXmSlGzEMcuX2xt/7q8rIqiaBwnwpHgBk8jhmH/NP6n7la9juFiEZvFMTjcU7l6bXVVbTbSak55RU436y6P83MAgLNDXYUFrsFz3QRBmoyWkuKrJ89AcHI2FKBp3fnfBiJcuKjQTRJkwU1FFauyOi0B1VteRqvZt7+kmBVFkU/MdZ/paNz8tLd+GwBg4Fz3vqZ3PLWb+ES8rLTi5zPtj2x9hnXLvSRYROkMF0aGBod7AjOT66rvoyldcj5hNlk7u44jBOvXb6pYdUf2EVK0kQYAQAjDkaAgpJoOvmcx27z125w3l5iMFoqiNekvRTPpDMlkgiAIDMdJYrHuJ7SXzgFLfZenimXpXLEsnSv+AE2qNT0+YNbtAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CZ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CZ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CZE"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Czech Republic"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"捷克"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"420"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAABX0lEQVRogeXRsUrDUBjF8UMTxNKldNBNhS7i4AtUKPRJBEH3PkHAZ/AhOmZ2y9C5S6BbKcVFC3YQK1ip6yklJW1yb77v639L7nDv4Yf758H6/fNrfSwF0/AmGryOcHHexPXlGawX1Nvd6PvnF3GSYjz9QOf2Co3Tk6rf5awaf8RJirvHF8RJWtV7nBfU292If1jXrmUdWNXeEuYsamcKc5a0dwpzVrRzCXPatXMLc5q19xbmNGofJMxp0y4kzGnRLizMadAuTZiTrF2qMCdV24kwJ03bmTAnSdu5MCdBO/R94d98jreHJ4wXE99XA/A8uLeYoD8borVa+rx2Iy+DW6sl+rMhehWpcs4HS1DlnA2WpMo5GSxNlSt1sFRVrrTBklW5woM1qHKFBmtR5Q4arE2V23uwRlUu92DNqlyuwdpVuZ2DrahymYMtqXJbgy2qchuDrapyIWBflQuPQZX7B7DZ96Mo0rcOAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"DE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"DE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"DEU"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Germany"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"德国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"49"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEMAAAAoCAYAAACl+UfqAAAABmJLR0QA/wD/AP+gvaeTAAAAg0lEQVRoge3XsQ3CQBBFwT3kjLqokL7cAbWYCPQ68AUzFXw9aYNdM3MNMzPzuHvATsQIMUKMECPECDFCjBAjxAgxQow43ncv2Mj6+Fr/nEmIEWKEGCFGiBFihBghRogRYsTxfN09YR/rOj1qP84kxAgxQowQI8QIMUKMECPECDFCjPgCo64G3D8TO3cAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"DJ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"DJ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"DJI"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Djibouti"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"吉布提"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"253"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH2wMKDTgguBnTmAAAA7pJREFUaIHlmV1oW2Uch590acZcC9pVFL9BvRnzYjeD4Y2uXolX3nghgqJM8MI7cdiWgchcO6bF2cGwOnohymzrx7pVy8KotKisHUvaJG2zNl3TtIsxzZJzTnKSk5zXq3QUtuWc5Jx86HN3XvL+/78H3nPyvuc4fFFVDPkkonKe/wMOIYTI64KJUJqxoEJG02udyVYcQghRvJBzOufnZaZW09we/W+xTbhIOKkx7JMIxnO1yGQrdxQucm1DZdgnsZkpVDOTrdxTGEArCNzLCuPXFbL5xl/nJYWLJFWdEX+KmYhKI2sbFi4SSmgM+1KEEppdmWzFtDCAAP4MZzg/L5FUG+tvrCzhItm8YPy6gntJQdMbY6FXJFwkphT40S/hualakclWLBEuEoznODeXYj1Vv9tUS4UBdAGTN9JcWJCRc/V3f1suXCSj6YwuyPy+kqaebm/bhItsSHlG/BL+v7N2tjGMeWFdR7r4K62vvGxq2lw0y5AvRUyp7Ta1yeyEzMxVEl+fNd1o30M76XqhnVf3trKr2XRbyzDdWfpllPQff1GIx003czY56Hh6N0dfbOfgE7twOEyXqJiSSzrrDyC029vIyFuH0cJh2o98QMtLh7bGmx9/jB1tbaaa1+IYWlJYveZh/fB75EIrd6ngoO3dd3iw+yMcLpfpAAKYiaj8HKjOMdTQQ0uXZaIfdpI8N7RtfMeePTzS38fujkN3mVkagWAkPMbHvs9ZS2+UXccopp7SS/sPoK1Ftq4f/qyX+994vezm3lsBurw9TP0zXXYNsxh+aGX9AbS1CI5mJ65nnwFAHr9UVtNYNs77V7vpuPxaVWUBnEZ/KI1epPmpJ3n0zGl2PreP2LHjJAbOossyTS0thmrkdI2vlr7l5PwZkppUduhKMLyk432neODtN2lqbd0aUy5P4HC5uO/5gyXn/3Zzgk5vDyF5teywVmD71nIhtUT37Anc0Uk72xjG8JI2S1KTOO7/km+Wvycv6uetp+XCeVFgMPQDPf5+4rmE1eUrxlLhqdgVjniO4U8FrSxrKZYIh+RVjs6d5MK624pytlKRsJJP07c4QH9wkGyhPs67pShLWCD47sZPfOL7gqgaszqTrZgWnt700OntZXrTY0ce2zEsHFVjdM+eYCQ8hmjgjy0lhdVCltPBQfoWB1Dy6WpkspV7Co+uX6LT21OVY1u1uKOw91aArtlepmJXqp3HdrYJx3MJPvWdYnBlCF3U30t0K3BCfRzbqoXTHZ2ky9vLorRc6yxV4V+aa/DiOPcnigAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"DK"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"DK"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"DNK"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Denmark"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"丹麦"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"45"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADUAAAAoCAIAAADRzCViAAAABmJLR0QA/wD/AP+gvaeTAAAAl0lEQVRYhe3XMQ5AMBiGYRUsHMBgMNmIKziui1icgQQxSmxIUBur5ivp8D3bP/TPmzQdKqogtxRlVemnyT3u01zHheqSl+yP9urCPgz7MOzDsA/DPgz7MOzDmN4nlqZXPeNFoe259yiPc+tGrVUPIaX8aLUWpt8v+zDO2g6qZ359H/xfQtiHYR+GfRj2YdiHYR+GfRjT+y7cXyK/ovCf2gAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"DO"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"DO"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"DOM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Dominican Republic"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"多米尼加共和国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEAAAAAoCAIAAADBrGu+AAAABmJLR0QA/wD/AP+gvaeTAAABtElEQVRYhWNk0E1ioCqYWB6ZF+2CVer1zEVPKlupax0TdY2jPxj1wECDUQ8MNBj1wECDUQ8MNBj1wECDUQ8MNBjyHmDxsNahrokK0iJw9revX5mYmTk4OCBcNjkZPmdb6lrH+P//f+qaCAFrNu/ds3fLg+dfGBgZJCW406OjLEzNaGERCy0MffHy9enzV4zMHIPkpUxe3H/17dvMbQf1dfU5OdipbhdNPMDGw/JL992ZS99evzj76cXb37ysjyQe/vqXzMlAfQ/QJBPPOrH4689vwTrG4jzST0QVRSz9zr2+c+buCVrYRRMPyAhIf/n1XuHggb8HLku8+H74wpmvv35dfnObFnbRJAmp3Gdif/d3v5uED4/3ub/MLx7Ndn6vYPZDkRZ20aQUevPw0bygaF7GDz85GTm42Nje/f/CIpi+awM7Lw/V7aJVMfrt85c/f/+wcXP8///v+8dv/AL8zKystLCI8U5IMnVNFEmK4vd0wiq16cCF6Sv3U9c6lk97D1PXRD4XO1xSD56+2XH0CnWtG/JtoVEPDDQY9cBAg1EPDDQY9cBAg1EPDDQY9cBAgyHvAQDmXosIseZuTwAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"DZ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"DZ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"DZA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Algeria"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"阿尔及利亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"213"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADCElEQVRYhe2Yb0gTYRzHf8/ddrc5t1m5HLelM5LVJPEPVAoVLovAEOpNkW9EqBe+KEJmFCWY7xZlUCChveqF9U4khUCkF2WRgjLLfKGWZtNNy5lOp7fd0wtl53Sr4LkdBfd99XvuezzfD7/9xj13CKqLIDnCT/qTtDOVpH2TKgVaLinQckmBlksKtFxSSbgXE4FTXuT04v0BZOBhOPsEnabX5tkNZ0qNFU7EMlIFIake4ye/Qe0QcMsorstkceY7V40VTkmyJOg0hcHlQZVj4pUQDe1Z+EZTM5tjo7SssLS8Mjiy0N69/N5jbriCaNKZlKDTNwfhwrjY4DcZuL4IZjVxDkyh4dHFl69N16oIE0k77fTGEHfuwbeKIJKglRrHPrXVHHw3qDuSTxJK9EuxAtR5xOWHHVCfmHihowcAaEMqm2PDazxJLhF0qTfmn3f/IOYT7Odzt849fLpeq3alrX2dIcklGg+nV6y/6KE/PcadvHwb0XTG9UuAsd/dklpcGLXUlt0kuUTQjoDY5t5tGJa7dSOO8sCzTkRTEBFAiEQtSsOS5BKNR3pIrH1avMWljfrMtnsAgCMCACz1Dny0HhuvqJl/3kUSCoTQaBMnhniPFZ7ffBnRFKVlKQ0LgkCSSzQe/hTIWtyozStbXd73fbLSBRiQWoX5sK44f29XC0lcVESd/mQUW13i3+pO1z8wni2zD7TbPR1IrQKKjlpCaJUklwi6hxNr2yIcmo1xMx83WpsbGJtFbTZxbhcOh6MWP+UjySWC7uZgQi8uXR5gE8zqzqpz6TUX1+uw/weTbSXJJYIOU9CUK06IfQE19iM6Aff6ES/yc2l1bILwzER64OrhoNUucp+egkdvwRSKf3NoeDTQ9kJXXEAYSkMB9+e7fqs+E+h5lDe/scwMovPjyBSCwwcKKF0KpdXwvrngqz6/u3Xt85SpthpR8c/cf6//8iVAMmgAYCLgnIajM8gxj61BpFEzjM2SUpirLysxlB//F1+3tkv5ahojBVouKdBySYGWSwq0XPoFra7rR6uduhMAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"EE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"EE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"EST"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Estonia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"爱沙尼亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"372"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAD8AAAAoCAYAAABJjCL8AAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH2wkCFhEKuJP5egAAAGlJREFUaIHt10ERwDAIBVHoVERkVEYMICzyqobI4LD7FPyd4ULu83dAPdMDJhlPZTyV8VTGUxlPhY7P9W3sY5MRgY1Hn73xVMZTGU9lPJXxVG9VTW8Yk93tY0NkPJXxVMZTGU9lPBU6/gKtNgqJDPkFCAAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"EG"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"EG"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"EGY"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Egypt"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"埃及"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"20"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAByklEQVRYhe2WzWoUQRRG762fnu5OVyatdIYhqGAgmt1ocBHEjeBD+Rg+x2zcuXPnSoyIZmFAZxMREpzpSTs91d1Vt1z4AIKU7QTqLGvxfYfLparwJD+A6wb73wJ/Q5DuiyDdF0G6L4J0XwTpvriW0rh4+cp7KGGjxUzaQtJN7+EAgM4576G2qxbnr9P8MN35J19Iz+th9BzAcakGW3umWQAAODJ67rdFeMz6efneURvDvm1Xtr1iKNfLMzG4oZdfsBpkxcRXkV/pk+riXbZ7FKXFQN0h26x+fDR6WV28VaNHGypNpkYml9/frMuz20fPydTnH16k+QEXirraY5HPnbamBsbAkSoe/j5RxcSRRWTWbqx0V6MDxiM1PhYyE1Kp0THj0iHYjZ002RocMZRRXJBtAUWUjhAiJNrc9QBnidqt4gGX2ao8XZWfuMyy3QlRA2A89viUdkT5rWfD8WNkTJczXc6QseH4Sb731JH1WOTzRazLz/X81HZrMg1n0qG1nWYikclOkt9Ph/d8Ffm88pLtu/rqq5Db1qyRS85TQN7W3xhEidr3WITT6dRnnDOxqOI4RkQAcM5prbVRDn1OJxAIBAKBQCDwB34BWVq9reDMy7sAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"FI"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"FI"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"FIN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Finland"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"芬兰"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"358"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEIAAAAoCAIAAADFWbuDAAAABmJLR0QA/wD/AP+gvaeTAAAAw0lEQVRYhWP8//8/A+kgtHL1mr3X8ChY1R4a6qxFhsnkASa62URTMOqNwQRGvTGYwKg3BhMY9cZgAqPeGExg1BuDCbD0LDlGhrZbj97iV7D58M2Hzz+Q5SRyACODaQPdLKMdGCaJatQbgwmMemMwgVFvDCYw6o3BBBi7Fx8lQ9vi7Zcu3X6JR0Gsl56eiji5riIZsJTEWJGh7eTVp/i94WurPjpqSDIY9cZgAqPeGExg1BuDCYx6YzCBUW8MJjDqjcEEAHs7IzMwrIT0AAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"FO"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"FO"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"FRO"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Faroe Islands"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"法罗群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"298"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADcAAAAoCAIAAADVOfVfAAAABmJLR0QA/wD/AP+gvaeTAAAAwElEQVRYhe3YsQ2DMBCF4XPkng0sUWaEiM7DMEI8A4yQYdwxB5L7FExgikhR5CLi0KM46X0dFMcvLATG1VrlMDdmEUklP0v+npxDnEIUkfqKx0ep3C6ai8VKHFbisBKHlTisxGEljo1K//kYgwCOahi5l6mob8Cwrc3hiSEq7n1/XHoBCBsrzkocPwf1xm/Y1t8HaOn6peuhVS0/6StTyU3liSEqRlZctdX//3bhXwMLWInDShxW4rASh5U4rMTZASvKKuF1jF4HAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"FR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"FR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"FRA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"France"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"法国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"33"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAWUlEQVRYhe3OMRGAMADAwIIVNiQgCT+4QwMWwEOHsPzvucsytmvMeu9zun32Y7pdp8sfma6YrpiumK6YrpiumK6YrpiumK6YrpiumK6YrpiumK6YrpiumK58Oo0Enzns13kAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GA"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GA"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GAB"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Gabon"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"加蓬"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"241"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADUAAAAoCAIAAADRzCViAAAABmJLR0QA/wD/AP+gvaeTAAAAc0lEQVRYhe3RMQ2AMBQA0ZZUAwKQgRpMYIcZGQzsBAvoYMBBGW74f7hT8JKrZVtK4oZowE/6WPpY+lj6WPpY2X1tn65oQ6/63mO0oVf2v/pY+lj6WPpY+ljteOZoQ686r2e0oVf2v/pY+lj6WPpY+ljZfR+LVwgbxJ5bxgAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GB"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GB"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GBR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"United Kingdom"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"英国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"44"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAADL0lEQVRoge2aT2jTUBzHvy0BJ7Ywuj/Uw07LGKiIBSuktQxPLQxxh9KDsmELvQy8CPMm4lXBi7BLYIUOPcweBjLdTqPOLswKFZnCaMoOOzj2j0ErTijUQ32zTZOa9qVNs+ZzTF7yXj755eW993uW7J37JefMNGxeN5RYWRPx9OUqhMyOYhkaXr0I4u7tqwCALwNX6pa9tr8JAHj99ivuPUy0pD2cawhPHtyC38fi56cMdp/NIp8UqsrYvG44Z6bBFFJpiKnw6QE5kX4fC7+PbblIvZGKywWjiuKIJ4ac6GaRzYgjWEeW5mEf404PFFJpiBNhiBNhFFJp2Qr9PhbrC1Esz02Bcw1p/0RtgnMNYXluCusLUdw8l0cuGEV2fLJKns3rBrsYA7sYkw0q68ffdgwneHSTSC3EAeV/gzUQicMT4tENIrUU5wnxCETi5T5QyOwgEIn/6wsSfM3fx8h9JE0fV4ncczGVBc6ayFaKIzAy5Q0vsh3iCLICCUYT2U5xhLoCCZ0uUg9xBFUCCa0S2Sx6iiNYwD4uNXzVXxqZM9Z7gB97eVwctANQPxcm19DUq8WXYFl4t9m0QEJf73lcGhmEs9+G4tExTrZEFPcPq8owfQ70jA6D6XfUvZdagQBQED43Vc/uQQHfs3s4PP5Vty41WEqlErVALWlEYCdg1bsBRseS6b/cURFoNMwIpMQUSIkpkBJTICWmQEpMgZSYAikxZyKUmBFICfPm/Tfqm1QuJihRPDjCyVYOxcOj6gYM9MHGXadug5p6ekZZMI5ebRcTtFrOUqKQSmP3+WxNRs8+xsH5aBoXbriolrNo6tViOaupT7gyPagkTykdah/jMLI0j+FEOZXqCfFY3dhuuA2rG9vwhHisrImy55XSk/mkgOz4JHLBcmqTNh3bkECtxQUicaq3T1bI9RSpSmCniZOip8i6AjtdnBQ9RMoKNJo4Ke0UWSXQ6OKktEOkFTh74qS0UqRl+UO2RDuOox1PtXuLr1bj15U1EdazGHH/Q8uIrNmZoDriQryhpMlRs9NCJphsXjdYb6zGSz4pIJ8UqvdId4s4KTQimW4WJ6UZkX8AWnRGzGET8yEAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GEO"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Georgia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"格鲁吉亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"995"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAC80lEQVRYhe2Xy08TURTGv3unUtpOpw+k8hK0BBcmusJEBUJM1J0xGqIuNGyMGnXhf+BfYcLCtc+40I2GuAAloltXSCwWbEmFQEuZPob0znExLow6d7COY0zm2/XmfPf7zcnJyS0jIrinL8mDvzzftf7exRTu4l2eyYf2Ss7QtXtPV9PDq+nhxofM3+NozGWslNr9Z47FAccKpStllspgTNnd5QaeTUpPh1kqA1C6OxyLZdDVuw+U3i5U6wBYONSYy5j5Aplm6+mTbrECqD+dZJzz7g7WGqS6YZY2jMlXYmk5fPmCnYVJVt5qetj6+u8VPDESf3jHztLEyiudu268nPnhkCdi7ZnXdhbZTFNDgDGuqQAYZyyqfjt0VdaFLKoyxgBwTQVj8hRZpxvzC0pft5j/tDZ6joVDqdw7KuvmeknZ02NnaaLTIpvjyTjT1JXOQ2QYbTNPlP5esZgP7EvbWWQzbdlE/gsAqtbM4gZPxBRNlViakNUCc61EhgFA5AuB/QMSYmxne4CoZfQwACpuIBFzh/TnkFLZSoEwHYtl49GE/LeHrXxor8QKiQP/muG39V922of2Sj60V/KhvZL/9vBKPrRXcoY2nk8Vz1wpnrkiFpb+HofILFkpxotpx+Jt/HNR+Nb0WwB8Z/LP4ezEkjErJXJz3LFY1unG/AIZhtKZAsDCIaapVNZFNucWqCWRzVFZ54kYCwYB8M4UGUZjfkFika28ld4jVKnyaMQs64wzRCK0qbccO5p4MmFnaWLlFc9e3ZqaZVEVeoWIuKaamxWmRlKLb+wssvFgAYWIzLIOgEzCpm4dSixNyLqQNnXrpxUnT5FBq7dvKQN7UakWz99g4XDb9COxmKNK1T1gAAhdOhu+dlHp61kbGaN6PfF4Aq0t4mO2SejQ+BiAralZAFSr8c52pb/XVWAACJ46DoD0CtXrALAj0DI0iKFBicV55YnlFR7XeCwqPi+7xPmrlFyBxzUe10S+4Fjsvz28kg/tlb4C8ug3LYcwaAYAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GH"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GH"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GHA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Ghana"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"加纳"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"233"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAABt0lEQVRYhe2WTUgCQRTH37RqmZmoEEUhBNatYx4zunbxLEEF3cRTRN2iY1FIh659HDpUS3XxIEiF4KGC7OMaBEEo4QfJYrqz7nYwMiSI6s2EML/T7mP3Pz/ezswOuXIOQrPR8t8Cv0FI80JI80JI80JI80JI86IppUluvY9FblbRCQG3jUlTTI5RlUXuvvxKCMyMW1mEs5oeh/HKYbzCKNzEIjT/op9dqgBQKBrOToKez6TT0YRKNaAaRBNMmo3T6a3j8sUd/bhNXr1fr2yWkql63Tdkng60/X04ot10/T2lqsPadmlxQ6Ha1w+YTbAU6pidapcwPi2OdI3zWzqxUHx4qjbU+3ul3eVO35AZayBMaQB4zusjk4X7x7q31yMldpxdLszFg7wQ7TaSyeqfK5msbrchbyDI0ifnqlIyAGDAI3k9EgAoJeP0gn733s9Alj6IVQAgHLSmZNe17AoHrQBwECvjjoL5c1GpkUxROeIIjLXWKpF5u3/YMreqqNSwmNEmCdk78mJl5bIapUZ3T+MukU5Ti4W43WgNIhDyY2VxoynP00KaF0KaF0KaF0KaF0KaF00p/QbJW4LWkSgFKQAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GL"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GL"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GRL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Greenland"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"格陵兰岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"299"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAACpElEQVRYhe2YT2jTUBzHX7O2rF07sWDFincRBHEKgs6DHmQgA2+CY16HQ5kHx05lMjYPw4uKfxDmYROEiUI3nBM3xyqok8L8M9AOaxvbps1s7Lq2S5Muz4NFC7Z5ad6PjEE/15ff9/shkJeXmDDGaKvBbLaAHurSRlGXNgozzTCW5CIvSPGkkhMtbpd5h8vsdkGZqaBHWsmv/3o0lZnyZ+ffK3mxfMmy29186ti29hPOk0eADCtgqm2fVhRhbCIxcEdO/FS/0NHa4hm6bDuwl8quCjVIF3kh3NGbe7OoOdvk7unc1d+NGOAnR6u0xHKh9u7CN7bWAte503tue2G9NWVtZLKhMxd1GCOEhIeTnPeWjkEVNElHe64VgmHdHfyN0cyzed3j/0OWzs4tpMenqUowjl0ZxqJEFVIGWToxcJe+RmK51IMn9Dl/IEiLn5dzCx9BmlIjRkmvTs5BNYlfQoXlCEgUQTrrD4DUwKYRpOVoEqSmlBaDSSNJJ1MgNaU0bgUkx/zBeUhleX/Sz9htIE0IIWHMp16nEdKdjsPcm1JajAfJIUrD1MCmEaTXZt+B1JTSXr4FySHt0xOvQGoQQuufghIbB4kiSBeCYag3ojDqA8lBWs4e8d7riPovlPj1e+r+OGXIX8jS+cBS+vELqhKMOe9NXNygCilD03mavXA1H1jS3ZEYvGf0eRohhEUp0tmn+8slOTyiY1AFrZ9uEssFj3bUtJlgSY5eGvrR1Y8URZdbVRq6rB6tErKcfjojRxP2g/sanE3qF2f9gcj5vsxzP7VhBUyLjpZaZxi7bfvZtua2Vsfxw4y9sXxJjvGZ6dervtm1GZj3SEX0SP8btlrMbpfVs5NpapR5obgiFHkBUK5qL430ZrEl/5rWpY2iLm0UvwGz6REQARRWHQAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GN"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GN"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GIN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Guinea"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"几内亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"224"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH2wQFBTsNMrtB0AAAAGBJREFUaIHtzzENACEUwFAgGMAEI0JO9SXsaMEBmPgLTZ+AJs2r9ZMCjX9H5lKdX2ivhNYe4DCdw3QO0zlM5zCdw3QO0zlM5zCdw3QO0zlM5zCdw3QO0zlM5zCdw3QO010lTQVDNqk5yQAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GQ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GQ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GNQ"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Equatorial Guinea"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"赤道几内亚共和国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"240"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADBElEQVRYhdWVTWjTUACAX1+aLktrnTUuCvsxDrs/QYR1B1HBn4OnqcicF2HgwYvgQXAH0csGInrwIGwMYQfBgx6GF3+YIOw0yxSHTtiPm126jbbpQrd1Sdv8eOhIa02z17W0yXfpe3mPlw/y8WpreXqx1v0BWAo4F3qwlWiqtEZhQFmp/rXyWFaqK21SABAAsJU8Mh/uq7RJAcD0TyjWFYp1VVYFHaiN5sN9Vok7I22huGH2xCpxw5y5JeLOlQZWiFtH2vxx60gD08etLw3MHbcN3P2Wb43AlcGrwcOeZDmFULAbrIkp+OSz13+n2enI+0GySYibELNHFoar3J1b3DsbtLuoC3F+kmJuAlWtIlwlcgYYOHnLYDkSl1bWU5eP1aCcFVp4FV1+n5IIu/N4XDqk2JsBdkBYn9mMTiTjs26qo0TOhnlojPQ09vo8KMdxHEdRFADg49LEfqKmo7Yl+2GpMMpD4/Yo66sn2w8SiIe+XRjv+fSQhI52qmnozD0a7CnCUAekWONJ5drLxXhSQdn8M/L7/uTwqZqW82TrH371xffR4gx1QMojTa/PM9LTaLyH4zgRk0Pimjo3K/DC6UvXQaXySJOUVOMNqqoCAOr20XWAnmFX4d6q7CWbzbY7xf9BygMA0EYTw90NxntYltXGG2vLsixr02AwuAu5fCBJOx3w9Q1mx9ua4ziO49Lj6OKP8NKi9pzn+WIsc0DK4/mVepSrw+Vy4TjOsixBEA0nzm2IkOf5RCIBIZQkqWjVDDtL9/o8iJc0SZJ+vx/DMJqmvd7OeodjenpaEAQcxxmGKVo1ww63RxtNoP+NAwAURYnFYoIgBAIBWZYZhiFJ0u12YxhWCtttjKSdmDreEWl1pUr4vpJglEe//1ntm7Fo2VyQyfvduwNj3YGxcqqgoy99dH1pYGqwzCro6EiTkjj05REpieW3QURHemBq0LsRKL8KOrnSZk5Z4x9pk6eskZE2f8oaGWnzp6yxLW2JlDUgsE7KGtBCKWtg/U75bOhrpTUK4y88mDx+xqr4ggAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GRC"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Greece"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"希腊"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"30"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAABOElEQVRYhWPkjVvPgA3ICHFe63eHc+Onnl5/6ilWlfQHTAPtAHLAqKPpBVgoN6LQW1VBjJtyc4gHVHC0t5GkmYoQ5eYQD4Zk8hiSjmZREMWeHCUEOJC5onzsuFS++/Lrweuv1HcabsD4//9/Co1waT506s47qriGSDAkk8eoo+kFGP06j2CVEOZln5dpAud2brx57OYbrCojrOXQci2tAcv+q6+xSsgIcSJzrz35hEtldZDmaOVCGAxJR1Oh7XHu/vuvP/9Sbg7xgAqOLltymXJDSAJDMnmMOppegPH8/fdYJVhZmLRl+ODcB6+/fvj6m16uIgCo0MqjPxiSyWNIOppl8IwbEQ8YcQ2LDWYwJJPHqKPpBRjff/k10G4gGYxWLvQCQ9LRLP1bbw+0G0gGo5ULvcCoo+kFAAf4SH6+iBvjAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GT"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GT"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GTM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Guatemala"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"危地马拉"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"502"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEAAAAAoCAIAAADBrGu+AAAABmJLR0QA/wD/AP+gvaeTAAACqElEQVRYhe2WXUhTURzA/3e797oPddvdnFfzY5vJgs1MtEAyIQjJIPQteqhBvdRrL1FQL4E9RBBB7cWHAiVBTMI+pAklWy0rZGKutDa3OYc6c3Nud/dj3vUQ+FrkiVtwf2+Xyzm/++OcyzlYtzsAu+Bql6XDpvvj4b7wZt/LyG4+QLGbwf8CcoDUyAFSIwdIjRwgNXKA1MgBUoM4gBO4yenneTb38/HB01veT56dt9OffRyfR2tEGcCyzMD4He/M+LeleVEUAaBOrL09fGXY1w8AHMeNvRkcmnAjNALagEDIb1Sb9FrKbmlKBN3pmLutZfP+mbNavPjCP4phmLOh1aQx+2c9v57rt0EZUOC4RDpO6U0kQdCN3aS6dHtb0KgIJ1UPpMhuMypSM59YWIgFEUpRBiynliLLX04duwAAStKiUOpJlRZEjKaZFmvrh6++jubjPJeupGiEUhzhXBuZNQUoikXgBSG2nKguN/G5BYETeCazjpcnU3FCSebyWxvpJEIpyhWwVtorjLUZJkUShJ5czX1/L2JKURR4NuMPvjYbarLsllFXRZSUIJSiDIivR5LZlTHvAJNnAlNhoVC/kmtKYycIw/nQYtxZd/DxZH8qn9SXUgilKLfQ6a6LUzMTc9HAo3s3el2XMBynOF4sirgWpyjzxOhDZTlxwNZuNlQjlKJcAa2qzLH3UHTEE12dmXx1823AU0VXVlfRT7wjZQT77tnQ5mK42X64ubEdoRTxSWzQUDqHtdTRsM6m5mL+gliYDvlX1z6W8QnqaNNGLGbbY0drRBxAqtXXrg/abW2RLHau93JoKZjNZJ2WI3Goce7r6Ls7jlYHaP+BHXo6XT2dLgCo0NH2+v0AcPJvaABAvo1KjxwgNXKA1MgBUiMHSI0cIDX/fcAPRuz7K22v23MAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GW"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GW"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GNB"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Guinea-Bissau"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"几内亚比绍"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"245"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAAB8klEQVRoge3Zv2sTYRjA8e/7JneXEJMoBLXFphFREARXl6KLuKqTf4X/hYPdFBcXBRF/DLo4lC4VBEUQheLg5D9Qiq2xuV7vmrwuXWo1ufTJxRx5PuO9B/fw5b33IDFfjp1zjEHj5s7H2dvbl8bxrHGy/3uAvNOAQhpQSAMKaUAhDSikAYU0oJAGFNKAQhpQSAMKHSrg191o1HPk1tABN1yXxXAti1lyaeiAb+MtvnUjfrpuFvPkztABl+I2PeBd0slgnPwp9lts/7HLOs6xunf+Lce/uOxV9q17GMpmur5LfQOuJFvcD9fZ/Mvr+iHpcGXzOwAFDKcLPncqJzlbCLKZdEL13S7X/TrPa/Oc7xPFALdKR3lWa05dPBiwAwFO2CJPa/M8iX5wb3t931rZWB4eOcWFYmnggx6sHWfxc+Pwk06oVAeWAWasd+D6Lo4zBX/UM+VK6hP/TdwGwDeWi8UyAIlzvE/CbCbLiVQBI+f4lITMWY8X1SaPq3PcrczgY3i5s5H1jBMtVcCluM21oMqreovW3it71a/yut4idD0iN5a/lifSwI8IwIJX4UZQP3B91no8qjWJeo6SMSMfLg9SBWzYf98WYAjsdMYD/TlLTAMKaUAhDSikAYU0oJAGFNKAQhpQSAMKaUAhDSikAYV+A/1eaNyw0NXJAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"HN"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"HN"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"HND"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Honduras"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"洪都拉斯"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"504"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAACY0lEQVRoge2az2vTYBjHv0lTs6aZRelarODoDlOkCvMyGCroSS8qXu3dmwgeFFFkKOKxoAz/AcEpiHrxJjhdh3iYP6bQS8XJJrZ1tW6JTZrm9aDiLmuqT3jL5Pmc3zzvk0+e53lDiIIzswLMP6P2OoH1DgskwgKJsEAiLJAICyTCAomwQCIskAgLJMICibBAIsqdl3X+mEBAEUJIFThVtjC6zYCuKaHGdTyB5/M29g/FQ40bhCZrI8fzcX/uG64/rWJsyMDerIkjOxOhxH74roFn71cwXbZxal8Sx3IJ6Jqc6SRtBuqaCtv1UfxgoTBVQzoe3rNLm1EUntQwM2/BdoU0eYDECgSA4ZSOQzs2YtnxMLLVCFzv/xouakC3j2RiGB000K+rGE7pIWTaPVJnoN3yYURV+OJnS8einSvl3psGAOD4rs6t/r3lQ9dUqMqfPWQhtQJ/35iqoKM8IYDzjz7hxnQNCgRefBzA1cNboKxRiatjyZQH9OAUFgJriliN1xbov/AaALB8ZTe0SPBF3cYOE+kv0hPFGhYabuC6ct3BZD6LyXwW5boTuH6h4WKiWAsjxb9CWgU2Wz5OP1jErdklJGMRnBxL4tzBdCixrz2u4OZMFV+sNk7s2YzC0Qz6JLWy1Bb+vOIhM/4W8Q0qli7noAUdr13i+QKbLs7BdttYvJRD2pQ32qUeIqVKE7fzgyhVHViuj0RfJJS4luvj7IEUtg/oKFWaSJtmKHG7Qfoh8r+h3X31tdc5rGsU/rWDBn8PJMICibBAIiyQCAskwgKJsEAiLJAICyTCAomwQCIskMgPJui9dfcTF3AAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"HT"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"HT"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"HTI"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Haiti"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"海地"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"509"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEMAAAAoCAIAAAAqm9C9AAAABmJLR0QA/wD/AP+gvaeTAAACKUlEQVRYhWNkUJjPMCwA00A7gGpg1CeDD4z6ZPCBUZ8MPjDqk8EHRn0y+MCoTwYfYKG6iawsTExMjPjV/Pv3//eff9S1l/o+ubTDX0OZH8K+//LhmQcXGC78/q/PYq5kLC8mCxG/cfejpst66tpLfZ/Awfcf36dtn3fj7Z0PH+4KfVc9d/tCY1glOzs7jayjYT5hYfgT7xRhJWfMyiJsLWUa5xDB9P8XLa2jDfj48tKZNYf5tXQizYOduF9K6Aa8uH772LaDhoFWfGK6tLCRJj758+3ZnoWnTr/7e+3UwcqQvUJs759cXNC8gtFQhvfdspO+acIMDNxUt5Tl0oep1DVR8Z/D2yd/rly9c+4vrw7713dzD4nGsr1ddElLzPHcYyae5y9sX/1W/Pee6vZSP05+/fguqq3OrfTO4NUlGUl2YTahJ5e/SkgLWbAfYmXj5xSXF5KT/Xr1JtXtpUHqevzsIcsnQWlunp+PlFnfv3jKwMCl++75RQHL/wofhLgUdB/eOCPy5AvVrWW8JGBCXRN39JvvfHL0+ddnOlyKT3//l/7wUPyt2Buhl0+ElRS5OU6/vabMJeknZ2pReIG69lLfJ7E5jP//M5lrWr15/5blOyMDAwMrB9vvH78YGBnf/fsgIyJ95PpJVnamVVOpXMdT3yeMzEwMjARaKwz/////O+hbK1R3IpFg+LSFR30y+MCoTwYfGPXJ4AOjPhl8YNQngw+M+mTwAQDekLuhAhsIggAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"HU"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"HU"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"HUN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Hungary"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"匈牙利"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"36"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAAdklEQVRoge3SsQmAUBAEUb9YjUWYGFuL7ZkJgqGBjdjCt4s7mJtXwQ5se+ZlqGTMHhDNYDqD6QymM5jOYLpywe07zuwNoVrvPXtDqHKXNpjOYDqD6QymM5huut47e0Ootu5b9oZQ5S5tMJ3BdAbTGUxnMF254B9odwo9vnXCuwAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"ID"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"ID"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"IDN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Indonesia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"印度尼西亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"62"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAVUlEQVRYhe3QQQ2AMADAQIYDTOBfCZaGBnh0WXKnoOl4rvvYzbk64A/RFdEV0RXRFdEV0RXRFdEV0ZUx51zd8NmWp0VXRFdEV0RXRFdEV0RXRFdEV16NaQRRwg23+AAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"IE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"IE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"IRL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Ireland"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"爱尔兰"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"353"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAAAk0lEQVRoge3QMQ3CUAAA0V+8dEEBQQFTfTAgpQsrhioCC2gAEZf8gbxn4JJbxuv2HRM8ztvxvN4vM1pjX4/xeU9pnWZE/pmBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYHRD2gDCMfURpJuAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"IL"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"IL"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ISR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Israel"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"以色列"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"972"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADcAAAAoCAIAAADVOfVfAAAABmJLR0QA/wD/AP+gvaeTAAACMUlEQVRYhWP8//8/w6AHTAPtAKLA0HAly4Fz7wbaDYQBI4PFjoF2A2EwNGJ81JXUA6OupB5gHKF1z+EL76luJpVdefH2Z9e8M5fufKausVR2ZcGEGz9//yuYcIO6xlLTlWv3vzxw7l1jqsr+s+/WHXhJRZNZKNG86fCrn7//Qdg/f/0rmHDDRl9AU4HbWk8grePqtx9/2dmgocDOyuRnK0a2RRTl8arpt9sX3SNKZbxSa4Yq2RYx/KcAfPvxRz7gYFTdxQfPv3Ha726YcwcuVT/7Nqf97gfPv0XWXpQPOPjtxx9KLKLIlf///1+26xmj5Q7nnNMKgShOgXjAOfc0g8WO5bueUWgLpa78//+/fsxRrE5ZtvMpg8UO/ZijlFtBaR7/9+//z9//GBgZv//8hyb1/dd/RgaGn7///ftHafVGqSsXbHt2+/E3fxvRyum3Pn75Axf/+OVP5bRb/nbitx5/W7jtGYW2UOTKL9//1s68Hegg1pWr9v3nv/o5d95//g1BdbPv/Pj1rzNHNdBerHbWna/f/1Ji0dAoiShy5eEL7+Gl+p8//1I7rsmLczSkqtTPufPoxY/ZFVosLIhS3dZAkGyLqJDH4WDNvhcMFjsa595hsNixdv8LKppM5falY/bpA+feORoL7ZtiSkVjqRmW////v3DrE7vtrou3P1HXWOq31Q9feE9REsQGhkaPYnRsg3pg1JXUA6OupB5g3H/27UC7gTAYGuXl0IjxoeFKACArxRLhVNqRAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"IN"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"IN"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"IND"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"India"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"印度"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"91"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAB/ElEQVRoge2XP0/bQBiHnwuFkgYJEVIchw7dkJCQcFiA0WJm5GMgxBdg7QQTQz9BMrJXLUEgxJIEgTBTkYpJjEOiICANQ+W3Q9Q/KrOvku1n9XC/R76733tKPi4IMSL1vwPoJhGOOolw1EmEo04iHHUS4agTO2ElXz/F6vGgRESrsOc9Ua/7ABSLefL5jM7l9Qk3Go9sbHxmZGSIYnEKgGrVJwhge9umUBjTEQNEA677ILZdlsNDV1qtnjhOWxynLa1WTyqVb2LbJXHdBx1RRMsfXlvbY319gfHxUbrdZ3z/OwCG8YaJiVHu75/Z3a1TLq+GHYVXYS/QbD4xPDzEzMwkjtPh5KSBCIjA1VWXxcVpZmcnSaUG59s0w93aodfS+fkdlmXQ6fTxvB4iiqOjG46PbxABz+vR6fSxLIOzs7uw4+jr4T8HR1AK+v0fgPrnW/iELjw395ZazSeXS2OaGZSC5eV3rKy8RynBNDPkcmmq1Rbz81Nhxwn/DBcKYwRBwOVlm2w2zdLS9ItL6+KijVKCYWjoZB1VMKilkhwcXL+opf39a7HtkjSbjzqi6KklGNzWm5tfSKXU78GjVhsMHjs7dui38y+0j5a3tz1OTwejpWUZerbxX6i9yla8Hg/ZD69jJRy793AiHHUS4aiTCEedRDjqJMJRJ3bCPwGdo2yjQm7v8AAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"IS"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"IS"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ISL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Iceland"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"冰岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"354"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADgAAAAoCAYAAACrUDmFAAAABmJLR0QA/wD/AP+gvaeTAAABKklEQVRogWNksJj+n4FM4G0tz7Clx5Ph3+fPDLfMzFDkJOrqGAQiIxmW7brNEF2/l1wrKAZMA2YzncCoB4c6GPXgUAejHhzqYNSDQx2MenCog1EPDnUw7D3IUh5rSLZmDXkBgmq0FAUZKLGDUsDSkWVOUwsMVEUYDFRFaGoHPsDy4+pVig359+0bhtjv588ZqGE2pYDxuoYG2T36oQCGfSEz6sGhDhi/X7lCcR789+0bw6O4OBQx4dRUBl53d0qNphiwcGhrU2zIv8+fMcRYJSUZqGE2pYClYtpJsjVryAswJHir41Vz4fYbhhW775JtB6WApXPxebI1e1vLE/TgtfvvGSixg1Iw7AuZUQ8OdTDqwaEORj041MGoB4c6GPXgUAejHhzqYNh7EABYJT1aCyRhTwAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BEL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Belgium"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"比利时"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"32"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAC4AAAAoCAIAAAAOgl99AAAABmJLR0QA/wD/AP+gvaeTAAAAYElEQVRYhe3OMQ3AIBgFYUBEVdRJx2pCQjVgBE8kDSQ1cAP/0O2++eXlcopoz3lfx+Z49jXqu39eQim/MoWYQkwhphBTiCnEFGIKMYWYQkwhphBTiCnEFGIKMYWYQkwhH/VPB5/0o6SBAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AM"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AM"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ARM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Armenia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"亚美尼亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"374"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAAd0lEQVRoge3SQQ2AQBAEQY6cAZDAgy82eGIFV0jAAwqwgQJc7Ca9XQqmk2nvMA+VjNkDohlMZzCdwXQG0xlMVy647cuZvSFUv6cte0Oocpc2mM5gOoPpDKYzmK4f65O9IVT7ruwJscpd2mA6g+kMpjOYzmC6csE/UXMF68klJfoAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"IQ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"IQ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"IRQ"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Iraq"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"伊拉克"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"964"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAACbklEQVRYhe2VS2gTURSGzyQzbaxRE9qSqoSgkYL1UVsXFQRfCNpViTs3ol1YKPhYSEFcilBQxOpGiAurtZtGqVUbJIIVmlrFNn0kmpi0MSEP82piSdIkM3Ovi2yKkeJMYkLhfosLw/3PnG/mHrjUtLIR1huSSguIgUiXCyJdLoh0uSDS5YJIl4t1KU3Fh42VdhAMhTEuyYuyHFtNM8Vn/oXSjIc3Ebr65v7aGYyxLexOs5k0m/notRXTji6mOA/CqPNFb3ebbu1YOJVwxfyB5ehM0FVNM4fUTRRFietYgj99b2Jof4P2zJ4j+cdo+tfN9/2FMZVceULbOmI3129U8Ah1vbyT5VhxHYuV/hr+8dz6ofdUFwCMOiafWt6yPDc4aypMLi4FnFGfJeAEAITRO9eXNJsR17So8WB57uLwbb2up0rKfPZ9uzX2hEM8I6Vra7YUhjsGrj/suMYhHgAQxizilBs2lVvaGfMNzpoYCT3umRv3zFlD7r2qnTmeTeZWpNSfBzjld/AISSUSDBgA8qtoBEu748HlTMr4/RMGzCG+Td20uBQEgBpGdmxHyyu7ubDE7JnvHrmb5UVOcCGCpZ/NmPotRgooANAoGlZvTfkdtrD7sGbf3M+Fo/pLel1PY50aAOwRbyqXSawkL7/uW4j5+yaGzjafRBgff3TlwsH2cy2nhToIvlxGHZOPp43nW9ur6L9/8O56jT3iVcjkzVt30RIpAERSCW8itDqzbXNdJJVgeU5bu10hkwuVBiwEg3VMN3DDHvEceNAZTsYF1ZYQkdd4KBlXyZUiCksCbTAYKtWbQCAQCAQCgfC/+A0JkaZ+6Wa8cAAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"IR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"IR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"IRN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Iran"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"伊朗"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"98"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"IT"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"IT"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ITA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Italy"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"意大利"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"39"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAWklEQVRYhe3OMRGAMADAwIIeBKAAN5jBDSqQBB46hOV/z12WcR1j1nve0+2z7dPtOl3+yHTFdMV0xXTFdMV0xXTFdMV0xXTFdMV0xXTFdMV0xXTFdMV0xXTlA+PCBIA9a/LHAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"JM"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"JM"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"JAM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Jamaica"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"牙买加"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAABnUlEQVRoge3aP0vDQBjH8d8lOmgK0qGlOguOvgl3RxfByaWT0MnZuWNBR7fiq/Al6OoLsNaApWB1qI0OzwmRxGuS+9MLT79r0uQ+pLTJXUTyiGzx12Z/tDcYd2ZJmLPZ7xrhott+6e0+tzbm2a0iF0zVjq2mUiowVQt2ESolxvdoNZcf0Vt2cSqAeILw+g7TdxweINpS7RoFydHO9Lz9GgAPH9H8OzA25Ko1wsVFZzTcfzpuvkVBot45nuDqBqeXEPLD2+ieoHdWj6td9qr2bzEYYvYJ4BcsD+Q9W4dKiex+frL1qVQOWJ7AG7YpKvUvWJ5spWyzVGoJWJ7YOdsGlSoEloNwwrZHpUqA5YCssW1TqdJgOTijbDdUqiKY0me7pFJaYKoaWwg4plIGwFRZNgDHVMoYmCrFVmecShkGU5psS1TKCpiqwLZKpVb/WOu49VdaL0Y/Woz+lhjdeDC6tWT08MDo8ZDRBACjKR5Gk3iMpmn9of4ZlY2JeD+p6YwttfhPTae1mFYvarpqbHYL4vxeeVi/1ALUkJpOzf4BNdqJ41Q7t0EAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CO"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CO"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"COL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Colombia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"哥伦比亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"57"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAYklEQVRYhe3QQQ3AMAzAwKYM+hmEYSjP8qo0PnsMQ/dwFMmHwHK8z9Wq6dkBfxhNMZpiNMVoitEUoylGU4ymGE2JNld2w7GSp42mGE0xmmI0Jfa4sxuOlTxtNMVoitEUoykfOBkEAYyaQ30AAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"YE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"YE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"YEM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Yemen"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"也门"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"967"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAAbUlEQVRoge3XQQ2AQAwF0ZZgABOY38vecIEVJBQXu8l0noI/SS/N97orGjl2D1jNYDqD6QymM5jOYLp2wfnNp9XzkFXVKrjdSRtMZzCdwXQG0xlMd44xdm9YKiPC54HMYDqD6QymM5jOYLp2wT+OQgyk5Gt8/gAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AD"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AD"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"AND"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Andorra"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"安道尔共和国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"376"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADkAAAAoCAIAAADL8MXsAAAABmJLR0QA/wD/AP+gvaeTAAADqUlEQVRYhe2XS28bVRTHz525d2b8nIntsZ3gGFcNbRLRQFul0EUQlQhUqkQRateIBZ+AHSskvgBLtrAC8QlQ1YhaiqCNQikgNTjYTeM2jh+Jx5736w6bCoJgg8cjC+Hf+t7z/+nozOgeBMUv4d9z57OP117aGeEiAOg/puvvvzjCRWa0vIkwdY2GqWs0TF2jYeoaDWN2NcyMZcUAwDJ53ZTGWxyPpYrnYYalDKKb924Slk3EO+pQpoHxxpXPKUWez3DED58S1vWoV9ypX7X9nKc331z/SsB9n6n0FUIEQvwnAHB7423bmUsle0tnb+cLx2Gyws7A085F180xwApJ+fut67ouDY8GlAamZvlQ/u7eOz4zT+KCC+VGY5T3yknC9nWhUt1S8rGaHd/ejS+tSO1GorzXO3O+sHeXnIXABqfxw9Hl1aMOv3huO2RWqL66DqcbeXOgoIEmuOTUhy8sfHSOPrRYpEFH5+0e0Y/hqckgFSFV1fOGQcLEherr9oPrnVbGNq0s9MX1iwg2cPKJp1X+ftJyK/d/KqVjv71+5dbIcaO7+pRRBkU+hRzL4cSs124AueYNumT+EcBfvyEEiGUSsaSpz1M6cmAIV5ahYvpxXylzcd41VYvQ3U9+wTMZm7qez1osRi4fUGRxrOcwhBDHdnh8wIQYulAzsLhQrVZvYE6Ir1Fc28fBPgDgPLizK9yZ5x2KYnEvfRmUPQmx4AyHr752J0xcKNeZjHL+wsb9B+sCd8gdHEAAAAAI8Om5hPqw/ulcDg/Ea5pQzra78tLyrZmsOTFXdSgqwxKgf5hBvuIUPziW8ir2aKABA2BYJXWopNLayHGhXGu7q3uPyklJeNbRE7h13Poi4wtIeksP5IATuEZt2XXY1dXNybjKhWanv+y4bvuwUGEQ4/+pLC7ppRvdpGw6Nn+sFC3DSuXSBbkZJi6Uq+POIoQAoH2YUWffFWgvYOIIKNtPfFt9D2EUdCzDSJoGYlkaF4lqzgHsT8Y1I9ZZckGSZW2gGcOA8mWWYwM/MDpWeiZjaaZlEj7G5WaTLMauoUupx2HiwrlmmiuLX9d+fZkBWcwmqMcFCAAjMcb7niukksCggFqm2ooLSqX883Ol1sRcAaCQbxbyz6bQdvDdrZtKX+RjAiYs1XfWXvkmlQr1nzrJOPcCnvMEso/8ru/YvtmMkdYYRWFce8EfXLq0CQDdjiTnlfFWhoh2wyhE4X+9x0bK1DUapq7RMHWNhv+S6++hWIH9a/y3mAAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AF"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AF"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"AFG"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Afghanistan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"阿富汗"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"93"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAErUlEQVRoge2YTWwUZRyHn5nZ2Z3d6XbW7cduu/3g01IkprQqChRXFKsxEUkgRsGvBOPFg4GYcODg2aiJNwwXD4SoB9BgoiaolFgSbEtaiqUtQVoEuh8tu+12u7MzOzMeSAgmHneK1H2O807+7++Z/5t5Z14BcCgjv5azGPDMF+WtJ5a33H+fivBypyK83KkIL3cqwsud+yIsKgqCeH+etWfJJtI0tO5urEIBSVUxbtygmEgQaGujOD1NYWxsaXIsxSS+5mbk2lrsQgHR40FwHKo6OwnoOmYySWDtWpSWFvIXL2IkEq5mcXVdiUEFT22YYEcHoiyzMDyMOTODFAxi3r5NbnAQfXISM5lErqvD2xBBDCpuRnKvw4JHJLhrM6KjULyeIPd7/50Bx8ExDBzbxkylMGdn79wf9iM/EiPYHmb+m16cku1KLtc6XBXfSKD1YeRwFZIWAKBmz04cxyJ64F0i77+DbRap2bMTAMELcp1GYPUaqp7e6FYsd4S9TbV4VzaRHxikNK+TPdULgNrVRrB7E3W7dhN57XWCT3aidrUBkP3+LNZ8nnz/EN5VMbxNtW5Ec0dYqA9hpxfQOjdjJ9PggOj3Y+cNArGV6MNX0Icm8K9ch503EH0+sB1KyVm0rqew0wXEumo3orkgLAmE4puI7HsTOdpMcSqFtisOloUgSli+Are+O8rNk0ewA0UEUcYplQi9Ese4lsDbvILI3r1o8U0gCWWPV3ZhUfFhOw6Z873U7OhBEEVaDx1G3d6J3FJPfnyc5GfHSH3+FYsjo8gttVQ9/wQthw7jeETC8R1k+nuxHQtR8ZU7HhLwUTkLvu2VqN7WiZ3Pk784AoqPuZ9Ps/jHOIImEerYQuzDD8iPXcJIpBGCkP9tiMLEGN5YjMKfY9iFHNJDGgt9w3z5glXOeOXvsKMb+JvWEt23n/CzPYiijG06mFNp1A1teOpqEGMKLR8fRq4PoW5ow5xK45RAEmXC23uIvvEegegqnKJR7ngu7MOWQ/bsaTJ9Z5BVFakxyMzxE3fGFrzkRs+zMD6Iv30N6uPtkPMCMPfDGaIH3yL17THMQh5ME6yyHqgCLr2ljb9S+BobKZUKCKKDEAoQ7tmBP7KG0KPbkAoqxkgSRVuBUt9M6Lk4gubHkaBUzONriGJOpdyIhoBL59K1+18G08YbacTXtBr98gT6lSkESUKurwdBwLh1CwBlbSv+dW3oN8bREwkERWT26Cmg/OfSrn1aFq8mWP3Jp1jZHKmfTmLZMxSuXcUT1HAMA0lVKWUylOYySKtU7GmRyIu7kUJBrh484FYs9zoMEHisnaqtG7HMAp5ANWrTOnJ9A+SHRkAQqOrYQHV8C7mpS5i5DB5ZZaHvAov9o3drPDAdBlgcuIyo+dG2bqXupd34QlG0rm7kxnqMmzcpjE5gZrPEXt1P8sRx5s6d+4esG7j+P7zw8wWKw9eRPWF8rS2IAT/zA+cRZA+B9etRHJvMj7+QOvI1Zjrtdhx3l/S9iIqCIMvINTXok5MAeBsawLIoZbPYxr/vuQ/Ukr4XW9dB17FyubvXjOnppZr+LpVTy+VORXi5UxFe7lSElzv/O+G/AUkir9YP+msFAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AG"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AG"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ATG"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Antigua and Barbuda"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"安提瓜和巴布达"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAEi0lEQVRYhdWYb2wTZRzHf8/z3F17d72uFem2jv2hLaz1BWxzCiOoZBEYIs2igb2QhIgvBBONwWSN0TCyaMxMSHxBQF/xZvYNBiNmRFHjsA5nCNUXDli6ZGFk0WRIG6Bb27v1fNHlWuCuvX9o/L663HO/7+/bu0+f5+6BPkaA/5V2MQJMeEJBwvzXSfQqSJgJTwizCI/wfhZhe90JBmKzJShRMQAECBPjfNZNnQ6kHIcDVPtaSnXItGKcL0AYAFi5G1HGHWXcFk0PRJ3KcWeY6gxTqkPmVJmw/AhjnM8i3BvD1PaeFYeOMNURWQm9YwuzoZ3Srqut4P0slEObgJumoMlXvj55Vfp0SBB4BABdEborQgGAwKNTR4XkVUm5bE09po38hIeD3RfRKNyiBHt3OgcPchgDAFz+Q2xtJB+86UIIOiLUxnYaIfjwLVdrI7k8JQIAxjB4kHt5u1OUajhXSkFZPTQYh/tEfLG/1zF+2htqIVMz0lJePjzADvQ53DzyCGjfTsehfWx2SZ5KSaEWMn7a29/rOBFf1O+vmoe8zq564NQmmrso3kvLy3pMizL8nBSH3uBfe4m9lZEbVuHmRrK1i+FZBABbn2QEDl2ZkjBBZ47XNdXj3YczC2lZZ+IgYY67/DR6cOZRCU0j1E1xXxfuSKDp/kSAyhXkgggA8HdGzuVgzzbHi885ijKqE1ApMQC4WAQAsgyv7HY6GPTuJ9mxnwqlIYFHoWZqIV3UasEifNK1xodV8FcJDQBeTFZjaly8p+VYEOWRI65TR93bnqLXt1FXrkltftLSSOoElfm4TsAAMJEUv/guv3+P88gB7uN3hDY/+fKHfL6g1QHe5+s305zqEEp612uVHcv+da5wR9MVYMcW5rMhobmBAECxCACANeaeZVkGGZXWyLk/lw8N371wSTsvQJRxH+MbtEarTXA1Z+4LlwrdA+n4WK4UVysxABC0kvjzsVz3QLp64mCtSUwdj5Jqwu17DG/eQDscCCPk92GCq63VBVFOJKXfr0sUQZm7cnZJ3bMKyoqq4VHSL61rRzs3lQsQrPbkIi3ppsezHr6AkN6poFKyjDJZZv4Wf23Ou5BxyhUe+3/7tefGbPXy2ktTz43Zb5t7z617pvLkV3MAcybSqslTPoymEjUTQ3WmFcUmR4OZedOpdCqYmY9Njuq5UldoVsqP/HiSlfLWUtnWQu/rUUD3bTCn2ORoQPfDNPBOF00loqmEqUg2Oxv7JHoUcOtHWZGx0LbDbc7Q8MenvXAbQlmRma+gaCrxdP+zmb4XTNRWyvPN+QZTf5LaK6KqMMe2f3/GGV5norak3PXU9PN7i4tLZrqba1lcXJp99W1zLa2Xm99QyU3P3BwcNld7c3A4Nz1jurWlXaDb8bO342f/napKmWRakVG4raBcbmqlGAzSaRFlRTZsEuqH2yLKiuzZ2dSDqXWUFVllWlF1uG1BudzLFheoyqtdKCuyc+NbC267UFZk8279w+DaiLIi25hWVAm3vSiXW9hrBxUE246yIksb9FrKTc/Mv/dR6eBR+P8DqunYM39C3z0AAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AI"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AI"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"AIA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Anguilla"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"安圭拉岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AL"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AL"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ALB"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Albania"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"阿尔巴尼亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"355"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADgAAAAoCAIAAAAkMq7SAAAABmJLR0QA/wD/AP+gvaeTAAAE/ElEQVRYhe2YbYhUZRTHz3nuc19m7p25M7NvU6sWmi0iaIGWYn2whD6koJiZVhj0wUgMKiExQiWihfoQEqZfKkhQd32J0EgIv6QSppSCLIJKq67u68zOzL137utz+jC5LVi2cxk2wv1/ulzOuf8f5znnufe5eHPGw/B/EPuvASaqKdBGawq00brPQPvCcCCK7r4/EEV9YdgQCx4jZ1th5CXDmKeoFSFOe+5Z1z3pVpOIlqC9LS1zZAUAegJ/49CQwdAhejaRWKhqS1QtxdgF3+uyrI9yTfWaxqloO+cbhgZPuW6KsZlclhBvheFF378WBgctqxaz37KuhcFF378dRhLgLC6nGDvluhuGBtt5nOpgjDdTSNRlW5+WRnNM8ohW6frLRupk1dlRLHpER/N5AFjV368x3J7JPZNI7LMq39q2ilgU0btm5kXd4IiTAbq1MMIRVuuGLWjdYD8BJBGP5x/sCfw3h4cekWUCuBoEXzS3dMjK8v5bDhECHGzNa4iHbUsAfFz/0sdZhS1mZle59MnoqMmYhBgSOUQe0UwuA8CVIKiFzeSyS+QQAQBH/MaqlISYLctvmWYM0zgVfb8wkmasQ1F+cJxjjl27OY1zDvh7GIyFtXOOADfvTP2KpP5cMnnZ9y2iD7O5ek3jDNMbaTMCuB6GK3Vdxz+fcDMMx1MCQF8YjlEajK3U9d4giAA2ptIxTKV3zEy9OV9Wyjei8FYUXvL9nsCfSEpA5BINicglGoiiRZpWr2mcHn3FSF0OAoNh52hxgikE4BBtNTMVQR2yHMM0DugB2zru2ACwxcxc8v2iEP+akmPS66nUe4URAFiR1Del656nOKBrdGOeosyVlc5S0WTSREBNxk5UnX0tbZcCv0NWYpjGAe2yrd88r0r0Wip1xnWXJhIu0S+uhwgB0ViYjCiIntC0BOKVIFiWSG4eGU4gPq6qmyenout0Y6mW0BDfHhne09y6qzy6Rjdmc/m0514N/hr8hzhfrGqLNe07x97T3LKtUPisqdkhekCSYpjGmfojjr23XP68XNrV1LK7UpqvqBpiRpIO2RZHrPUBRxyOovVGigB0xo47zhYzs3awvyfwOeI8Ra3XNM6GXxLix6qzUNVmcA4AF3yv27b2Vaznk8kPsrkFfTcA4Hz79J3FwvdV51Uj9YKuz1dUAOgNw3OeuyyRNFnd+3ecDb8ixImqMxxFAFAlOmLbX1cqzRLrzDWd99xazHnP68w1NTH2VaV81LarRAAwHEUnqk5lAsN3t+quaFGIHcXCIlU947m9YbhAUZdoiRBIQ5zO+ZqB/toXdF6Sutvy18PQJeKAp93qOd+rde1Zz9uezWXrLGqcpS8LsW5wYFPafFJT95bLj8ryNM73W9ZgFP3kVsfCntK0NomvN4zeMLwSBBvT6Z9dd3e5fKC1LVX/0scBHRWCAaTvmEUAguhX3zvmOF22ZQkBAAZja3VjeVJ/TFEY4ticl4UQAJnJ6dEMY+lxThIAAnTb9lxFWaRqKqKGuFjV5shKt20hwvjdKM1YDMqYoHeLI+7M5g7Z1mpdzzKWZWyVrh92rJ3ZHIe6P+b/Vg07LicRu1vzI5Hoj6LbUVQUors1n6j/yPFPivNmuoee1jQVsXbR2Cc3GHSWLG9KmwygdixpoOJM/b0VEAGC3KDWHFODKwoAcuP6crzus39Pk6Ap0EZrCrTR+gMiSTRQi8P76wAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AS"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AS"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ASM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"American Samoa"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"美属萨摩亚群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AU"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AU"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"AUS"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Australia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"澳大利亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"61"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">4</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BD"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BD"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BGD"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Bangladesh"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"孟加拉国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"880"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEMAAAAoCAYAAACl+UfqAAAABmJLR0QA/wD/AP+gvaeTAAACzElEQVRoge2ZS2gTURRAz0wmM0lq2orpJ5ZSKqIoupG2ouBnX6yIoNCN6FKR4kakG1eiLsSNa6E7seDC6lpREUUtgiJVq1ZaTe1Ha2rTTjIfFxIYNP05702ymLPPfZcz99738p7CyS6XEADUcidQSYQyPIQyPIQyPIQyPGhBLlZtuTSZLmnTxXBdxnWFjKEwrlfGN5EuozHv0P3NonOqQHvWQS2xkX+Kq9xdp3GzQWMwGZGd0qIoss4ZNZZLz2iBU2MmVfbKfuMCt+s0zrcaDCeCrxYpK26Zc3j0IsfZzysXAaAAByctnjyf48hEQUZqSyJcxt4Zm3uDOVrnnf+OEXPg+psFekfyAjNbHqEyNudsbryeZ40tpvN6R0yOZ4KrEGEyqmzof7VAtSV2BF15t0B7dhW95gNhMk6P5dngozUWQ3fh8rCJIjzyvwiRkcq79IyaIkKVpCNr0zVpSYtfRIiMQ5MWScm5HsvIH6ZCZByYlj/k9s3Y0oX7lhFxYc8P8bPibwwHdv+Ua8O3jFTBJeoGc1m2Pi93Hd8ymkz5VVEkbVa4jGCpcBlfjOB8ZiSv5Tv6VFShoARxJJIv3nd0W4EHtfKrw1ThcU2FywAYSEVFhFmS+2s1fkXkVqAQGbfqNWYl35n1NcoXLkTG96jC1WZdRKiSPK2OMFAn/7pWWBNeazb4GBff03kFzm00JG+qfxCWfU6Fw9vjZDWxfX1mU4xn1cFcEgv9lO8TKke3xYTMDxe40KrTl5Y/K4oIr+uHtRr7dyR8tcx8ROHE1jgXWwyBmS2PlI37bSLCrrYEl1p05laxHbr82Zl2tiXorw/0fQuQ+G5SpCHv0j1eoHPaoiNrl3xE+hBXuZOK0F+v8zJZvr9L0mV4SVrQlHdImw4xB74aChldZUIP5ji/HIHW4qwGQ5rKUBley1ZCZWZVJkIZHkIZHkIZHkIZHn4DxCHI4HEapxgAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BI"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BI"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BDI"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Burundi"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"布隆迪"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"257"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BM"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BM"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BMU"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Bermuda"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"百慕大群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BN"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BN"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BRN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Brunei"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"文莱"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"673"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BRA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Brazil"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"巴西"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"55"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BT"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BT"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BTN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Bhutan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"不丹王国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"975"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BY"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BY"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BLR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Belarus"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"白俄罗斯"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"375"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAFHUlEQVRogd3WW0xTdxzA8XP+Pb3Rnt4pLfQGKPM6BG0mbNRRVEAFF9FMWeZ1XsM0TjOXZYlZXLa5Td0mmc4R50iGZuqiOBVQqoB2KArj4iWIFFqwB3o9vdPrnvfes3/C5+339n36/X5oaGzcWn/B1/90zrlTtqvXxaUl/eu3pVVV8rR5TzbvQaYdEByxuNruAxbL2WLgL9ZOXLzCzlQTFy5HSA/sNkrQNiKstLWVgqIC84lTQl2B+Vit+kANxueT9x+ERsyw85IPYDw86vMnIhHAZNA4HAQFiXgi5vViOBd2GyWAtKpy8o8r43X1qr07E7FY+pb3xk+fdd7pEBTrYLdRAqTMyJRUlGE8Hk+b7386KC7VxwJB+cYNTGkq7DZKALexi61RyarXmn84nVpZNnqsVlnzAZKIB02jsNsogbkMbSidzlIrw5N2+81bEbszODzq6e5NxOKw2yiB8d8qoKWwGGJxxOGUlC9zNhs4c3IS8ThdKCCND2DnJR8QlegiLnLiz2uqAzWOZoPms4Njp36li0Upc2fDbqMEFnwxbP3tfNRNStdUsBRyd7vR+09/2GZX76+B3UYJYG+6HXWTCIKYT/yEicWWk2cQBJkat5KPHsNuowSt2hvF83P52nyy89GUlQg8fyGrXhefCvufPIsHgrDzkg/INlQFh4ZTK8vZ2ZnhCRv/jYW8hbmhUYt09UrYbZTAeIvyYv4Anp9LFwligSA9VSLQFQr1RezsTNhtlAApOdmaTz+y/9XsG3gmWbHc0dTq6erJOnyImS6D3UYJMP5LPRKPj50+KypZwp6RhefNt/z4M2AwiIaLsNsoQdvCFXse94WthObQPu7cWQxp6uTlRl/fQJiYDNscsPOSDyh2b3N3GOXvv0saHzpu3ZmyEqmVZa52o3xTNew2SgDJyuX8xVoUw8SlJfbWNoGukMblSFev4ObOg91GCfCfIZGA1fG/AfbrLWRnVyIadTS3ipa+7W43xnz+yas3fL0DsNsoQasmw/iC152372bs3MzX5sc8PkttnaBAS/79cHouLd6ivJlHDwMWk2i45Onpf3Xud5YyI+f7r5iKdNhtlAAZ2zciACh2bXW2tgWHhr09/cq9O+PhsKx6Hew2SoDA4MuRL49LVpVy582232gRl5XwtHnDnx+dekXAbqME5nnU47p7z9vdG3G6AYsZsdnd7UaXoYOhkD99jQU7L/kw4vxlPD/X1ngz+NIk1Be5DB3s7CyWWmm7cv3SZiHsvOQDklWl3u5eW+NNdpZGfXAvxucRDRcDg0P4imLYbZQAkrKlmICPIIhq/56ow6H8cAeCIMwMOWfxQthtlADsmVnyTRuExUWcubNCY1aBrhBfMD9j+ya6apqeJWdrO13IT1tTYT5WKy7Vj3zxnWL3lojDGep7DruNErTtMlXIPB7zB8ITNgRJ+Aae0Vgsb09fcMh0W0HCzks+TKhfAhh0Gs6N+QOS8mXue53sLDVKx8JyIULUwc5LPiAo1AZHzETDJdW+XbbGJvWBGkttHYICZrYGdhslQGDIZL/WFPV4PF3dnDk5jmYDLYVtrT8fISZht1GCtpUvFRYXifQ6y8kzkvKlpiPfqj/eh6JoYPBli2gafpcg6vFiXA5Kp8enwjG/H0nEUYDScDzm9cFuowTqutdpOvINM10uXVPBzZ3naDF4u/sCg0NpX3+yY/AE7LzkA2yNUrjkzXgoJFquJzu70ta9EzSNytZXYQIcdhsl/gVtBR4vb/9ohgAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BZ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BZ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BLZ"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Belize"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"伯利兹"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"501"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CC"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CC"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CCK"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Cocos (Keeling) Islands"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"科科斯(基林)群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"61"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CD"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CD"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"COD"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Congo, The Democratic Republic of the"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"刚果民主共和国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"243"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CK"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CK"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"COK"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Cook Islands"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"库克群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"682"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CX"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CX"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CXR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Christmas Island"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"圣诞岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"61"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"DM"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"DM"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"DMA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Dominica"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"多米尼克"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAELUlEQVRoge1ZXWgcVRT+7p2ZndlNMmtNstv8YdfmhwQLNVQrKmm2qU3VGh+6EuybIBaMkqoBa6kvRYsvihIQpQ+Cgg8GQRCkJdTWGptUA22wNGrqxqTpZpMm2e3+78zsvT7MJgTBN+8o635Pcw+Xe7/vnvtzzhmCgT1wBNYL0/ZH/9CdL0fzAEKh0MjIiG0kL3U7Q4M6M81/B2XBpY6y4FJHWXCpoyy41CE7NhM3kRhzpy65j96ofa2eAihcmbt5ZEg/sFd/cp9jNIgzoeX+iDk8lzSXJbs5o3GZIWAQu+lqahjYGhutVxxgIuHBbUInoBzHrmUHr2VJhuY5lwlZo+zEDnXMJweXLJWTPOdIJIO3jC0WxmtlToTSES/4+M/Zw7NGXMJAp1qTtLYZxM2JK23ujLH2HAFw0YuTbUpwhT20VtBNPuYX62exl1bPovnsrAHgtsyrMoWsBAAWle5H8550hd0nJXGvySIKA3A4bHRHTaGUiDXlEzQ0N0j4iG/j3K5SXs0II4j0eaejg7Jacd/VD2sTcwCWKfOx4tK7/IXAx0tEmJsFejg5oZnL0m8qzxEOoJoRAJQjEls5K41Gk3NXGruzoABstWnCZzRuLEmpCbc4VgIFpy65b8rs7XbXWwGSANuwm9GnCKk6576cVSvi7rttY4ywN1voOx3qosSSE5o4VnL/0B1BQw/+XtNk0YMLhsKhb1pZqaq9g6ffZaMR+mtfLm0bt3C6e9kiMVZXoLPj0ivCWMl2tUUEXm+QQfDMyl/fmYKsNmr1kinNK7kfdP7ourT+ePG0azmBrARu6b97ULV0VJH0gKWBklNtTgQbmyGHQiFBQ2em5t1Z44tazk224T0AjX+MXvc/0Jnwh/0LS5UEKL5DX1VzCwitkqxHFcdK3qgb/uNYePHYzDdnzjS56uNmX5y513eTP3VrePWT897VXWuFKb24DzKETXrpcqXSHctv7903MnxKECuByUPVgaDv67NvXDca8thQu6pkNCbviE5ebGRTutKQLHb2cHpils+7jBpG9d6gOFYCBetP9LjuvaclPGc37ehiyXebq2bXw/LeRnz2rSQnADTZMYnGSWseauv2qsd7xLESmy31LJof/JgBcNlT+DTgeixiPh2jBDA8LNWe/Kjg3bVA47xwoU5+Pmx1ZggHXt7tubBV4E0mNpY+V6ecblUBNOdoSuJeq3h1f6eQiZnK41exf4X58jznooEcB3C6VRWqFg5kSz/VyLrJd64WDi2jPg+ZkCz4cJvrl7uk4JLlAqnL41CUSQyfN2vvd2ii08N/pwAQVjkjvDm3njA4WABwSDAA87np5Lg7Pane+F7S8wqAhEdrOdhbGXxE7w3SV/c7Q8O5mhZRoHdl9a7s0cimv4fvnXSMgI3/XdWyLLjUURZc6igLLnWUBZc6/gRlDqkZwb+ACwAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"EC"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"EC"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ECU"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Ecuador"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"厄瓜多尔"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"593"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAEN0lEQVRYhe2X62tbdRjHn3NN0qRN0qRJm0uTNGmz0a629oZlHa2CyBTvCuJtExmKgu4PEAVBUZD5SqYyXwjKsNahY1XQlTnW1qXdLK5bm6a5tE2bprk2Obmdk/P7+WK+EXzlOUYG+bw+5/l+eHh+z+8cAgfhjoP8vwX+DXXpWlGXrhV16VpRl64VtCxVyjzz4afebFav1Fja2iyHB3z9nbMA8O3M80vXU1gsNzWrhnvXJ0b8ssQR0q9x3+/sma9tFOaLHCACC1VisMvTPfbQ8opv7cbNUnFf5EmRrOq1zF297LNPhJo0osREGTo93M8P94cAIJEmwxHlV5P6TD6Tz/LREMrl0k4LmpgouOy83SKoGrD0OJCl0wCwkTiQyfN9HSEAyOyTn3zRNDevYxnitRN7IwOlRg0CgMVgp1mH7YZ16XFSDyLGBACYtOHIb2SuTM7GtEDBlfmmgUOml59ruHesDAyspxSZArl5FczaTQBAiJAYSr3zhqT3C3zTbOBRp3F1Y0c7uavLCcpKsdneOVryDkapA9GQTauKTG0Z1pJKO0k7XPlf/U+bdRssVZESKnWmNYqcWlk+d/6Qpj3AIGsgYK5a7rnIu44oL9FE9TtuaG9Ve3H1FutJ3e9cOXe+z9lXVLM5iaFyHETX94WIq2ok0pustdq9nW91O3t2AJcRrVC7E3HwUPnpAqJbiJZYati1KD1Rnj1NYVTeN27fanZ02R4Zf3zAaigJPb5EYYlDgsejRkUIc+u7dgWWuuxuI4M0EsHjjt7gPA9sVCsd5dOfnbYaDSxL0hSjYBTpTNalLr4dS2OgPe4NJAJJSZamT34p3Xvq2Ef+uCkYdvfex5hGwlTBhFXBIp0tIUahpyBhm48c7NphCy3qpz4+KT1OnvHAQGBE5CiG5QTRlpkLVQhxnGX97o4gqwkxwdYcyWIM8lwtcn0wiYi06dJxptE9s7y33B/mFNVi0EymLvi6966POX5aiDON7boUwlI39G3kka4icty7uqBuN94MdWRzijyOJZvnAgcbS4Qlk7dE44sax7h3rSpKHmcAkGs8NtMG6wDnsiQ+7zl+bOoMOTHItGVLPFneUh2fu/aC8xmnea9Vy0XSRlni5On0TGAIAH448Q2pQ+cPMwZxRh+7Zk4uONjLZ4/oXXfD5Tffw5j4eW1QljiK9D4msUSzGgNh8m/Tfe1r1sbV3V2RwPlUTM0hGrOCqoV56eilssi+O33UnxytiFCpSpUmqIelrjwNgziBJABG3OzSJv/i0C/vP3j2yVdfSesafKc+GD311nLc09fOXg3xGP/1sMREGTrNIwIAuk3CShzKAhR5xY9/dCqj1BZjurLr9CcdmaIqyYleg5AoULzkTzyQpdP/UBSE10PTcYV20jaGsTwb42/1UzaP7EX/a+7Iv/G6dK2oS9eKunStqEvXij8BR/7BaIQLSq0AAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"ER"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"ER"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ERI"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Eritrea"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"厄立特里亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"291"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"ES"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"ES"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ESP"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Spain"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"西班牙"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"34"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADBklEQVRYhe3YzWsUZxzA8d/z7LzuzGSzGzMmJibbpg1uIokiRoqEFgqll4roTcill0IPven/4KkteBC86FVFvPiKKATRoEJIsAYbbDYkpt3NZk1mZ5/ZZ+Z55vHgy7WzwRkV5nscZpgPPx6ehxn0wBiAzy38sQHbKUUnVYpOqhSdVCk6qZC4/7EJ7fdZTnr7aNeHBv2AkjaStvfYSyf/d20HCDHcXevr2Pywpv+tPXSzpZVrKgEjRyo6DQGDV3Uf13uyCi0WiKElNPn20J5QXlwL/DkgBVM2sQCxuGXpDayO054pxYBPDB2G4AXQpTl6v1qvUYq5yAuEgIqQGX7nIMsrhDEAAGmbK66Nom555y5nNz04OUUAYHo+s7Bu9jRDXRMVCxUtb3IvA4DfL2kZDL8db8UqhuiTLo54AQcewtUTO4nOdSzAldHZPwZw1qnOzbQm9qKjI6UWoFi1b4uKHir9Wm+aAKcZRdWfXokMZC/a3MXBX2sFZXeYR2ChodFTDbcJcCZWMUREcx/V5yrOytJSLgsAVT7IBXwhPMiAMWibFepq8tJD1WnO8Q6DHUKSImJFRzpcnt7Wq/PLQa5zyxVU5zykgoR37T1X/rxSJ/V/ZSIXTGcLBbl8fWF19oYWqxgiTnrkB4+ujK3debljMrCGs98tY9Lg5/YNUVk7cve8OlAgF67vGueL99etb8bGv370SaCrT2VneiH/7f6dX92kvTVASLLR/sVnDEny2CxjiK9nzK7A/r5UvTpb8ZTdE/Fu2JHQZj/v/WWywcz3V7AkDpfm+QvN99QWRtJ/AiDIftnd+fNhozkTm/bd26PclLN5efne6j+3FAkCqr656PqKbGsyYRphqIAtiy4+u1lZmS70szjBABHRq83uzVB1MXu+WewbtltcIn4G9hzTJqZ8mg2Ikh8trgW9GyE0JVx2+uJGR1sekm8bAiEpr5LSj+UNR2/gQ2XGao2lgwdGrWCm0PFk3evqz2EAsJTYT8T0yyWpUPrXNKFSdFKl6KRK0UmVopPqNZfrN8UfzGXQAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"ET"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"ET"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ETH"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Ethiopia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"埃塞俄比亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"251"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"FJ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"FJ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"FJI"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Fiji Islands"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"斐济"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"679"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"FK"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"FK"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"FLK"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Falkland Islands"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"马尔维纳斯群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"500"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GD"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GD"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GRD"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Grenada"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"格林纳达"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GI"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GI"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GIB"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Gibraltar"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"直布罗陀"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"350"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAEz0lEQVRoge1ZW2gcVRj+zszsNXvJzU1o1lVoWpOAlwTbfSg1SkqDSIUKJQ+Wig+iGE2tVKwabaqWIIiKYGsTqfhm0LaYoEnRtCShktRSaKmbSxMTI5s06zbJ3mdnZs/xYZs1bdf6smcWjN/TmX/OnP/75lz+/+cQxhjWEoR8E9Aba06wpKezicGhsprqwNi4tbQUQDwYdFXdt+Ab3fjIVt04ED33cFfVg7NFjnWTM5GSYgD264tzlfd6lsJNY5d048BR8On9r8sGA9M0aeCc4/DBkbb3Nj//3OyzLwCrPRLPl5+fP9bpbXs7/NYhrX4LkSSzqjZ++AEnVhz3sMViJSd6pO5ecyQabN7nltX6PbvZhvXVlDgpc1JWTYnlofvr9+x2y2qweZ85EpW6e8mJHovFyo8VR8He1gNauUuQREUgZoOhtKEegFkQjkCdAL0KegSqRRABlDbUmw0GRSCCJGrlLm/rAX6sOB5aJpPJVVRUNjScfozufTHdCIMxkHQjbSmtXG/zXU23F56sNJlM/FjxDUuU0duN7TAVgNhA2pFFWNZPcgjOgin7CanXIM+v8jOC1F7ILZB/QSpjnBewH3I/UpTyjRrcE48uKN9BO2sxZizXwDRABeZXHddnLMZuaF9D4c2Hi+AFvz8RiwX8/rloOA4GYA40GAolZXlSVWZWJnYadFxOJGU5GArNgwKIg81FwwG/PxGLLfj9PLhxObSm3myLV28URi5sGhguhuAGPJQJvvHBox27JmdPQ3QjBaAKQuOVicGjHYJv3EOZG0IxhE0Dw1deepV6H7aOTpR91ZlzblwSj4uffuY/1F6wtAwgPf41k2FzMnWHT86bxPKkCoAQAiBWVFhx8I26luacc+Myw3UtzYFAINp1MmP5M7zcG45EnQ7JaLyls6YotlCYOux2R2HGaGx6ioda8IvD6+pqLYc/yjxuAHxI3SMvZu38O2iNvCwFljOWRF0tJ2I6VUsSYANxgmR9awPRrWpbc/VwHgQfg9qIeCPiX0DV3ztfwSrQAnkb4p0r2i6BfoLkNOg06MdIXsaNRLID6jbEX4F8p6M8F+Ar+Ay0PmizoMehpJVNgWYkqcAUKAAKHIcyC/oDtH5oXCnxFSyvNOJA1pognQNQILFiSWTrlkPwEqxpaggsuSpbTueYTjsKLDfOaquZOOx/v0ojCRYC0zRe25tLpjV06tTl1ndF35gImEEAyEAQjAARJzU2ILZE4kFG3SgchmNJYEAJiAUAIIOlgFRN1QPvv7N1586cc+MS/8J9/Z5QBBUVmb8ZDgS8GgWAkICT+Pkxyqro9m8N4srfHpWEcpcLgDOdXYYi4b5+cBBM5AsXcz7o7TjX9Q2RMzsa3890UUHb4Xk6Y2Fm85amXTowIROw6eBmNZICftyh0TCeOCuJOvsGxJdxazbPFX946eTj9HoAoojoo4yosAey55ucoOvNAwBFISzJaoMis7MlFZqiq1rka0n/+kwqFURdj6j/ktZ7hgGYKApKiJKA/mqRF8EAjEZGRb0Xcxr/l4f/dei6pBcdjGwHAJXjbdm/QFfBcSuLFUD9DQZdY/9N0HVJE0pICCR08w2xvtB1ho0qbGUEZRgNMgPvwvcfkIfEA8Dc3dSQIHcF8xCZ/gLYePER5bzmHgAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GS"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GS"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SGS"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"South Georgia and the South Sandwich Islands"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"南乔治亚岛和南桑威奇群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"500"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GU"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GU"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GUM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Guam"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"关岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEsAAAAoCAIAAAA5TJBJAAAABmJLR0QA/wD/AP+gvaeTAAAD8klEQVRoge2Y609bZRzHf+fSQw9t15a2tB2lo10xEmAIbsQum6AS3SVLIJoYOyFipjHuYjKdIVOjicwsW5xvvMQ4NVH2wixZ4jKi2da54dgYGCmTgXVASy8WChulpZdzes55fLHEv4DnNCz9vn6S7+dzTn7Pye8QNxxueKhDAwAPZIgsLTTJ6scuZRiQaACIEGwX01xontVPH3fLidJkoTGwp2i49lM0XPspGq5qHCh9Kj9WJyXlLJXPsElKnNLGUq8e+Ni8/IIYka2XlqemTYy/5mD6uz8hSjSx6obn+05aJqY+p10yVMvxDlul+OsbmYHuniTJ+5I3JZoe6Hxna22lRwjJ0I7d8FGUesNOXtn3foLKh3MzcT4az/97c+X6pZcPtbu0rVIcNwBeQxaJH9HBob2H48LCfD4iSHlOylxePAcI/Jk7V1868LYiakQcVga8hh4xFGzv9NGRYPbuPBcZXRms+fsXHah4yNlZp6AxTHR07xMCWBkwGqpA2G2QAk0tj6g22Vinjja42DpHVZeqxLRJ7fYlhxCgmcaW7TrQIx4fBkbDp8X47NbnEEEAgElhrVE3KqlSFaJ1CoOa0mwv24FAQgQReOKZNhHjNGI0bJbuz7nqAcAYvqvk86rEolt0gsS7eTslitrF+fLQNADMbax7DCXwYWA0tKLcSpkZAPSxWW08rIuFrPMLiKA2TI6ag37NYqz22s8AkDJYynFeNhi/+CIiSDEPoEwa1yODMcRzZgVD5qZDtU8BACJIv3sHJaXVGb+I8FHgNIySLBWYSZetn2FNJ3dtOPbtJAjjtthPDLqIgAIAGqVNfhBEQ4xk8WFgNBwkjVXDo2fqnbZ1tEXLHPK01nxZ7xCtsaWGDK3//9jBP89MkUF8GBjn8Cpl2hz8g0KS+d6A5+ixD4732nN/hdVbapb6HxxQKzJPWobd4REvVY4PA+ccAuHNKT2BC4ONDd4FM1+iXGYqHjeP79Z4d+pvb2lOPFv1+7VL7vOcmacxPmi8u8U5quKLf7wf9n5m0S7ciDb1TbQPRjbbt5VX3jnr4mBu2ZY6Tn9PObAy4DWUgOhNV+t7kPII9+NkR2DZNpus+Hps73DX2RSnvrK/tjdbnSUprAzYd4sowX56u3L6Lcev/pY9Lu9QZ8eA58WcUPLbe9tOj1WMkVrcAHJswCNkWf5+4hv/0bb9103qe0sZ7ci7TadvWS9QVhnaZdrxfaTuxDhQr7gNR5ZyJ0q/ClX2y6IHshkCgI/U9YQVB9+c+o5yjFPrZOuVzxAAAoTqsKJBzkYo/i99GFI0XPspGq790ABgQ9kf+OFCk6x+bCgLDwwZkFzSSqF5cOU/t5R+qxii2E4AAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"GY"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"GY"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"GUY"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Guyana"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"圭亚那"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"592"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEMAAAAoCAYAAACl+UfqAAAABmJLR0QA/wD/AP+gvaeTAAAFeUlEQVRoge2a6W9UVRiHnzPTTjuduZMijYKGRQwFMSqCCMQQQTqFuETQGCRqNMYQISkQS6KEGI0mbCaCFLe/ABNXnCmVJSwhQWe6QStNw1KgdwpdZrrS2Zh7rx9mAcNQOp2NIs/ne+4555fzO+e873vEoqUl2tyy5Th0rRzvOE1IVfi/or94ruWz2t+O8MaEBex5bwtzHphGnj6XNq8HnxLM9vgyinjJYNEqg/1owORJD7Jj526WLVuOoqmc6GzCLjuxy06aeluzPda0I+rGFGsnQz62eztpVgIALFk4mYqvNjH1yZWgMwHQMtCOXXZgl50ca28kqIayOe60IOrGFGsAChq/BPr4xudmQFMx5ArK3zGzcb0V87gXEZIVDBMA6L/m5UBbHXbZyT5XNV3+vqxOIlXExIjSqyl87XPzR6APDZg4Xs+X5WZes+Yh8h8FSynCYkUYZ4HQo2oajq5mbLKDSrmahp4LWZpK8twkRpTGkJ8t3o6YdUrmG9j5kcT0h/XhD3LGIqSSsDDmhaCXALh0tZNKlxNbq4Oj7Y34R9EmfEsxAFTg14h1+jQFQ65g3VtGNq0yYS4QN/wlF2Gaj7CUIiylYJgEwGDIz8HL9VRGNuF2X0+655MUQ4oRpVdT2O1z83ugDxV46H4d28vNrFiaH79BfjFCitipYE7MTrWes9gim/BJTwsat+06owxLjChNip+t3k7+CfkBeO5pAxWbzMyYknPrRvpChLQYYVmCkBaB3gKAa9BNpSu8Yg5fOYU3FEhuJikgITEgbJ29gT4qfG56NYUcPax9s4BPPjAhmcTQjUUOwjQPIVnDdsqbAoA3FODwlVPYZSeVLieuQfdI55MUCYsRpV9T+Nbn4edALyowvkjHtg/NrHwhH3EbTWLkPRJZMVaE6RkQOWhonPS0YJed2GQHtZ6zqFpm7DRiMaI0KwG2ejtoiFhnwexcdn0s8XjxENaJh74QIS2MiPM86AsBaPf1hFeM7OTg5XoGI/2kg6TFANAAW7CfXd4uuiPWWb3CyKdrzBRKw10mN45KjyiYi7CUROw0FQC/EuRoeyO2VgeVLieXrnYmO/T/dpsKMaIMaCrf+dz8FOhDQWNckY7N68y8/XIC1omH4eHwyWQpRZjmgcgFoKHnApVyNTbZgaOrOWk7pVSMKGeUANu8ndSHfADMn5lLxUaJmdMTtE489BaEtCi8z0iLIec+ALr8fexzVWOXnRxoq6P/mjfhX6dFDAhbpyrYz06fG7caQq+DVa8b+aJshNaJh9AjCmaHrSSVIvKnARBUQxxrb4xE3A5aBtqH97t0iRFlUFP53u/hR38vChpFhTo2rzfx7itGdLoUd2aYGLaSZEWYn43Zqam3NZaKONHZhKKpcZunXYwo55Ug27yd1ITCy3fuE2HrzJqRAuvEQ2cK28liDUfcOWMB6A4MUOWqwSY72N9WS29wMNYkY2JE+TM4wA5fF11qCJ0O3n/VyOdlJooKU71MbkSHKHgKYVkClhJE/mMAhFSF4x2nY4FlOkcw6kjTGr2ZO8om54/EtUnaxRjUVH7we9iT9Q30yG030LSJEe9oXZ3Jo/VK4kdrWsTI2qXr3KGkLl0pFSM71/FDKbuOp0SMeIFaWboCtcsNaQvUkhYjIyH8mf0ZCeFHLEY6kzv1nhbsclXGkzsJixEv7bc+FWk/V13W034JiZHyhPDFfXdUQnhYYqSqVFDjOYtN3nvHlgqGFGNkRSQrGCYDkSJSJH85GopItxQjqfJii31UlhdvEmMkhee/75LCc0yMhJ8kXPrrrnuSkAMw7Mcq5/be3Y9V7j1juo4ANKPRyIYNG1hTvpZj3U3YZAdVrhq6AwPZHl9GEfeePl7nX9N6rpdnq2W0AAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"HK"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"HK"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"HKG"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"China Hong Kong"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"中国香港"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"852"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAEsElEQVRoge2YW2wUVRyHv5nZa3e32263sAXK1baUigZiCIqIYmt5oEoiGqKhkpgYkAcNKuIlggKJldQEUZE0jVwSLykEkRIJ1AtUMRhjTImI3Al1abvtdpfd7V7m5kNxkRBJTGYWUvs9zZwzM+f35czJnP8IZysLdP5HiDc7QK4ZFh7qDAsPdYaFhzqWmzGo6C3EVfsI9qnTibe2kDranrOxcy7seXQxvpfXI7o9JI8ezqks5FjYu2Q5vpXrsudqqCeXwwM5XMO2skoKX1hzTVveA/MQ3Z5cRQByKJy/eCmCZEGLxwi9sgw9nUZ0uXHMmJ2rCIDBwoLN/q99zplzAFD7epB8xejpZPY8lxi6hj2PL2Hg4F6U7uB1fVJRMQB6KonvpbcAyPzeQfrYLzjvfRBXTR2W0WNB00gf7yC+93PkM38YGQ8AwcjysPidJhzTZhDf8xlYrAiSSGznDuQLZyht60D05KMl4lgCo0n99D29b66g6NW3cc6ae/3DNI3LnzQRbngdXVWMimis8IiN23HV1F3TpssZep6rJ+/+eeTNqUVwOBhobyO0aimBpl3Yb5+G0hUETUPyF5P6+QjOe+YievIBiLe2EFr5jFERjV3DSuf5q8fBi8hnTyFYbRS90Uik+T1ETz5KTxeRDxpw1S5AzC9Ai0awlVViq6hCT6eJNm9CTw5kn+Oe/xh51fMNy2io8MDX+64eHz5I/8a1AFgCo5G8BfS8+DRaLIqeSmKvuoPkkW+Jbn2fgUMHBq8bVUrJ9lakEQEAEvt307d+JfbJUw3LaOgrDRDY0oJzdjV6KokajSBYLUi+YpI/fEP38iewjp2A6PGiKzK6LKPLGeTzp/EsrMe3Yg2iJx89laJ/41qi2z68klIA3ZiYhgtLPj8l2/dhnVgOgNJ5AS0RR3A4UKNhkofaGDh8AMFiwTm7mrz7arCMGU/8i0+JfLQB0eVBDXWjK7KRsbIYvvFQw70EF1UTa9mGLmewjBmHraIKS8kYBFEic6ID9VInrtoFRDZvQHTnI587jXfJckp2fIWeTpkmCybM8D8RvYXYp05HdHmQL54jc+IYUoGP4oYtCHluLj1Zy4jGZvJq6pDPnsJWPoXEgS/pef4psyKZWzxo0X60/j689cuwjpsEgoAUGIXSeQHLyFEINju28ioEizV7j+uhh7GVTyFz8rgpmUwVtlVUEdi6F9HlzrZplyPoioKuqljHTsA6qQIAtS+EGu5F8vlxzpprmrCpxYNnYT2iy43SHSTcuAYleBE13Ivttskk2w8i+vwAqP19hBtXo4a6gMHPk1mYN8OCkK2E9EQCLRZF8vkRHE70TJrI5g0o3ZfQ4jGkwiJKPt6D6PECoMVjpsUyfoYFAcf0mfjXbcJWVgmAdWIZ/tXvDsoqMqFVy8icPoEWixJueA1dzmRlAdK//Wp4rL8xXljX0TUVa+mE67qSP35HcFENif27s22xXTv4s+7u7JpVuoMkr+y8zMDUz5JUPHJwA6LryGdO3rD2dc6cQ6BpF13PLiLZ3mZWJHOF/wv2O+/CWjqeeOtOU8e5ZYSN3C/fiFvnR3wOZOFWEs4Rw8JDnWHhoc6w8FDnLx8Gwoe1X2Z3AAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"HR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"HR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"HRV"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Croatia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"克罗地亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"385"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAD8ElEQVRoge2YXWhbZRzGn5Ocpk2XNjttlqTRGbfGdRDdimYLHYnD2pXNKm5M1E0ZbJaWgchAaFa98UJZGG54MdJZuuHVbEv3ReeFGwwtG2TBdFX7RdvZLlXpRz6apCc9SXPO8cJ3VSrCLnyPkOa5Ojz84f97OO8hzxtGxtqS6v8GUFr5wLmufGB6YhioyDphs03YVPkIQQWGUYyCpb+BRTYL4GrjF98vWU7+0rGk1+0/9DmAa5c+1CZ47+bG3UW/Heg48fdhemKo/iwNHm4+0vDRu4mR6v5gz5WprUJoI5PwfXK0OHlXhCpV4Hp4UeL5ZY1G/eUbmeFnbN3F5os32+yX2ukhUTzSYrnh2CsnDeOnzySEkVDsg/g3VjE8BkNhev7ZoqHnCoc1sflDu845pOtSOn5mS/2nSU3d+OvH9rVIXBk9KopHOmM0P1jCVhWXZTS++qNfBfU2cXZLdiauf80fmYMoL5fVY7nrdGf/Z+ek57mXHhTbvIXfcgKbMZmLYlFKVBQDa0cGGwtmz5a+I6sLTMXijfjZeXndOGu+lxEKkGJZiReyfd+98NPAk6JuT837+zi9foPr5fiew0Wjw/So6H7DvzccfPGgd4dF1zuZcveNRsajlRuY7W5uwbQeQNnD8MAPixNzEldbydY8dWKh336zS7sscj2d9JDoBgZwpGs0LLFvT97df+NCqf8OJGn1hEqVqHFfe/W9zqd3VajFC29WUeVh5O5uqgswMYFEAgD0ehiNABCLIRwGAIMBHAcAc3OIx8EwKCmBzUaXR6Ytj0cGZEBubibOqVPE8XqJ09REnNZW2jhrrlrSb1oMQ5qjSvXXB7zSJf90FGyX9N+w2w1JgiRh2zao1VCrsbBAnGiUONXVxHG5aOOsuSOdD/yf6/59OBxwODA9Db8ffj/MZjidcDphsRAnFCIzAwO0cegHTiYRDCIYRDRKcgoCAgEEAhAE4kQiZGZxkTYO/cAKXu4fR4wsUy6X7Y8ut6KIsTEAsFqxsjQUAoCqqpU/Q9DURJeHdrORL18mD21tpE55PMRpaSHO+fOrh6mJ/pG225FKPdYkz8Nup0wDprd3gvaO3fP3StZrMTOD27cBwOmE1QoAU1MIBACgthYVFYloqs/opA3DmEw+2js4NvPjW79qlnj4fADg9aK1lTx4PABw/HhmXen2Tkssq6ENo0TxiGU1dVeM/M5/rY38Dlddj0GBtADUOl2DAmsiWU3HreQTP9+pNKpZIYXBQXAc9u5N8+mrH399oD09K2oVwIAyR3qV7Gxk50YZQGCaGcqWK7yd/vXwHxrKlg9NKr+WKH95yHXlA+e68oFzXfnAua4/AIlyIJEPP6uwAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"IO"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"IO"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"IOT"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"British Indian Ocean Territory"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"英属印度洋领地"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"246"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"JO"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"JO"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"JOR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Jordan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"约旦"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"962"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAAB+0lEQVRoge3WvUtCURjH8Z92VQwbMunFlyKEGpqisKWWagukoaHFoakhGmtpcet/8B9w7A9orUVuOdRQuPROEUiReEN8aYjHELPO1XNOXe/5wt3uvc/hw31QpPrCtVmttwZAXW1cjtP+iRoA6OUiUkYeerkIFXt1QEpBmqsJkFKQbLUEpBTkz/0KSCnI72MGpBRkY6YBKQX5WduAlN0hOwak7ArJDZCyGyR3QMoukMIAqW6HFA5IGZPjyK8swpgclzFOWtIAKd98DCO72/DNx2SOFZZ0QKpbIP8MkLI6pNPsA57oGNcDFI4yyMUTyMUTKBxluL5bRj2b3oEky42+hTloA36EkjsoPz3D4XSi8vLK7SClm3vk0wcoHGfgiYThHg1xe7fImFfYFRzG1MkhHB43itlzXC6vATVx22+V1WZaYafXi8GtDVSNdwCAFvDDv74q9GBWSWO5qWoYuN/bh2swgMpbAcb5BfLpAyEHssqXR5n6FXZHgijdPsA9Fkbp+o7rQawGR6m/MR3GtMIisjocJR2wW+AoaSv8GB3C2dI0HqNDMsZJS/gXqIdcSM30QQ8BQBa4Ej1RbsIAv+Bcokb8i7gD2gWO4gZoNziqY0C7wlFtA9odjjINqOAaYwZUcN/3K6CC+7mWgAqOrSZABWeuOqCCay9NwXXWB7iWT4eatikYAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"JP"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"JP"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"JPN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Japan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"日本"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"81"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAACaUlEQVRoge2ZP2gTYRyG3/sDSUuogxfbJK0SMaC0OIuijU5Fa5rgXFE3waEIXToYwSEuSh3aWbGZ2wSlLtYoavdKcRCjcqlJvHSpaf5AznOwCBKshLxfLJd793vuffjuvrvfnWRZloUuivy/C3Q6jrDd4wjbPY6w3aN24iQ1vQBjaQWbT1+h+vkr6rkiAMA12I+eYADahTPQJs7CPTQgvIsk8sWjnisiG59H/lEKlvlj9yKqAt/lCA7fuQGX3yuqkjhhY2kF65MzMMuVlo5TPL0YSd6FFgmLqCXmHtZnF/Du0s2WZQHALFewFpuC/iApoJmAFTZSL7AWmwLaxEqyjOOLs/SVpgrXc0WsHo3A3K5SeGqfByfep6j3NPWSzsbnabIA0NgqIxufo/EA4grX9ALeBsf+uRu3GklVcDK7THtk0VbYWHxOlwUAq2GilM7QeDThzWdvWKhm9vJrGosmXP2os1BNqXz4QmPRhOv5EgsllN11wwNN2OXTWCihbJpwz5GDLFRTekOHaCya8P6xUyxUM/v8aRqLJuyNnoOk8LcESVXgJb5P0xq6hwbguxJl4X7HfzUK12A/jccdHja+YfXYBMzv2xSeum9nePDt0eHBFTiAkYUEJLl9rKTIGH6coMoCAp7DWiSM0P3ptqQlWUbo3jS0i6PEZjtsUZ94SukM1idn0Ngqt3Sc2ufBcDIBbZwvC4j+iJc3kL01h/zDFKyGuXsRVYH/WgzB29fpl/Ef5+nE79J6rggjnUHpyUvUPm2gphcA/NrZ3cEAtPFReCNh6m78t3REeC/FGR7sHkfY7nGE7Z6uE/4JvRTUwstj5PgAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"KE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"KE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"KEN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Kenya"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"肯尼亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"254"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADa0lEQVRYhe2Y30tbZxjHP+dHsiQylxnREnXrSn9sJzIcG/aiMHdRXAdDsTZqpba92NaL3Yiwy9L+B14UeuVF651NkY2tZQORQMfaBEc2aC7UWrqFleKSiBXzw5i9uzgmC6WjKXlqN8j34uV5nzx5vt/zzXueHA7UUUcddbwM6Lo+PDxcff3IyIiu6y9OT7WYnZ0dHR2tpnJsbCwUCr1oPVVhcHAwm81allXO7INrgcA1y9pXUdbZ2ZnNZgcGBnZf4VNgmubS0lIkErF/9za4DisXL65cuHAd2gDQdT0ajS4uLhqG8XLV/oOhoSGlVF9fnwGXYc40kzdv/nnjxpxpXgYD+vv7lVLBYFCETua64/G41+v1+Xwt4fBRcHV0tAaDusORnp9/bX09B12nTi0sLExOTorQ6UoI4+Pjb/v9n3k8gMPns7s7mpqAzxsaDu7ZMzExIcUlOX38d+6oTAYw3O4dS9xuQG1utkUigkTmnKaJNFLwM3wAQGFtzU5ul4JbU1OZqSkZJhBzehm+KcVbq6tPBF/DPSkmMKUa3YYY5MAFhWQy++ABShVSKSAHv8BBOCDEJSY6Dnm4B50ArM3Po5T90TLkIS7FJCj699Jqi95aXS2LTlQUiEBM9OOKFQhcuaKKxVvt7eXkuhST4I34FJTmkm241OhA0OlGSEFjaRs/e7Z8POzkq1JMgqI7IAUdpa2zpaUs+o2KVQRix8MCZ8VQa+rtbertteP94ATr3775/BBz+gjcBxcAjuZmV3s74PD5CqmUG96DI1JMgk4fgGOl2Nna+kTwCeyXYgLzaOnk1Q7nmTOF6WnA4fXudC8FH50+3XP1qhSRmNNKqUR3t+bxAMVMxk7+lckAWkNDortbybljaudkBuhhDu9t3Jvvynz5E4V02k7aj3uXujbdv/146dx0VIuKcMk4rRW14+8en0nPfGux3Ew+kdje2Nje2MgnEsvNfPcOM+mZE10ntKKMQQbvC3Q5+frJ8P3wI/OR0rj9Jh+uqJa3Dm09fLi4EP7qUzJO0En+kezx9dzN362dTsBpZ85p+a2YGbO3aQ/nP+bX70OxH0Lnj5H27JTFzFjAH3DmnLUzanxRcw+FkTeKruIzC42cUXylWPtTiMSfi0Y1iqHasmfiP/Ba7flRF71bqIveLfwvRf8N5XGhJFdjGLsAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"KG"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"KG"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"KGZ"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Kyrgyzstan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"吉尔吉斯坦"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"996"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"KH"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"KH"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"KHM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Cambodia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"柬埔寨"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"855"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAD8AAAAoCAIAAADG7rWrAAAABmJLR0QA/wD/AP+gvaeTAAADt0lEQVRYhe2YzW8bRRjGZ2bHu/Z+1E3s9VecxI4cN7QYWj7ahkMDvVWqOCCCWiRU4BxRVO79H3LhXlQJcefCiUqckCoXVQ0lkKZxnDhOvFs7a8f7OTMcTFNz3Y21quTnNPO878zz02i02l3IvXUPvLZCYQME0pg+PI3pw9OYPjyN6cMT3ALzYTP412jP/kiJjXT/EdLvFtKPVj7Zm1FHFzFC+v2LC3pmovHuCG/mydBbiuhE+WGnH0Hg6qVCoUCvLtoIDpecKG8r4onkngz95nefP1/5dNjpZBMTxRlRFFPzc3pucri0tbL87M7NE8nFwbdoynzkYsXumz3+J9khA7MjcMRxGGOE40yBy71s7vLIXqwI0VhT5jM9J2B00LN3MeosvcMw5iSxsfjmwNSmkvWl8/rO7tTU1H6tvrV0/jB1elBqLlagIBAE21cuuDhoOvctSARZ/+DGUvbah1w66XnedDx+sH+AZbF9oTzx9XIiky6VShRzUqnAbdYRhAfTqvrZtW56UpIkITlZVeDc460g6UFvDn3/HBZFi1IIobFQfPrNcrFYdByHWFZtfT0SiVSr1dnZWXLniyNBqNVqZ7N5hJjneaIksvcq4P6DMOkTBNXcvlvfcRy7KwiyLMuybBiGoigYY13Xy+WyoiiWZcmyLIpiXW8ZtsXjCM9YwgsYHpg++nAte/tLVVUppZqmmaYpiiIAQFGUeDxOCMEYI4S63S5CKJ/PQwjfVlWEUKvV6vzyQ8j0tuPqus7zPKVU13XDMGzbtm07lUoxxiilGGNCiKZpAABCCM/zPM8jhHRd9zw3TPrDzET6ow8gwI3dXcCYyvEJQYz0XY8BZvSOiHfk2Eo0KkIu4wEMkQsA4vjm3h4EMIEi7Mrlw98ex5tt3wD+nzmOENG++pidKVLHPZVNCYLg6QalwKOMMkBtFwAIYwLuu9C0KQMeZZQC4rhSKinLkttqUylmnZbFR+scof4Y/L8hNy6dnf9xdTB+urMNAVjIzww3tDrttWcblVI5EY8P+3/VtxkEb7xs/ufm7dzvf/pj8H9zplfvJouzg3FUO4AQHk8H6m9DeV9WUslkLjfsx15ojLHjZmv1Lrl8wx+DT3rj1nUVwebDP/4jME1I2fF0oK7V7/V6h5s11DgY9s1ej8FXazGC7VvXT9372QeGT3ryZKPx/f1XoJU5aDuNv3eGe7qSwJ+b036tmn37f/6ZPMCRxtrzYwc92fCH8Xp/GcLxP+TQNKYPT2P68DSmD09j+vD0LxrsfoE4v96DAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"KI"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"KI"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"KIR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Kiribati"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"基里巴斯共和国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"686"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAEuUlEQVRoge2ay29UVRzHf79z34+Z3k6nKVOkQzqUYhHSBiRNClIfITGNXWjCSllpXLh06cKd/A2uTDTGlRsMCRjUEig0BGgTtEQLDaXt1JY+pp3OzH2d83MBFBhGwGTu0AG/q8mdT+75/s7je37JDF5t3Akvk9jzNlBryRG9lxDg/TV5ReY3ZJhRQGAFiAF2enKcJAMwzsERzKFADb3fVTxtA0ViDCPc0pZQ3y3Kuz1KCJMxvibxZRSzcuGUATmmHXbjRwsNGUQEIirOMO+6kr8i+Rd08CvNTpUUZcH3RTJhxjcyQt8dGPsDaUVaPCsnj3pqIM3/oPpZKchKNB3VXitTTYaxSf2goCXI6cDcqCw3iy0feSpjc8MIGmlpzp2QLyKUpBp4kT41mqIeA13k5wz3jCliovVIqDQSD6EUCNkhkQhd5GJZonE9ahv3zNT4WsJ0qPV4zIBgSgoua5Ee14qq0cnZEE3J7lStB31Yz+Eeppgo+1BL1ahgkgkAKMlZl2cMFqDTgz2u/snq3YcAAFI01+5jqtHukvZ7SAAJrraG2wZp2vSkBLUehMmrRXCEvCNwv26AfC3Oc00K7vRJ4ju+8LPnMZYRahyd/kD4oFqs+Zjr5kCXpL9jgraEMKFG7SXylKaBPAwbDZ/n1ZRoSjMk8AIBAESACJrCCOHOnxSuYjiq+IzCH23gES515Gc4vh06v8+rLSLRxgpFXvIo4BSEFHIKOJQ8KhR5cidqW0T641CMqpFWC5E3HntdeVcoVJFsZ54rgKEsQYMtGzozdGZoLAyJAASnhiRbuE7QLIICwEKEBy3CFcb+otXJFRXNFuAEbkC2LtnmI/2jbTHLYJ5PgiCWBj0lkh+6cKgQnasoC55Q7QM8fUToJrquMHUmV1o5RUZDZ26JdAtT+2B9RIFzVnSuIixYtLurK+HirHA9CgJum/86lm0xP+SuR7l5gl0eHFqPzlVUBZMhcFnRSZIsAUCS9JSBJBkBCEzRmEFrryAnqiYMg4U7wcJScfTa2s9Da7+eF8VSGcEsM/7WwfiRfrNnj9KcAIBn4t97wz70muIkAYHChWBtVPV+ofwQiGK5BWZhrN/X31ZiPSg3UwD+3FLx0rW1U2er6ec+j0QPejrheevnLxUuj/m3pgFRS28zX++O9R1ArXI/8F95II/Wh6l4BfwpAEQ1DeY+tPsAq/P+Z+Exu5hPNdmV/T2m7OI6ItQ3D4ePG5rc27V1oDcz2NfR8UpjGfTX9PKJCxMnL94cGc+6fggAdc0jHD7+8Nc7tyV6u1rbUw4BTGZzI+OzEzMrT5izuuOx77PvJudyc0tPvwlak3Z7yiGCuubvhdbU/OrJizdPDE8Mjd32Ar4B6arc39022Ncx0Jtpa4lvPK9f/pGUBoD1kj92Y2Eym0OE9lane0eLpStPmLa64/Hb09fqwmjV+Luhtfm3YrX48pSGzRo21eLxy2/O1cV1Ui3+QWht8oahWnx5St/VZmwJq8Tjsa9+ak85vbu39ne3aUrln7NcPxwauz0ynr2XinXNb4SWbahv9rS9s297b9fWV9NNRHT99tLIH9kzV279NjpVcIOyt9QpXyGlX2y9dP/x+L/gF13/ABjdzuQY80DsAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"KM"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"KM"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"COM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Comoros"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"科摩罗伊斯兰联邦共和国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"269"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEMAAAAoCAYAAACl+UfqAAAABmJLR0QA/wD/AP+gvaeTAAAFRklEQVRogeWZaWxUVRiGn7mdGdpOdyhdESqSFmxLgUAKBRvFWsAibcBEAghFlgiYusQQYmIg+EPU6B9j3MEliGIoFBBiRQEpICF0pYukIN0LlLbDzHTWe/xROjLOlO5Mpzz/7j3f+b533tzv3HPuKLbuThCvjNcR5W3jYUc626pmTUkwX9VqMMkKd+txKxKASVbwTb0vq4pD+LN1lLs1uQ3p3osmk8RbVQG8WRlIvdHLXZrchuTq5l9tal4sCeGLWg1G28PTOi7NALDI8N3d1jl5++FonW7N6KLZLPH23wG8XhlITcfIbp0ezejiYpua7NIQPq3R0DFC3zq9NgM6W2dvgy8ri0I40eI9VJrcRp/M6OKmWWLHFX9yyoP4xzByWkc5kMmFWhXZZaEsm7ac7OQN+Kp9B0uXW1DM+3CG6G4wPCCS9MmLSI5JITIwCoPZQF5pLueunqbxTiMmi9Ee66vWsDn1VTLiM1HgmWuKSzNUXirWp2xiadILqLxUWGUrXxZ8wv7CfVhsZhYnZHG4NNdlwujAcex87j0mjpk05OIHG6/x6ZHb772hGeXHB1kfMz82HS/JC71Zz9bcHPIrjwOCdSkvsyFlC3VtNVxrqXZKqDVpySs5gNbUTnxEImql5+xRHMyQFBLvLH6fGY/MBEAWMtt/2caF6+cBEAgkSaK47hJVzRW0d7R1m7ii6TLHyo8Q5BPMxNBJHtE6Dm2yJHEpb8zfZh88WnaIXfk7B1wkPjKR157cyqSxsQPONZTYX61KSUl28gb7gCxkvj73mctJU8Lj+1SkrKGE9XtX8dHvu9CZ7vRT6tBjN2Nq9HRCNKPtA6UNRdzU3XAI9pK8WDkrmx0Z75IWt7BPhWQhk1u8n+W7szhadghZyAOUPvjYzUiMSnIYKK4rdAq2yTbqWmuobCqnqrm8XwXbO9rYlb+TzT++RFVzRb9yDBX2TddYvzCHgVv6my4nnKk+xckrJ1BKA9qvcbmxlI0/rCYjIZP1czYR6BM0oHyDQZ9/kVW2EuwbQqvh9sCryzK39uyjdPW3aAzd7v0eGHYzbuiaHQbGaEKdgyUl82Of4em4BRws+ZmC6tP9Ljyh3sayY0bGNQ6ftcO+Zvx/jZgaPc0p2CpbAYiPSKS2taZfBTUGwfLDRnJ2G4aVEXDPk1FSX0iL/hajNWMASIhMItRvrNMbpbi+iMzP0/Eb5d+nQgpZMPeSlWf/MOFjdH9LuMK+A5WFTIfFwJxH5wGgUCjw8/anoPqUw4SufYLerO91kZg6G+t+MpJcZEFlHSTlQ4DD94wjpQc5f63Afr1wSgYpE5/4L1gh4e8dwMqZ2b16Mvz1ghV5RnL2GIhuGv5/UjmcTQSCs9fOkBg5lbCACBQKBbNj5lLeVEaTtgGAFTPXsHb2RsoaS6htve4yqUJA6kUza/cbmVBv84BTSSdOp1aLzcyvFcdQKdXEhU3GW+VDWtwCrLKVqhsVmG0mfqs8TkN7HVpju1PC0BaZLd8bmFVsHdYt4Yr7ftwJ8w8nfcoiZsfMJSIgCqPFSF7ZAQqunqZJ24jZYqRrsrdJkJlvIrnIgmJ4ro89cl8zeoMkQ+oFMwtOmfE2e6gLdxmYGabHsGmfB2v4IEpyH/07YNiCkO8sQXRMH2Q57qWPZigRulRkXToIz/mc11t6bYYwxyLalyKsYT0Heyg9m2ELRtZmIoxJPYZ6OvcxQ4nQPYWsSwOhfnCK3IhLM4RpcmdL2JyP8SMZBzOEbTRCm4UwJrhLj1vpNEOokHVPIfRpIFRuluQ+lML0OKI966FrCVf8C/vu8gX+0D63AAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"KN"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"KN"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"KNA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Saint Kitts and Nevis"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"圣基茨和尼维斯"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAEMElEQVRYhc2YXUgjVxiGv5OZRDMmaSOlxEaaaGxGImILQUIuKxT2qr1YvCkoLZY2IqbUslcpi03dpq2QWEpK/wxSRNBK0VACXuluL8SYQJX1r1Q2bWTNxVo1yY41MdOLlGnMz2QmmYx5rpLDnG/eeXnPd84MgulbcKPoZZff6h+9qowDwD+X9CffPP3Cl0xfsU3BRZJWDAzoMU3soxcey1EGAO5vpobunh9GWfUCwA2KJhsvftA9siiSAJCk6A8nE98vUjTNae4NiK7YYAaxRecazDHBhYgnunqDGUQSndsi+Ca4kJqLzjM49DBtm0iFH1KVVcMxuPN2k0RQhfmQjRdr5P497ZEcZZIUbXPGLW+eDLzjtNlszDVtbW0ul4tLNXOXNLzQ/PFIzURjQN/RHG+adrNr7v5m6pXbJ9/9RNE0zM3NeTyeqakpmUzmcDh2dna2t7fZqzXI0D274tcf1SYDDgCoFjsie4IlEsnp6alSqUwkEgqFIh6PNzc3p9PpUtXMXdJppzIrN/MUPf5aLnCmubQIhNDh4WFPT49CoQCAQCBQSnGDDN21NX0wSOAYAMD5A+mRW546kWDw+ktCKSYbL342/DH43BMpopMUbXcl3v8s/vf5tR7R2dm5urra3d2dO3J8fBwKhfKqmbukv3ifeaOvQSKB9Bn6y0XEfPIMhQBAmEyzJDiXsbGxtbU1k8l0bS6Geb3epaUlDMOyI3kJPn8g/f0t5dmqjJkiQKb5niIwDFOpVMFg0GAwTE5OLiwsqFSqjo6OjY2NcDicm+D0GTpyy3PlCiC6mk3O4/GMjo62tLTEYrHsSKkEF86tfCFWc0wDgMXFxb6+PkYxF4OrEi3IKWJ9fd3tdgMfgxl4x6NKg/PgZTADD6cFPKZBRQYzcBVdDwYzlBddPwYzlBFdVwYzlHzEopvcZVP/wMAgcw1CaHh4WCIp71PZTY4XxZ0uZfCp3x+NRs1ms91uNxqNfr9/f3/f6/Wy30MogxnyW17ZBO/t7ZEkeXBw0N7ejuN4b29vMBgsVV2QBBdyzWkuCQ4EAiRJGo1GAIhEIiyKBTeY4b+H5nJMwzDM4XCMjIwwI1qttr+/v7CosAkuBMH0LS4GW63WmZkZvV6P4/nLwOfzDQ0NZTKZ7N/aGfy/6Pf85k+1R0rsClh7sE6nIwiCIAi1Wj0+Pm61Wnd3dz0ej1arNRgMy8vL8/PzeQlOhPDo58RlTPjXUPyrF/8EDj04Eokwv1tbWy0Wy8TExOzsLDMogsEMKP3b83w3OY1Gs7W1pdPpKIqCmrUIFrDLFG1zxp+c8djlEomESqVaWVkBgK4OfOnLZ2+/VuRNrnZUWB3HcUxyJU6Ci9y9smkvk2jaqRYnwYXwdjr7Nc3xLiGTIhAlwYXwEy1mi2CBq2jxWwQLnETXicEMZUTXlcEM/wIYnhv64pjhfAAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"KP"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"KP"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PRK"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"North Korea"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"朝鲜"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"850"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAADhUlEQVRoge2ZW2gcVRyHvzOXneyluymmVbHUpFIjIkilL7W2lYDihWrApEIbC8ULikKtUCyUUkLViqEYhPokBGoQLDFUbdKmD0m2ElPjDVoRtNi0Kr0EQ6s7m+zO7M74sLoSNrHgnExcON/L7vznf2Z/fDDnzJ4R2uOHfBT/GW2hA1Q7SmBAlMCAKIEBUQIDYrSsvXWhM1Q1wj39nXqMCYCYXNaoBAZAzYEBUQIDYszblTUNc/1aIg89gN64Es+20ZfUUfz5V9zBNE7fAH4mM28/HxbzMgcaq1cR37cH/a47y7VM61YSXe8iEgkA/KvXmO48SK6rG/zqnYal38JWazPJw4dmyPPtLO5X3+CeGCzXxOJaYu27SRw8AKYpO0ZoSBVoNm0g3vF6hRB3KA2FAvneTyrGRDY+QnzfHpkxQkWaQJFIED/wBuh6xTmnbwCAwugY/tR0xXlryybMpg2yooSKNIE129rQ6m6oqPu5HO5guvTdcXCHP5t1fGzndllRQkXaKmysvodM2zP4dhaxKIGIx0AIvMtX8Kdz5b6p9v04n/YDJbl+xgbXpWZbG/ptDRR/GpcVKRSkCBSLazGb1qM3LCfz1LMUvv52zl7v4iWci5f+KVgW8f3tRJo34o5+WXUCpdzC2o1LS58N9aSGj1Hz/NOgXf/Sxqq7qU0fx2ptLo2/aamMOKEi/5+IYRDbvZNF3e+hpZKz9whB9OUXSfZ+gHbLzdIjhIkUgd6ViYqaue5ezPvXzdovYlGi218AY+aK7V2uvM7/HSkC/avXKP5wdmaxUMCZY8X1s1O4n39RUS+cGpMRJ1Sk3cLOx30zjt3RMfzf/wBAWBbRl55DX1FfPp//ayX+m8KZ7ymeOy8rTmhIE5jreh/vt8nycf7wRyAE2op6kn09RF99hWR/L1ZLacFwjx6DYrHcP93RKStKqEgT6NtZsjt2laR4Hu7wCJHHHiU1cAS9cSUAIh4j/vabJN55CzwfJz0CQL77Q9yhk7KihIr03RirpZnIk09Q/PEsNVs3z9nnjZ8nf3QAffky7B27wHVlxggN6fuB+Z4jFM+NE3tt77/2iVQKf2ICu6Ozqrez5u+diBCY960h8vCD6HfcjlhSB7ZN8cIvuEMncfpPqA1VhXonEhglMCDqxXpAjC3HJ6/fpZgTo2fkwkJnqGrUHBgQJTAgSmBAlMCAKIEB+ROuRBrxqSKpBwAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"KR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"KR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"KOR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"South Korea"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"韩国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"82"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"KW"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"KW"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"KWT"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Kuwait"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"科威特"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"965"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAABVUlEQVRoge3bsU7CUBiG4bdQaQPFpMZUV0A3F2/ARBIc9IYYvBNXL8fB0dXZWyCpgzRpRbDtf0w96fdcwMmfN99EaMBVlnO3gDhEmguAnDiE2xlcn3d9j3e+AhYuTuD+EpJRdxd5phoQ0Bqb2Q1YWGzXONUaD9kfELTGGg4HLCzS7Rqjv7/IM/UCAkQhLLXG7+oHLMy3azzWGqFNQNAaS9oFLGiNxoAA0RCW896u0R6wMEvhoX9rdBcQmCTJ5vX97cXVez5wGhAgz50+9+8Nuj7AdwpopIBGCmikgEYKaKSARgpopIBGCmikgEZO/46QxPHm4+lZPya0sRpNWY8z0mDo4jlvmBeYBkPW44zVaOriHu+YAvZ1dWWtAvZ9dWWNA2p1VbUDanU/qxVQq9vvYECt7nd7A2p19ewE1OqaqQTU6poLQauzCG+OJjyOzzgd6DOHNj4B1QkyVlzPJicAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"KY"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"KY"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"CYM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Cayman Islands"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"开曼群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"996"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"LA"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"LA"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"LAO"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Laos"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"老挝"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"856"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAABuElEQVRYhWM8J6jGMNQA00A7gBww6mh6gVFH0wuMOppeYNTR9AIsRuJOA+0GksHQDGnqGqejKpUcYu1qpSkuzMvAwPDizafdx67PWX302t3nVLSFkUEjgyoGsbGy9FWEZITbMjOjx97fv/+mLjtY0rX295+/VLGLmUHEhHJT2FhZtszIivAyYWJixJRlYmI011c001NYtePc33//KLeOOo6eVh8Z5mGMX42KnKiwAPe2g1cot44KGVFXTTolxJoYlelhtlrKkpTbSAVHp4XZYE0VmICZmSktzIZyG6ngaGcLDRIUW5KgGBeggqNlJQWJVywvJUS5jVRwNCNRSYOagAqOfvTsPQmKn5OgGBeggqN3HLlKvOLthwZHkTd3zdG/f4mqMv78/Td37THKbaSCo6/eeT5l6QFiVE5YuPfGvReU20idGnHviZvm+orKcqJ41Ow4fDW5ZvG///8pt446jv737/+q7WeF+LmNteQwK5q/f/9NWXogsWrRH+JSEUFAtVYeBECapm7WmkoyIgwMDHcfv9l19NrgbZrSEwzJngvj6KgpncCoo+kFRh1NLzDqaHqBUUfTCwAAlv90tMEoHvIAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"LB"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"LB"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"LBN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Lebanon"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"黎巴嫩"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"961"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADjElEQVRYhe2YWUwTQRjHZ9tuKS1QhFJAWy1HtICgqETEo6gkakw8ohgVNMbgEQMJHolPJjyIicY7ajyiwSuRqFEjgnhGqJJIyiUBsbZBKC1Ftgel125314dNmia+ueMak/0/zX77zfx/+XZ2ZmcRTJUJ/jcJ/jXAn4iH5ko8NFfiobkSD82Z6L+jg4ZbLtz7lwaHX2mSpg531p0beL6j7QIW9EAfHwCA0DQNd8RGa8faD8eZNioQrkjOPaLdUJKSB9ECcqU/Y8bTX5+GLwmKbLZ1bdafejXaBdEFMnSH02z1OyVC9PKCvUUKrU6Zo5YqooXifreFpClYLjCnxw3T6wPt18s0y3rdQwaHKRy/tGBPYeLMadLEFEk8FCM40PaA62jX3Qc/9IlRsYqo2B7Xj2LlbD+JB0g8PyH9tvn9ds3SawX7ZSIJey8AC/pk3xMfGRQigv4Ji8FhMnpsTFwsEG1SL6of0lM0nS1X1xVWFSRAOHNAmx4WHzarodJHBpnLGJFkMhRg2mtS59kCzoyYFI0sqVyjmzsljaWXiGV/AABJU3Xmd7V9jxnizNhUq8+hkSmXJGU9HP6EBT1Ntg4AQI9rcE68BhWIsuSqKAHKxpFtpQMkUd52vm18oHR60bYZS0r1p4d948ytBHGMm/CFF43VqfmHteuz5aqp0QlsHCFAW3yY/mf/BtXCvKbqn8EJF+79Pacio+Sbx/ptwurEvVcK9u5OX8nGEQAgrKmpYdM/DpW6CO+6lhNfJ0YCJKGWKrLiVAQdKlJoB71jTD0QBOlwmOsKq+xB16vRbqvfsTKZ1QbJdnO5YnxZ/PaYHJXtz1wFALD5nThFSIVR5kl7+BEaHCacCm1sPZk/Jb17zdlSdRFLU1bT49FwW+tY35bpi2NQSc2X+rf2nhnSpF73UGRORUaJm/C9GDEwr2mOXH1xfsWK5Nx/Bg0AuGxsumpsjhaKy9N0u9KWx6HSrR/P1A99DCe4Nt+To1KmjVOhduz70e47OmVObV7ZH5uyXfJ2pS3fqSmORaPDEZwKRSZEFkUsEC1O0raW1LaM9bExZTunZSJJJPF7e+9Ty+fIhObfvu8QgOiUOaxcYZ0mSIq6P9gyq6HypbWToiks6MltrNY82ze36ZDBYYLlwggO9CThv2l6045994fwyGC/20LR1IWBhk6HGYoRI4T/a8qReGiuxENzJR6aK/HQXOkXk9Fc7oCvOVQAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"LC"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"LC"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"LCA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Saint Lucia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"圣卢西亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAEAklEQVRoge2aW2gjVRzGv5nMTDK5TTIz2RSSUul66d5q1W6NkQTcfRBZQRYUxF3wTYT18rBvwtaqLELFgkK7M31pmhL0YaFFxLUFW2wX2gcfYkA3ICmWXKzWdGm22WianfEhpV1dXbZuzhnQ/Z7OHGbO//vNOXxzOAnzyjcm/k9irTZAW/eAqYhjwDGWVLYIuFdGr2xJZXCWVI2rALBUtqC0BcAhEfvd241ijXZ1C5Z0PLDdiKn0i1MHtrN4XEY6nU6n0xEFduovnHbBozJEG4aHh0dGRkSbBdHFUN5pvXUAvq2NUCjEMEyxWFy3ed/P0qxPd4Y7nOhwIpVKVavVzc3NVCp1nwsdTpoW6ALHAgCg63rzUtO0nU5qogfssKFPxuLiYiaTafZkMpmlpaU+GQ4bNRcUgSMy7Ozu9Dal63ozt6mJXmidOwhnbT0cDtdqu7sNURQLhcJ1UX7vezouaM1wpwthEclk8mZaALVabWJiIiyi00XHCC3geACmaf5lPTelaZppmtSiiwawi0OvH/Pz89ns33xzs9nswsLCUT9cVPb1NIAjMvhb4upm6brOs4hQiS7iocUAA4fAVn5pb2+v1+vNzpefc5gmkp/91rwUBCGfzxvefQPfgXSEEp/hBzxoc2B8fHyHNt7La/1e/W1v7DG+2VOv15PJZJsD97tJ2yEPHFdhGMbOem5vs30yKPEceA6ffiCFg9sGNE0zDCNOPrrIAns4POLH7OxsLpcD4HQwkx9JQWW7aFBhpz72iXYGQC6Xm5ube9QPD+HoIgscVcExu3F1od/T0/UnoJ4u7kK/p9nWdZ1j8IRC1BFJYAaIqyiVSlNTUwDePO08dcJx622nn3W8ccoJYHJyslQqxQMgep5JEPiAF6odY2NjjUbj6SeFwbP/mEiDZ91P9QmNRiORSATs6PKSM0Xys/TqfnR7bnR2dvJmcTHll6Xbvdz1DSPy0tUGG1peXv62YtOXCZkiNsM+Hg9LmJ6eLq/lLw5Jt6cFIEvsxSGpvJafmZnp8cHHE/JFDDiqgmUwOqonznuPPHhHydv9EJc47x0d1VkGUWIHmkSAWQZxFSsrKwcDsyeP2+/8wZPH7V3qV4VCIaaCJZNdRIAPe+EXcPnSwDtn9nxg9e4Z59efn5MFHCITXUSAYwE0qldO9HzB7n14lsUz3ZduXP+B0K6r9cCKgCPuSjX7ouffHkdKbnPzyguHXRVFaKkzACSAo4ph5l9z86t3M4ib/wmF16OK0SpXO2oxMMvgGD40K9N3P5RZ+fIYhloeXS3eqgf5yo/VrdWrz5fXfmY9qiApnF3c0wiN32v1jbJx7VclEGwT6/u4a6tbnhY6pP1Ti+W69x+P/7r+AIduNZoGvoaxAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"LI"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"LI"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"LIE"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Liechtenstein"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"列支敦士登"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"423"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEMAAAAoCAYAAACl+UfqAAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH2wgaDwUU1wjdcwAAAqZJREFUaIHt2L1PE2EAx/Hvc3dt7w5qbYHyXi1CIYEYIzGm0YRBwYHESQddHHRyd/YvcXRUo4OLg3FDBglRhACmEmMAA0JL6eu9OMDwbCWkL5I8n6RDk2vyyzdP7i4VjD/3UQDQWj3gf6JiSE4dI27vouPUc0vLnSqGbRS4mVxlsn8ZgVfvTS1zqhi+D54Pni8AUedJrWOc5KKAKJOI7hKxHbZzJr9zcUa6dnCdKiGjQl/4LyG9QtkNkdmL45/RW5Go9Wi1tCyP0oskYnlKJYdgSPBzO4jjwkEexpIauncIQsOyTOZW23m7nOYsnpiaJ2N6bI3JoRx90TLBoGBhKc/WRo6J4XbCfpX1lSp3b3UQjwU4LGTRhcdmPsP8r6Fm7K+rmjG8SpHBuIZ+/D2VtDBNnWzOY/+gypN73SCOTkGbrRM0SnSGi43c3DA1Y+QrFiuZLTTKaMDSegGhCYYHbVIXTV682mKwx6Q/HiAQ0HG9djJ/7CZMr7+aMWau5pm+bvHuY4Hb6SjpK+eYWzwgFjG40B/CcX2mrkXojAZ4/WGHB7Mh5jf2Wd5pxvz6qnnbf/k5xbe1AvfvdGGbGtm8w9OHvRRKHr1dQZ49HuD7jwLxjgCjSZu5ryXeLIw1Y3vd1YyxtNlHWetG1wWXEibjI23s5RxmbpwnEjbY3a8yOxXDCmlcHm3j01qSim81Y3vd1Xy0Akz0ZChm3rO3V8RxXapVF987+pmua+iGRihokEjEWOce2XK44cMb4UQxAPAdKG6BVwS3dPRBgGGBZoIRBjPe2LUNdqI3UACEAfZAA6e03tl8b24QFUOiYkjEl2hK/Qd6TJ0MiYohUTEkKoZExZCoGBIVQ6JiSFQMiYohUTEkKoZExZCoGBIVQ6JiSFQMiYohUTEk/wBR/8EAoBiq9AAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"LK"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"LK"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"LKA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Sri Lanka"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"斯里兰卡"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"94"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"LR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"LR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"LBR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Liberia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"利比里亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"231"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEwAAAAoCAIAAADbkIswAAAABmJLR0QA/wD/AP+gvaeTAAACCUlEQVRogWNk0MhgIB3MeX5J+fc3MjQOCGAaaAfQA4wIT7LgkRPg4/rwCXuaFA1wkeJlpY2TqA9wetLOVNXNWqtmwkassvIVqWoaMjRzFZUBzuSaEGDhY69DT6fQDuCMSU87HVFBHn5ezo+fv9PTQbQACE8yMTG25Psbacm+//SNhZlJQoSPgYFh3aT0568/CvJxvXjzKb9t1ZdvPyGKb+W2MLAPjIvJAIzI9SQnB+uCtvgwT2M0RScvPfDPmv7y7Se4yBCuJ7//+B1eNMc1aeLfv//ggqm1Sy3CO5F9OOQAljz55OUHZmaE5z9+wRJj7NLinIy/aeguqgIsnkwOtv73//+Ehfuev/7QURyYHWW/esc5NDW6ayfpD50qBIsnHc3VgnJnbtx7kYGBYefR66v6Urk42b59/0V3t1ENMKI10FlZmVXkxK7ffQ4XERbg5mRnffLyA7KyC+urh3BM/v79F9mHDAwMbz98xdT2YvFGQWEuGrqLqgBf2xUPeDJ1GfsQrUKGKxgRnmQ8uecMGdpUZYQ52MhM6vQHjP///x9oN9AcjIjkyvL5/PWBdgPNAeN+LoOBdgPNwYhIriPCk4xP564ZaDfQHIxWIcMFjAhPMh6WshtoN9AcsPz5MIRHqIgEIyK5sogGuQ60G2gORquQ4QJGhCcZr8SUDrQbaA5Gu1rDBYwITwIAixWTDZGft8sAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"LS"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"LS"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"LSO"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Lesotho"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"莱索托"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"266"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAB7UlEQVRYhe2Xu4riUBiAo6gIEjVIRBtREDWNIlgIQTAIkkpJZZcnSOUj+A5TWYztARvBzgtCwEILG0EsTNAEm4AKXkAJyXbLsss0O/+c3YF8beB8H3/OycVFJN+J74b7Xwf8DU40LpxoXDjRuHCiceFE48Jl2/ZXrLvb7V6vF8MwX7E4YUNjWZYkSQzD5HI5SZIsywJXwE8aIXQ6nRRFCQQCFEUlk8lmswmrgN/Ts9lMEIT7/X673RqNhizL4AoP+Io+n0/TNFmWTdPked7r9YIr4KMLhYKu65lM5vF4GIZRLBbBFfAH0TAMQRASiUQsFuN5/nK5gCvgJ01R1Ha7PRwOBEGoqur3+8EV8JPudDq/rt9ut8EVwNGDweC30Xo8HoQQrAUyWlGUVCr1582Mx+Pr9RpQBBaNEKrVah9tQpZlu90ulAvmjfh8PjmOM00zGAwuFovr9frzUigUSqfTlUplOBzO53Oapj+vg3l6jMfjzWYTjUbr9TpN07qui6KIEOI4bjKZlMvlfr9PkuR0Om21Wp/XgX17LJfLXq+3Wq00TSuVSvv9nmXZ0WhEkqRt29VqVRTFfD4P4oL/YFJV9Xg8ns9nt9sdiUSy2Ww4HIZVuIi3D0/Pf8u3/HNxonHhROPCicaFE40LJxoXPwA02VO6c0guEAAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"LT"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"LT"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"LTU"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Lithuania"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"立陶宛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"370"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEMAAAAoCAYAAACl+UfqAAAABmJLR0QA/wD/AP+gvaeTAAAAlUlEQVRoge3ZoQ2AQBAF0YVcA4QGcCh6oAuapAEknjYwVIAhYBDTwa2YV8HPJKu2ebb+DUVERFt7QCbGAGOAMcAYYAwwBhgDjAHGAGOAMaAsx1B7QxplPbvaG9LwTMAYYAwwBhgDjAHGAGOAMcAYYAwo83XX3pBGs4+T78WfZwLGAGOAMcAYYAwwBhgDjAHGAGOAMeADRRwKOAyiXJwAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"LU"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"LU"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"LUX"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Luxembourg"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"卢森堡"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"352"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEMAAAAoCAYAAACl+UfqAAAABmJLR0QA/wD/AP+gvaeTAAAAjklEQVRoge3XoQ0CQRRF0RlCM5RAuWgawNAKCQUgEajBrLgd7IpzKvi5yRN/fi7XNRhjjHHa+4AjESPECDFCjBAjxAgxQowQI8QIMWL+Hk+P2mautcTYmEmIEWKEGCFGiBFihBghRogRYsT5/v7ufcNhzHF7edQ2ZhJihBghRogRYoQYIUaIEWKEGCFG/AFPgQ8F65y/0AAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"LV"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"LV"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"LVA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Latvia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"拉脱维亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"371"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAAWElEQVRoge3YwQ0AIAjFUHEiry7rqrgFJKVvgt9wI965a5LdPaCawXQG0xlMZzCdwXQG0xlMF5nZvaHUuAsbTGcwncF04V8azmA6g+kMpjOYzmA6g+kMpvuNpQVZ7jfpWQAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"LY"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"LY"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"LBY"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Libyan Arab Jamahiriya"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"利比亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"218"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAABJUlEQVRoge3YO2qGQBQF4DG+EESQFGJhlVoQF5HKQvcg7sHCFbgFiY29pZ2iO9EmYG2hCN4Udr/pwoxhvF8lMyDnwDBeFL7JO3mSt7sDsIaFeYeFeYeFeYeFEUIIPVgQBG3bTtNU13Wapr7v352IpjzPj+PIskxRlHNFkiRVVQkhjuPcGo2CMAwBIMuyX3eHYRBFkRAiy/L5QIlA79Uv+r53Xde27W3brrsAUBSFJEn7vidJwiwVRcuydF33sqhpWhRFVVUBAACM42iaJtUYTEfL61nVNM0wDF3XmWVgeqQ9z7Msa13X6y4AlGUpy/K2bXEcM0tF0T+5tJh61mfpdA4e8zw3TcP/4IEQQn8lfHx93p2Bqcf9tcTCvMPCvMPCvMPCvPsBrkxiI3KU+hAAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MA"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MA"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MAR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Morocco"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"摩洛哥"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"212"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAABkElEQVRYhe2YvUoDQRRGvzu7WRJCsm4SG9E6WIhFrKwDvoK1IPoM+gjmDVIpWPgYEYyFAY2FhTYq2BjUoPnRzOyMjRCRVHp3JDCnmy2+e9iZexmGGuUlTBvivwV+g5O2hZO2hZO2hZO2hZO2hZP+Rs9Hz08oOzHpZiROo6TCk8o9LopGManwRLZw6KEdEoB3gbTmz+eRVoShN16eFMTimzGgRkmsPo+tMzF8w1COR9oAh/Pe0ZwXGBRGphNQqABgL/RnF8xTQJKw/hBv3Mcs5XiOXcpg+zauXamcNNWOzmhzcD7aPx9ltKl2dF6a2pXcuotTHL8ZvI1Y6ep6W16GFGgaeDTwKNB0GVK9LStdJl8A7I0YSZQ+kI715rIPoNzTOYVI8hbhHnlS4DQSWYVsTNmYsgrNSEju0cecdzZDfR8eUL+Q9QvpAX0fZyFzFebj0ZoROzdq7fFrzO1eq5WuaEW0+sJZhXgfa159yqufPTfx419g3riJcrzGcFdTezhpWzhpWzhpWzhpWzhpW0yl9CeAoX/yuIYCiAAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MC"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MC"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MCO"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Monaco"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"摩纳哥"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"377"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADIAAAAoCAYAAAC8cqlMAAAABmJLR0QA/wD/AP+gvaeTAAAAVklEQVRYhe3XQQ2AQBAEQQ4HmMC/EiztmSChQroUTD9nPdc9xw+cXw94SyGaQjSFaArRFKIpRFOIphBNIZo1M312SSGaQjSFaArRFKIpRFOIphBNIZoNzw4GTwI6otYAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MD"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MD"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MDA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Moldova"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"摩尔多瓦"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"373"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAET0lEQVRoge2YW0wcVRjHv7nv7O4Mu7MLLOxyNdvW0MLaoovFC7CNVVJjbCWpxhptNPGBRKT2oU2N0cTYaLxFn0v6UG1TS7BtNFppK6SXLGgqBSRAuwWWhWXv9+vM+ECDCS++cKZxs/+nmeSbc36/nO/k5AwGz/TDxuWlxhtnX/tsAwe8e7QmNKjbwAHxDRzrf5GicKGnKFzoKQoXehQVTqTg7CA2v6zknOtDKjkZgUMyAl98pGOr6yg6cnC/q7ZSVhIAlFlhjw9uTQEAqBjQG2S+QrKazLaq7SO3qbWaX66DJCnAgl54zgPHPt10bqD1h18pAGjZBq3tIk0SnkC0/bEsAIgSHDou3HJ2vPuJQUa/3siFvz5Z4o/Ic97osFMPAGUChCPUrCc45Q6UcPdrXHOlozMe1z3hshM1Dvo9nExhmay4kovH0yW9H5P79wT7LzEcHUtn85/3qR8yUxeu6HI5MZGTACAURY2DXhgnCJLAZMC62/KWCVo+Z3qHEbVkSKXC/DMG4wJp00rfW6SbYxiGGgUAFBBmSNokaHEM9FI2fREu7XRbnIZJxxI7riU4qcqn2ZpWN/SaE5GUDABwBzUP8j1M4CTH0hqWIQg8BiLfGq/I0zQn5dSi0a1JvegFgBI1redYgWNRwwBq4YEbjC+WX3vVAAES9pclZP65vNajDbYG43eYdZ/87UJKhFj4zJBqfCG3+hyU6PO7fPfGeOuh4OvD7gO/u1NaQqoRByz/nkW+MFwYRkqEeA/37Im9PSuM+WONpfyssf5k7rk8sFND51ubRyZdxGn/ATacXDLbW2Bgtd4bgA47UiLEwgwNmRyezKRFAwcAAblJI027Itarf97+bawmmLVExUZee78FZFnWauCpR5ASIW5pm1WyleEJlXx9ORxLph/Xftmz/f0txtlUGqvURxr4wXbuA0zOB6NpAPAm3EYeKQ6AAscSSZPxHFGLgw5GdZW7fpwyeaO6Y13OWFL6w9dB8eWHd/fNTsZA5jE8q1WjxkEvXKbBGlh6UU5N+JKmxctPPFrvjFqOnGoLZCu6O8fLoxeNsVG/Qb3sNwiMGWAeNY8St6WoDOFkRp3OVQ7LnS3XbHCqy0692bT8iu20iR1xfyt0tkUwOkgRKgVgkAvLkrjZEHheCAX7NI6vVvQ8BLxbQnfl8ArZd6ZyX1eetSeO7tNxdHLOt4IaBhRoaUu1p/tlGBokrpjCxgrpw2+MOooSQR5z+ZrqG34aWuo6HF8QVW/szS75J9zolZEL97wKGAaO3WL1w3Cin6kXdnx3deStZ3dWlfLOaddiYAdFjfQeSRv1YBRgqxU1DvqWXrsEWavhyebsdOBanakEA9hWV5bD5yVmanMtlOrXF6OLov+0HHbZYY+f6I8P3ySXw/7j72UaN2WUBACFhVdzcC8Y9DNPN4OO++/iDc8DEAaAF9ofyLQAxR/xhZ+icKGnKFzoKQoXev4BC6SayeuodDcAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MG"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MG"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MDG"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Madagascar"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"马达加斯加"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"261"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAYElEQVRYhe3QQQqAMAwF0VpceB/3hd7/TCWewURGCvP2nww5IqJlrXGntxX9l6tFRlOMphhNMZpiNMVoitEUoylGU87SeF5fdbyy5aeNphhNMZpiNMVoitEUoylGU4ymPG4JBQqJDiuDAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MH"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MH"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MHL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Marshall Islands"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"马绍尔群岛共和国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"692"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MK"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MK"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MKD"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Macedonia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"马其顿共和国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"389"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"ML"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"ML"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MLI"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Mali"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"马里"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"223"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAW0lEQVRYhe3OIRGAQAAAQSABAkkSFKUpgiYAMejwYjG3/mZu3q5jGvXuz3B7n+twuwyXP2paaVppWmlaaVppWmlaaVppWmlaaVppWmlaaVppWmlaaVppWmla+QA7+QRV2/gPJgAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MM"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MM"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MMR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Myanmar"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"缅甸"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"95"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADDElEQVRYhe2Yy08TURTGz20HKtACVSi2hEdINDSBxGpiA7IoNEiMCygsjGmF+FhhghsWykJFJfEPgLjQLog7FyqPIItSTHUDhIdDAkSMClUE0UxpCwLDzLiAVB4pdObeqSHpt5p77znn++XmzOmkiB+CQyfF/waQohh0tBSDjpZkg0YUIEqm2rJBa0pBY5GptlyXgbQ1AILgd8lRXJ6bRkrQ2iDVBkgpR3l5oNUlQOkgLgPU5+QoLws00tbseiArOaAVkFq99ZhaA4CIG1B3mDyyFbNTTPXxmVuL+MwnfPXs0ihZC6pvVUu24q28qu3L5GOVfQtfyVoQbg8EyKov275j1VsR6Q4RPadPJJ+kwg+yXHWuPtGwfUefaKjIrJgJzoRL2RC4af9HUQyioSmkbDnTkpWUHXnKw9OPwh15l2ebhpvEMohuj8mlSYfH0fOtR2ziXr2aeenwOKaWpsQmKg2XDQdH7RTLs2/n+78EP5vTzSqlSmw6AATYwP2xe+2f2lmelZAu/UV0zbnsHvs4Q4tNHGdou8fumpP+WSLlpkMKsoFub7cAgumoCaEdI0IAYe/Q4AX+2fTT5rFmP+uXbAqY0AAggDD8e5hmPhTrihOUCaH9vcTMGtM41Njl7RRAwHEEUnN6cHGwa7Zz/5gOb8fQr0EidsR+XM6mm/cPMB8UELnIQOeoc/JT8vePMaYYs5KyiNhRJTQBbmtRaSRhV6HMTT/Ht0M/84vwq2hfOKlCY2gpBIKBu48BQPPgNtKoQ/sb9ARz6Qa+HYFrVhqOUwX/eoMdoZmq2rVe91qvm7HVsaPjoSOq0KjQZ+A7EoCOL7fA5pDm+JU2p6/2Jjc3v3nEff/hu1K/0uYEngcAQEhVbsF3JACtOm8BAH5h0Xe9YbnVCRy345jjlludvmsN/MJiKBhTuNAKXVrcqYJ19zvGVscOjIQLYwdGGFvdev/7OFOhQpeGaYr7Ih6xXQSeX+14E2l85QVAaPU11kciLjRKTBBW/sidsku47SHBHpMYYv+aRk8x6GjpUEL/BZHl8OXrJDdfAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MN"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MN"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MNG"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Mongolia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"蒙古"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"976"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAC7UlEQVRoge2ZzWvTYBzHn6RJuqYv2ZZtpC9WXMFthykiwlARVPTgRaZOxlTwD/Ag4llE9L6TBxEUEeZRPHiYh4EoTIciTKkTt+pW1zVt06VvaZMm8RAYY848E/o8mNDPKXlIHr6fPuT3vJR4M7AftI6ZUP+t2OkWdngnPX28tNTCDskW9uUI2sJuZ6fCoX0VpDmwsSNhD6vvupwhaRN1GgzsQJgE0bEswzX5o+vo8yAHLhwcrFJBXZMp/lgRQyDUwIXrawx3oOyL1/WaGyocBX1Ck+j5G3t9kUblG4shEGrgwqGhSuxS1turyl/8K48jWgn+yv8MJD0V0BM3lym/DgDgD8sECRYn41iCocLusyQYg00olq0F5/zZ2E64Q1DVHA02zb6NLONh9b+/4QBsC69B0F3NzPM+y7lZ8Sw/CUfP5/AkQ4TdN6ysegeurpaT/uTtBEkZQCfCo+L6xxC2cCiwLVoGWLofS1xbiY5lAQCmQay96BGneUzR0ACp0ppEf73b79+teAK6surVCjSeWOjYRvjQs3nrwpqB4lcyNK9ZLaX5wM9HkejFbPeIDACQZjnHzVKQEZZmOflTMDwqdo/I6SlBmuXwxEIHRNgayVrKV0v5rFu14OqVVuL68pYWpw8yRHhufJj0Gmy8DjymmmfUPA22+xUcBESY4bXYRKbzYLmS9OsNsvguVHzv7BG2W2mZGtF7UuKPyA2RWXvZ44s2+k5JwcEqtnAosBM2mkTviSIAoENQIxfE9Q/BwGCNTSimQeCK13rghxhKuiM/08V0NsNncwTp+HM8O2GSMsVX3eUkGxiq/ngYAQQABqh+Zx2tbbsfps38685ayudhDeFM3tCI1INYZcHZBz2QKq3mmMJbrvQ54BXUladh5ZcXTyx0QIQ31tUbuHzhsXBvz5YWTaYi50RkeZADO8Tz63/ultCnQkh7twTA3Pjw5lu9TqanhPSUsNGyOBlfRB4MFW749+SfaAu7nbaw2/kN4z8Af795svkAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MP"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MP"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MNP"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Northern Mariana Islands"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"北马里亚那群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MRT"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Mauritania"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"毛里塔尼亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"222"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADLklEQVRYhe2YS08TURSAz522Ay3YBxVS2gJSAqXaKkYTMDw0hg3GjQaRjS7UhJAYMW6qMfwIWZGYGBfGRPGVWIEYgitxUyOJLoxEaGmBtkCh9jF9zVwXRYLYmcAtHUPSbzW995wzX9rTmTOD4NoJ2G9Q/1uAhIK0WBSkxSJf0jSFaQrnqXi+pC+bgj21a3kqni/pXlOw1xQUjkGkxaWkiYJFET6ti3AYSRBmMa8bcfeQSKtkbCgl+Xf9fHXoQbNHr0gBQLGEA4Dw1WkEeJGhBz4ZHR71zksJQ9IeZnU867pjXtXmME8H5RljAJBLuC+rita35qzGAFCvyl5KGBJpq5rh21piZO3vGhl2o2wsTbWPNvoYGV/8UY1Y0vWqhMDuqfJIEcX5GJmfkRVJcEtFRCC4gedHE4ZEurk8KrB760jgpUtjGrHWjlhfudQDloBAcItgKT5I/oiHDiRtZczXoDzr7nOXZmRWkznu+WC6xH+1btLGqkqSBAIk3/RCVNZdw6uyabzxcU7DF9lds74Q5W13AUikPVH6js2vk6cIcjeplKduW/3uCE2QSyI97lWWSrn7TT6C3E0Gm5ZKpNz4googl0Ta4VGlMbppCVxvWCFIB4Ab5pV+y3Iao1GPWNLBhPTFnAYAhlo8HTqhK1pWzujCQ80eAHg2q1lL7vp2CMQD012nIcEhhZSb7Ppht+2iT+w230TXjFzKxdKU3WkkO7sEjusJ0kJJCQY4WxmmEHQawicPxr6tywP8dz4AOFbGPGpz91uWKQQAMPhZP+Yl6Q0AQLm8Qhhune8zL2eOOQzvF5VvXOoxr8obozkMAEAhqCpJdhlDF2rWO/W/qD8D3/D38v6pauLz5iRdROGH7e4rdavb1tMY+WIyANApUlK0fQJ9PKPtm6pJssTjNGl7ZGAxeu1WMyzVoYtItzhQCJQ0q6RZ6m+xOEvdcxrsTqPAkL0TcpLO8NFf+uSntkKePqyOUzwyLEZPf5ZdnKwj7uOt5NQe29AWp88ZQp2GcHVpUlecAgBfXOaO0BOLylGPMpjYs6ekvZQWjcJ7D7EoSItFQVosCtJiUZAWi30p/Rv41AmwHhXTsQAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MS"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MS"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MSR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Montserrat"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"蒙特塞拉特岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MT"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MT"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MLT"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Malta"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"马耳他"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"356"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAABc0lEQVRYhe3WPU/CQBzH8V/xalUeEhSKNAECkjQmDjIYFiKDLsbJkddmfB9OGiMMhkE3bYIPQWswDaQ8RilwrtJBEdJrmtxnu+XuO1zvX4FSCmfcRXcc2pnY1uZFpf5wD0BJpSPHBw6duiCfbd3QNCufs/I5/anmStAs7NGeMBU97nQN44NSClCz37aMpltZvxMopa3zS13TALQGna6a7n0ORHGFYBJ4fpOlIAA5mYqdHP13a2c/xPfH2rCwByAAatZfzMarIC4nMtvB4v6QEAB6pRpz6Py5TF0PSkF8ZD0aH39NRqOhW01/IgCUraxergJo9tpkVw2FZWktJBFf97osi34AcjLlcuY04edwsYxm+fTMf1iklPauKoVSSUooc2/NaLiI0Y14ONJfIgAiq4FFih3lyXfaPsY3VbV+cwtAyWTd6JmJ4MUfJk9eDx7NCo9mhUezwqNZ4dGs8GhWeDQrPJoVHs0Kj2aFR7PCo1nxZPQ3qfZvdNXOzeYAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MU"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MU"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MUS"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Mauritius"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"毛里求斯"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"230"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAAbElEQVRoge3YsQ2AMAwF0RhlGEoKmozB5jQswQR0YQtbutyb4J/cOd59zLaQrXpANoPpDKYzmM5gun58Z/WGVMtd2GA6g+kMpjOYLubT/GmRGUxnMJ3BdAbT9biv6g2plruwwXQG0xlMZzDdD6eUB+6QGejxAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MV"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MV"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MDV"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Maldives"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"马尔代夫"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"960"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAABxklEQVRoge2ZQWiSYRjHf19OZ0gQRWtB4AiThKaHOrWSLnVIF+sYnQqCWNAhIXYKdl67jBp0WFcJPMRwO2yEIUHQYWwqRjHDloecMHAo6be5r3O6gVB7hPd7f+cH/u+P531f3ofXyBy/bGEjjvR6AdJoYdXRwqqjhVVHC6tOX7eFwSeuw1zHP5OZMbuqs12HbSfc9Zb+nxx19hP1j3DNG6Kxa5L+sUpu8zs/q2Vae3uHmi0uPHYhzKtoDI/TzfjCNPHsMpYlN7CJCj+8dJvXo8/YbtYJv3lMprwuGQ8InuGLA+d4GXmKYRg8Sk71RBYEhZ9fv4/L4SRfKfI2914qtgMRYZfDya3zVwB49yUtembbERE+c+wkHpcbgPWtkkTkgYgI97Kj7YgI/6ptUTN/A+A7cVYi8kBEhM3WDovfPgFwJxDGMAyJ2H0Ru6UnP8xhtnYInBri7vANqdgOxITzlSLjyRdYlsVsJEZo0CcV/Reiw8PcSpKx+ATVZp30g1nuBW+Kb2/xt/T8148sFT4T9Y9w1RskdNpHemONbLlAaXtTveEBoLFrksinSORT4tm2m4dtJ2zo30PF0cKqo4VVRwurjhZWnT8dx30CDkoldgAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MW"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MW"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MWI"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Malawi"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"马拉维"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"265"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAACtUlEQVRYhe2WO48URxSF76lbVT09L4bRwLIgniseggwSwIERNgmIDImEiIwEHPsvOCQigV8BCWSIhQABltEKCTFIWLtGvLTMMI/u6qpLghAEgHt21MtK/cV17vlUul1qojUIpj4xAlpgL0REDFoWn4hMt2Jq0pbwi6kdMnGNVE+CFyEiBmoKidB9N7zjBilNx3460idt85RtDsS/Ez8WEZJAQgKAmGCBtuI6qetp/0baW3ndSqW3KnMh7mQiLyULJE4kFRmKBBIiUqAaKQsYAIRN0AxcGb19EdJVkz5sqidMY1l8C9yXsBhc1ydvxA8lgD6tQhWqA57jaLMyMfBBwjrwLde/54YT9/LEyYM6PqArezliYMEnD/3ogRs9D+mQwh6OtrOdUdoSuiFdDG5J3HvyRJjTdiP0mAhEL0M2WbWeLNYE/2Ybm6DvuqEj+Scbd0OyEfpi3PndNmpQn08OJNxM+1fH7xay8VgJE2nCQR13wE99MpAwQfuEN3220iLBLOtnIb2fjbo+PR01Lze27NcVi69WzgL7dOVMpfVfyO664ZBkRuk5touS7ebo72xUkPQ2ZX81dQZeSbaQJY/96EzU+rM6o779hTDhmKm/lmzeDZrgKhCD2+DnPu3lv+xJpI/bOgNtxY+z8aNstEtHf9Vnv2P8maOmdtsN/g1pDXonm9fiG4qf+CSvgPrxka+xhB3KVkn1xXd90pNwKe7w/3uFNOGP6ob3Ep758QcJVVI7lDH5X7DcgRhqqzIgSkiWgjOEI6aWa8K8G3iSWWWIaDn4ZfF5HXAuWp8rwEQNxYaQkvTEt8Gblck1YSm4tyG36Jfgwfo9K8mvCrl3+meglC6KUrooSumiKKWLopQuCn3twIr+XVYFPX++vdoOuVmT61FKF0UpXRSldFGU0kVRShfFmpT+CI2IEem1RWUeAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MX"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MX"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MEX"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Mexico"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"墨西哥"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"52"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEYAAAAoCAYAAABD0IyuAAAABmJLR0QA/wD/AP+gvaeTAAAD/UlEQVRoge2Y20+bdRiAnx6AfqUUyqGFtsAQAkgLjE0Yh2TJHJEMnXFsyYynxMUsaObFjIeYeGH0RiPZtRcalxgZzpkt2WKMjiibxGW4MQ4BChRZW6qcSgtdz7Ree/Fd8n2afM8f8ObJkzf55feq6O/JsEd8c+Y9Xmg9siezt65cZ/ns23syG0C9Z5P/5yhhRFDCiKCEEUEJI4ISRgQljAhKGBGUMCIoYURQwoiglVsAIJmIcWOgn+iah1hCg93RQevpc5iKzbI5ybYxfv8MyVgI9+glxr/7BHN1DcFonJn5FQYvDTJwthfv9JhcevKFWVq+S8gzTNz3Mz7XFKH5e2jzTNTa8ontqlha2eTCO6+x4V2SxU+2MHbrfsJbS2gsJhztXSRyivD5I6yshyg26shO7xIOBrjy6buy+EkeJp0ME/D+hM1az8OokZD6EN4lN+GdCNPeAJuJNJZcLXXVJZRbTWx4XIyP/Ci1pvRh1FqBRwkdY2OXKcmvwGyuI+hbIL6zQqFOQ6W1FEEnEIklicVjhFIJHvw+IrWmdGEymQxbwb/JZFKodAUUmGxEln7FmLpGUFvOhGuDtnoT/miKnvMXOPD0GfIqDmKyOjHkF5HJZEgkolLpSvdcj965jEqV5gmDlWJfmIeGDapqSpiZeMCBg1WsrVdw37uNJhrji88+5PxHAwhGE3MT41hqHPxy6yLJVJSeo29I4ivZxuTpdeQLWeTUd3F7bJHxSCGLPg15ZZ2kY49w1jkwZhsIRFMkYxE+/6CfLE2aw30vYauqQUWcqsr9UulKtzFOx5O4XCPE03GG7AUszC4TK7PRG87gr22jqdvOvs5R7g9/i7qgmT9n51ledFPbUI3RXMlO2IytuEwqXenCqNR6pl138fzl5ctXX+eee5a3btxkWJfDxLUfsBgEntHOo7VY0KVWKTzxCjmBbWzFj3F95CKBLS9Nzc9JpStdGLVaw7Huc7gmh9gO+akwRnj+2GlUsSR9nlG2UnBr1YhJo0avN7Aw5+Kk00EqT6CqtIyujpOoVdI9opI+13lGM46WFxn6/mM8q1HMZJhKZygMTnFi4ypO72+8rF/GXNfB16fa6SnX89Xg+5gsj1NcVCmlqvSfSCG3iM72U/i8dzjSsEt9thp3UR0T7jCHShIEtTZa8ZGKa1lfnaOpsRu7vRmVSiOppyy/a2fDUWor67g5ehWPZ5KqfS1kdR2ncTXMvH6TP24PkNvSy+G242QJpXIoynd2yM610/vUm0Sj2yRRszYxyVrOLp2Nz9Le2odeyJdLDfgP3GMEwYgAGNs75Vb5F8oFTwQljAhKGBGUMCIoYURQwoighBFBCSOCEkYEJYwIShgR/gHBzVnycVkQ5AAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MY"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MY"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MYS"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Malaysia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"马来西亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"60"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAEbklEQVRoge2Zb0wTZxzHf3ctpbRQ29KWslUhxbIFyYLOCJPhsiWYwIAMY6b7E2cM+GrgJJvJXoz98Q3sD5nyYpluMc7FzToMCQOVmo3YZfyZtgqVQilFoCoUWRGwXK/t3V7csmTHtcU74Ezl8+rJPb+73/d799zveZ47BIGDwAd/wUle8qK8ZOUR4SNFy6S4So5NPxA/mBdxTBxvMHC8AjuWZPg5w99Ve23F+WOpKh8A+HFBZ1/Kbz1P/dy+0TkuY5c42zHI7kSORDEsFBBfvNdVtecWipILfmH96ZzzJr11UEWSAABqBSZAyRCBAIBEHBSg5JwvbhVEcyGSYaGAuPBle0nBGAD0Dil3vb/Tded/z3PKKxaLQts3TZmt2pzMaaGQuGpJLdg8ca1fteCPcitnL13irp4FkWTVVfdQbm86kl+qLJ19yPDeYrigotxuH5HnPDONIqTNqawst5utL0dNPFRUzFo0F8IaztJ7D73RBwB4AN19pHCx2yy9Ny/bc6bNYHcpTn3SMTEtQRCyMM/dbdPECYm3i4d6bJpbLsXKyn90whqu2msToCQA/NCaOexmqEz9LkVutsfeZGzuSH/1xTE8gAKAKI5wumX9vxjrTuVEdqupruYsng1hDZftGKUa5036xb1pqfM+THiuPWODdv7jg9cBQBRHUF2H3+z77OSWny5vVCswiTg4ei+R8frrj33NVTsrmBceMilOzUAAYB1ULQ7A/IIDZQP2JiPllkZtpcXeZDxQNoD5BcuodVlAGJeWaanzIy1nqbYotyIYYr4vGbrZ5obLm/Re2nHbsPK1GnpJpzFancBKMFeYh/SUV/xfW63A7t2X0AIKNk/sK3HszHNTEzINmRT//cSv7V260y2Zf9zQMqbwHD/OUjI3mA37MKHrjkz/9CwAbM2aarmaRgswW7VmqxZB4Pvajv2lDlqvqVtXeXTHSsjlTtii1dyRXvNWLwC8Xji82DBFbeV1jRKraXihoaZzZk4EAPIk/MPGbUX54x9VWI5+tyVCYsPFNm7KWcL8DgPA+pT5gQvGhPggQSDb9pVbBuilK0vvTV7nN1u1ddXdiQkBFIVgCEmID7knpZ+eeL4w1+32JNpH5OESE+S3y+ljyYTdHo5PJtZ+sxUAUJQ01l9RKzBaQL9LYbZqAUAmDRz+avuNwWSLXf1ufb5W5QMAU7cuglseCfuEKY598GfVHhsADLtlu48U3nQk0wIk4qBGuXD7blJutgcPoNZB1bPpM7fvJmF4lAmp19DBTTlLohgGgHdKHJ8f6lIrMIJAzpkyfmw1dPalzMyJUJTUaR6OTfy7rpCIg8EQSq23lgJfXzyiGwYAmRTfX+rY9cpIlt6rkmP3Z8SWAVWrecOZtkyqVrHgsTa8Ejx2RStWEWak8bOD8zudvORFrgHCS2K+ePKG9LqiIr41rCoIybjfiV2evCHtaWzkW8OqslalYx1kkqdPLXyxVqVjHYSvfzx8sValYx0EGxriW8OqslalY51/AHk+l2VRrVM6AAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MZ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MZ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MOZ"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Mozambique"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"莫桑比克"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"258"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAEt0lEQVRYhdWYb0wbZRzHn+fu+r+FsnId/bM2YtDKpnPicERQtjgczBhjli1i1Bh1CSIm2jcNOHQGDNLFZAnjhfOFZuicwywEsuzVoiGS4BQTETZIem0Zf8roX9retdfenS9ooJRSms1e6+flc7/nySdPvs9zvzvYcajRWr2HRhHw/wG9EFK+4PDf0ih8YkG+ZbIFAQCUB6iBkdvH7N58y2QL2iLWAgCELHfU4cOp2Ji2mEVgvq12YFOUT8ysXLp+Rxek82WTJannr9Idvjw8XTcfyItNliTikYyYYZsIbzHNjGuLWFiIUUl/00EAXp9evnhjBicLMSqZrueq5dDg0O2ahVXebLIkTTySkcTZ44QHcmCiTM4VTFR2kAYAQAAOuoJ73eSYvjiCFcSLM1uJuvnAT0PT+1fCObXJEvi38um0D7CSeNyHpQxyKDJ18vDsy8/mNyrbSpdZ5tzfaOLuNA0J/cy+8IenOJkkx27bkrqXCRBQ1OCL2iS+q/j62G+xwJOYQgYR4fg/rtf+MIeJGYbkSTPVLokY4G7FgxaSIE1+TBUrOuIDAMyxUQcbPR9Z0KEiGUzUGxDxgNx0QoinWTL3bNrpLtJ5jXYbEVEfTX0LgLQ6OCHyWz1LSoh1SowaRJhcLIJIp9R4AJN3UU6KY/mU3sj0SMzTEbbrENGA/LHRNyYVOHOHAEOD6Eus+gOxLsO5I5iImbTZGIofYwAAnFRVlb7jog54a1ojIYr7+ayo5nH0dz/ZdgaU7kJ+7JUpKWa9mlnFXL17orbUIxjmmLOU8wbNU0eOtoh05J8KKYK6DP7mV8G+uhfH3W3t3U5TZa2syPRQlTWsrJfjN+W6QGRWuthRHlsUbV1FCJGjghIcEYzFVnkISiLT/mHVR1qZ4U3H+V+MI9e/k0gkTU1N1dXVFoulp6fnrrsh2j/q+WE34DKtBQFAIARcxqL/UBoAwCyKr7xnvKYdNxiN9fX1fX19JpOpv7+/paXl/eMN6PezGVYJcswZ0n4z5s+17hobB3EiHuqC94691YyiqNls9nq9arUaw7CpqSlrb69lclUZiqZdYoYhzWFijo3wYwzWd/py9N5XkfmT2orWV7jJBWfE3T3vKFmZ8zxqmKrczTaqcat7tlts3Dp/kF75krob5ffKS0hLIXIYU7bjgoqKCxUVgPxLzrSXyw4Gyz5xImK2+ZDKf1UxzZCVqHR9JsWxXZRzmPbwqbvGpt4Df3cJb11Y+Vrrvqjh4hAAIHqY0lsJgYaeeX4/R2+8Pm0MZSZtBMNfJJLZJG3on/VdUQd/VSZXoApG86nDP1QaGi1eG4k/9xTVdoqTpLn7+GFDGmIcporFloVp64TaKL0ogkJE89nekmYDj4Zp2LY13YpQF9Wfs4kr89PZJbNNa7oFeW1A121HlfGc2mTJztIQ49Qfz6ual0GhfNfuJI2VxvS9hLQqyI9NlmSSltWs6r4gsF0FEYlktv3cwk8vlp5egmjOu5/7II00qozruu3y2sL9B5kqLXkipLcSgrJC/IW3TpI0BKVvu/DWBYgVYiSSSUijCkb7uV1xhKeG+AHBAACiR0j9OUJkzE/3cx9gxY1eTacDkfLaED8g/wKtjsQrDdavwQAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"NA"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"NA"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"NAM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Namibia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"纳米比亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"264"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADRUlEQVRYhdWYXUhTYRjH320HLd3OztyHZpBFBSlRXSTV7kTpQyuEMAsKiz5pF1Li6sam2EUqkgqTgi4KI7ARmUQos0KJ6jJNtEglFYfu8+wjdeu408XiPXOdj53Nbcf/1Tg+531++/Ge57xTBArrgTCikG1orzl2vnTPCu6x3GnFu98yVSLJxGJJRXGBUV+mVmS4ewYstc2E3cVSnHpotSLDqC+rKC4g7K6Zi43ungHOW1IMzUswDDd0NuojSZHVmxk34arEIBiGEXpXjp0IiiesWWcKR0lS1PH+wA6NExEHv8+r4ieOTTAMI7TPnzZWbzz7+FTVwWESgCmb4vnll/kGXZy4UPAK7pm9bmAZEbSRYGju/Roa6J0ah8+fNofLph2YMnOpxawFAChli9MO+RyObpJ7pemBn1ZlDMRxCpaXl+S26BGVggYaEQfHG4yzTvSW6cijc2+2qVwAgCm74tqz46OGzs2YR9t0iS8unMEx7GAAAKJS5Lbo5eUlLr+3+l2TiPblcrhgUoP67p38kKfE4cVfDqyut2jBIzWPbefVcq0EmyYHdUMdtiV3pOls1Hfh0Ncq7XDd66JwYgDAViW+6E9rr+x7+mnvk8/7FjxSzn7xjAgQJti25Nb1N5omB/9dj6iTiEkiKF4OMD6gywHkz4pEIiY5W665YOrLRJRacFmrWfttLluD+qYdWMT2yEgP3H5Vwrk9EiSYERoAkJ9je3HVNOtEr3SdiHgQ2073hx7E8Xk1U8vECWaDJoLifINu3iMdqXt4t7domUAAABsR4kFF/+6GG6GRR9sv0YLZoEMzOE+Jq2S/J6xZbZV9JAA3u4+qZYtbstwzTjntQkkQDEM/8kDYa7y6+Av7azxcsKW2OS7BQx0sgrmhYdgPTMkUDMN9ymOax0nbwTT38uoEkxLBMLyhUyiYWoRXdWoFw0QLLQTB1GrRFAlEMAwHtKAEU8uy/E1ogmHooYUpmFr//0uCFQyzClrggqlG8JPwBcMgYP0IpjquI8EwIpIk4zwHu/ze6o+dXT/MCUKkab2OBMOIRrD9vG4I/TcNqyyN/ofGmoffKS+1gmGihU7+iGCDiaZIIIJhOKAFJRiGDVpogmH+Am9XFFcQK6IJAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"NC"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"NC"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"NCL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"New Caledonia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"新喀里多尼亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"687"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAEz0lEQVRoge2ZbUxTVxjH/31voZfSUgiDUaoTdCovboJoACPqmMPgthgYc3Mak7mwhQ+LRskkEecCC8uQmS37ME3YXJaJxgU0guFNJqIjJENCBlmJRSmvpbz1hdL23n1gkcF64d72Mgjj963nPM9z//+ec889514e4q7j/wR/qQX816waXumsGl7pCDmqQ8E+AOeEXDBgJ/0dPH9I1OBLOSrOJV4aphTOxvUBzRs1PduiTJFay883XO8fRrvOt7WDaO0K7eiLNFD7l5Vzzw0rqd+2h5R98oE+LpZ81lhVg+iNUBCWrHQL0G80tZz5sq66LfEJlQGegAvB3sLzbOOxTvj9mcPVbx+wzGnPyQVJQavBieyZxi49/1jei02jpyi+rzdaOUGA0Ex2GRQZIy26cr5+T6J9VjOFvAJcvAQ+H98Wgf+P1VDlT2XsG+psbtGZYkm+nAvZnsN6hNfziytKGrUaak57pw5RyQgLwYMqBAa4SSRJvH48rLLvMwiWcpzZPZaCUVn4UfO/3QKQSnCjFFlvuncLgM9H6RdPt/he8EAlhwgvS39hGGp3OfWRt9N22932hodh0IjbtVgTjmOH3FdQKvB59qO64q8iJBrP5HoPb3hXHMPQ0qmejG/6ggLddE2YIZUgLAamUQC49RO2b4WcZubmHyc+Nm/wTK73sJjS1vBxt24BGPpQUYVx898/u5/i+k3aOvHp1o5JK/PrcgtTw7pJ24bESbreF7Q4mY9Pc6FS4tBBVNbCj34xTtnruic0shXKFUwNN1LDKXtddL0iEbLeQNFFBKnR0IQhI1KSaEtJxHAE2NgK5QqmOy2L2EF3T06zIx4OJ359gNRdUAdA4TdfsEDuwhhjjZzCdIT5MnL+gNf2QKVEbz+MJtpVegYf2smy2HB2PLTaUHABvf348Roa7nNVlXsYG55cIFL3GOdzEbMJuTmQSBaqZluygwRTwzK72Dz3pDALHxlMo5BKYZ2EaKGVgTQve8M7eeo7N+fzceocCkowOoofruLdbAwN00ZarBAN+rBSySFMDWulEt1D2pnqcqG+EYV50OmxPxVrtWhqpi1VWyVIcqrZCuUKFouWpJvoG3Df1dOL9zJRfRcuF66U4exJdOlp6zRVyCJ9ZOxkcoew/HkRw1B/ck1J8URhoZtb+YkBJz7E0RwAIEnEv4yxCfdFKm4JCXF4eSDTi3KO8GgCiz9b3anZcffP9J3OOe1xWyCV4MhbqLuHA/ugVCD9VTfpI2M4W69qSw32RrGXCJC2lnm0VU3cr3EkhU08FzjrSCwUAoCfHP2DOHcaKqWbhXrKgbRcRUtCDAQ8b1V7AeuNR0/CuiPfBf7eOSuxS4/4VxCxDWXl2JyEqGS0/TEry2pDZj7xMGYTREv8JpzdCAMAj2fUBFXfcalslugIEkBrO1IzoHs8EzI8gmvl2JWIkGAA6OrmHSxU1kXHUsSCO5JFh4evd3uWKesd3WrQv/PSyOk8csTdScDfD1cv41IDUTMVYtwcCt5SzuRneG54Gr9HBlV7r9NgsZtJk4lyuSAQgCCgVAugkFg0ysHkCIiXxRvpabw1PMPEFMan5DabXSB0KH0gF0G4HD9ccfVtCSDEIMRmLPFr5wVZjoOwqKwaXumsGl7p/AW81HlUDswz0AAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"NE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"NE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"NER"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Niger"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"尼日尔"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"227"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAC8AAAAoCAIAAADhQDRDAAAABmJLR0QA/wD/AP+gvaeTAAABQUlEQVRYhWN8EMTGMGgA00A7AAWMugY3GHUNbjDqGtxg1DW4wahrcIPB5RrGr0fXDLQbEIDx////5Ov+/+/72R3fL+7+++Els4A4p6E7p6E7AyPjALjmz8v7r/tift05gyzIrmomUrSYRUyBrq75++n1i1KLP2+eYEqxiMpJdp9g4hUmw1gyU/GHpXVYncLAwPDn9aMPyxvIM5Yc1/z//ePr4ZV4FHw9tPz/7590cs2flw/+//yKR8G/75//vHpAJ9fQDpDjGhZxBSZOXnyGcvKRl63IcQ0jKwe3XRQeBdyOMYys7HRyDQMDA39ELYuIDFYpFlE5gbAa8owl0zXMfKLiTXvYVEzQxNlVzcSbdpNX2DAMupph/dOd5LuG2oCRd4P2QLsBAYZ+eUM7MOoa3GDUNbjBqGtwg1HX4AajrsENACZgYsFxKuTNAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"NF"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"NF"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"NFK"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Norfolk Island"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"诺福克岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"672"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"NG"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"NG"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"NGA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Nigeria"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"尼日利亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"234"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAAAkUlEQVRoge3QQQlCURQA0atx7GAFwe03hSlcmkIDWMEO1tEQA28h5xQYmN3czt9ZYDsc53G6rkjN5XWf5+e9pLVfUvljBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRgZGBkYGRj8mVggn9q8VXAAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"NI"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"NI"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"NIC"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Nicaragua"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"尼加拉瓜"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"505"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEMAAAAoCAIAAAAqm9C9AAAABmJLR0QA/wD/AP+gvaeTAAAB90lEQVRYhe2YsW7TQBiA/zvb8TlOYhJQiWBBNCgwQAdYGHgANmBEQmJjZOAdEE/BwsjCwspYqUIVKgpUhbRJAyWpShPbieOzfb5jQGJivFNP0X2TZUv3+dPd2ZYRPNuElQCf9Q1Iw5TohynRD1OiH6ZEP0yJfqxOCXq7/fus70EOSAihaGjOkpxOLMun8fdqayNbDCrVy7Z7QZFO1epi2SlNDlz/ikPWJoJYdo00uqyIsvm+IqOSEhp/o8mwGtxEyBpMRzv41nB6iC1CautcFHk6ViGVX8LLVACvtW4DAKXx4Odhe+tVf/SD0ggAvEa3WB5xnkn32tJHzJIRxuTv8fbW6529WRBeCo8++ItPd+89B0BW5RyIUrpX/pyU+cx2mwAwiw5253HnwZP2WrL+8PGXMJxF+wDgeG0ay98tCp9d796/bF19YyPMAGwMAuHj/tNH918o0slfXYLngPD4uNfnn/Hwjuu4JfOQlfISIf51POm1L14HwRGuyPWqmpPwZDdaZAVgZuFlAVUH7JI7wIM6Cc5fQ8iSblRSksZ7ILgX3PjPpaiHMCH1jnSpkveJ1+gK4MnpR86W/04KwZZhD2FXRQYo3fEsn+bpL85Sv7kxP9m0K01S72DbV6RboS9I8zdVO0yJfpgS/TAl+mFK9MOU6MfqlPwBhVPKJdhHkBIAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"NL"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"NL"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"NLD"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Netherlands"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"荷兰"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"31"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAAcklEQVRoge3XMQ2AUAwGYUqQwcKGEszhhYUEdlyw46O4eC+53qfgv6RL45jXHAoZew9ozWA6g+kMpjOYzmC6csHxnXep5yEys1RwuZM2mM5gOoPpDKYzmG66nrf3hqZi2XafBzKD6QymM5jOYDqD6coF/6UoDcvcn+doAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"NO"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"NO"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"NOR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Norway"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"挪威"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"47"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADcAAAAoCAYAAABaW2IIAAAABmJLR0QA/wD/AP+gvaeTAAAA3klEQVRogWN8r637n4FMIHDlEgMDAwNDx+ydDJV9G1DkKlLdGdqLAhgYGBgYPujokWsFRYBpQGylExj13FAFo54bqmDUc0MVjHpuqIJRzw1VMOq5oQqGtedYYN0WWgJ62IENDO+Y65yzi2JDDp6+jSF24uJ9BmqYTQlgZNDIILsnPtjBsE6Wo54bqoClPMWNYkNOXLyPUahY6Csy2JuqUmw2JYDx////FBcohIb2BgoM72RJyYApsS2P0UFZGoBRzw1VMOq5oQpGPTdUwajnhioY9dxQBaOeG6pgWHsOAFuaLptaVMu/AAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"NP"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"NP"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"NPL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Nepal"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"尼泊尔"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"977"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"NR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"NR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"NRU"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Nauru"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"瑙鲁"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"674"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAACfElEQVRoge2ZT0gUYRiHn0+30ERZ3ViQNVmWorDNCjM29tBGUBoldTOIDDoEFR0iEupQXQIh8uI1qA4FFWQGIpQlYn9IgyIUQ9E9NEuIOOu6rGuC00GEQOsw75Dj8j3HeWdefjwz38w7M4rtNyw0tslb7QBrHS1QiBYoRAsUogUK0QKFaIFCtEAhWqAQLVCIFihECxSiBQrRAoVogUK0QCFaoBDPk3NvVzvDmkZZ7yv1J30BegkL8TwdCDrWTKnF82FZC471dDtK+leutKSQ5EwWy7LYuyMAwKdvBkopvMUFmKlZR4K6FfESVgruXj0MQKw2SKw2CCxuU0ra3f14pA2mpmeJVFdw58ohtoU2AuAvKyJSXcHUdG5ffQD5+GM37RxYGw5w68IBiovWY1lwuWkfmzeVsaXSR3R3Jc9eDeHzFnLpVISfk2kSEzMOR3cHonvgwUiIjraTbChYt2I9k52n4eJjuj+O2Q7odmzfAz35eaTSc3T2jvx1n87eEVLpOTz5uTst2boCA/4Sms9GORbbSjDg/ee+cSPJy57vtNx7hzGRsh3UrYjHmAe3T3C6YeeKtYcdX2m69lzS3vXYXltKKVqb62isDzNumMvq44ZJY32Y1uY6VA7PM7YF1lSV09MfxxdtoatvlEx2nkkzw6SZIZOdp6tvFF+0hZ7+ODVV5U5mdhW258CBwQQDgwkA9u8JcvT8I84c3wXA/fYvtF0/Qjrzixdvhp1J6lJsz4FLhCpK+TyU4PWHMbzFBcSNJO3dw4z9MFlYsDBTWYeiuhPxQ0QphWUttlh6IseN5LJariJ+lftT0JK4lWq5Su5OuP8JLVCIFihECxTyGwiFuD2Cco3jAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"NU"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"NU"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"NIU"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Niue"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"纽埃"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"683"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"NZ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"NZ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"NZL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"New Zealand"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"新西兰"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"64"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"OM"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"OM"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"OMN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Oman"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"阿曼"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"968"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAACTUlEQVRoge2XT0gUURyAf+/NzuxkO7tDrrsuhq4kVuc1g+4bHaIwthCpFekQJXgVFoLILPuDlw5FZAfDiwUeRbqk3co2Nr1sHQrWbf+pubY7ozs7Mx0Ca1wPoc8Zdna+0/B4A98HPx7voa+eJtgtbZmlXf9rFNhoAb3ZHkz7/Wwg8Oe7cfyFb2oSEAIA9kQH3dKst90+sD1YSiTcd29jjgMAKbYozUdBVTHHue/ckhLVN8CVVIy0LIuzc95nTwBAjMWED1EA8D5/KrydA0XR3484tsqllfuPWj+95/t6684EEcbMYZ/9+LFUT1h/uf1AE0y3+pmj7Ur+l/Ax6uy/TvMuRFG25paN+eiBzk7s4krxL9K37wapkkET7B19wNQdhPpD+clXGGOZsStFATG0FI/7Ho/CympJKC51XTLKlQia4OxghD3SDi5nOZ2SsjkuGARQUlevAajF6RkKUZJYMEqUFJpg+eea40o3bvTSPA8ASjK5WZbZUyfF2XcbnxcMMiSMNji3/KMnjFiWu3DeEQqtj41tLiy6h4cwyxZn3hilSJYdTmln90V7RyAd7lMKBQDI3BhwjwzZPJ78ywnd9ciD/r1LYxffNPW6nMukL/eqUvnvJtrmmxin6huSXSFlPb+1Xo13aU1ww71hROHsYARUtWIj8j4ckUul5cjNrTXHubP6WBIE7eW1VI3U/GvJ9FjBZscKNjtWsNmxgs1OzQXv8Dz8f6bbRFIeurGn4IHTq6Q8dKPmRtoKNjtWsNmxgs2OFWx2rGCzU3PBvwGUPa2uCjTL/AAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PA"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PA"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PAN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Panama"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"巴拿马"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"507"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAACD0lEQVRYhe2XzUsbQRiH38lGYz4IiZeIJ0GJRcilGshFehFEKCh+4KEaPOSknsX/INB6qUak1BQhN1sLoqAhehAPIdhWMCEe9CBKxRwSQ83uuu5uxkNAEGF3VphdLfvcdnh/Lw/D7L47CGMMdMh6g5Q6Wyj1pYoprRf/u3Tm5OrgtEBPhRwreenyTh4BCrb56NkQokE6eXgOiJ6JBlSkN3+fxbayLpsVIbgoVgBgdG5bxpgVpKm+wPvOFj0cn4BUh8tyKj8d3xNE+WHFVsfEIu8iPR3KQXrDRV0aAAplrm0yURFEAHA11J0ujvs8DtWUwRORFaSaMQBUbkVWkCjZEEIkvZTMel0N6ehwOjrsddq+pHK0tZQh2+lb6fjzh5C/KeRvOp4fu+FE2lrKEJ3p52H+5T3ClNYLU1ovrGgoRqk1vj6g1PlV7rQprRem9HPhf+W4P3nyeg3XLXqUEuuAwPFW5VbxwIuQvtlNa6o3TPpfcr/49TvjtANC4t8CAFxMzGKMqxzfGBlx93YrZA2Tdvd2S4Xi5cwnLNzVVsrruxZbffPHGWVjMPZFbAwPvDnasDjttUfGaW8/2vCG+1WDBp/pKsdXWR4AAYDM8lWOJ0kZ/MkrffvBeNytqXhrKs543KWVnyQpg6VljvdnVh1dAUdXwJ9ZlSssSQrB4AIlIbw2Tanzi5iIWjGl9cKU1ot7Gmaq7no1Kr8AAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PER"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Peru"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"秘鲁"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"51"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAWElEQVRYhe3OwQ1AQAAAQVRADUT/7RA9aEEP9xifnf8mO1/rPo0632e4vbdjuF2Gyx81rTStNK00rTStNK00rTStNK00rTStNK00rTStNK00rTStNK00rXwG7ARcyZ3dlwAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PF"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PF"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PYF"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"French Polynesia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"法属玻利尼西亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"689"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADm0lEQVRYhe3YzW/bdADG8efnOEnjJmnTph0lbdR0LKUEMrRUXcUGYt26wQpCm8aBwwSXISb1NCE4IQ47IhACcRlc0GAVcNhQp721dCWqBGyjo2vJGM2apFmapmkd58VO7PiFAwe4gq1Ek/L9A/x8Dpb9s8m8y4+HLaregP9TA12rGuha1UDXqga6VhFN0+pt+M/RBl9PlcEuFcruzWuzvIn0Hd7X7KBh6zR2xEC0BiGDy69AERfPPqEs/B66PdPMXcfkCfQdxTMfwtpq1JJB97SmYvZNXH0VviNw9GqCYBUldjGC5DUA6NqLicfx51ljtgxDr10HZQa7BFWCvQcglqqaPPluJBJC934sn4MiorCCjVuGrBmBTs3gyjHN6T9/dUxNTMF7GIQAsGW2xJVVtAczuUfCt44jOYXJUVQ29Q8aga4W0epX1n6u/hGTWkK4/+3faAAAQeSMYPJLsTXko/C+CHZJ/6BudGkV4XF0DHLOMTtfIRSNbcP/mKGh/w21qmGLw9BpSBwuH4Ei6tzU/fQoxEDRWD4n2ymzUIb9URTjvvfeZn8IF375lagqqoJK+WipisgZFGKwd6Ocgd1bV7Rcgf84aIbwXo2aSWvDQrHE59dtewa7xg7wbG4+9cBCW2AiCJyEmIPEQeTqjeZTWPwUgKnzLSIr+U2Oy2xk7kWb21w7ntsTm78tcPmdoV2EULjzMUpJAPCM6NzUjfYeAqEAQOiC9B1FmytFXhT4wMH9bCKZjcWDhw7kUxlQlBZ6n8hFAHA/XWd0uuL64Er/QnRLKrGnW5z8xekUu2FSlC9+M2+3Mtb1bGwm7MlyqsPRc6rybNDbzNCfnHIw9UV3tTNNNnp0yDP8ZKfCLFi+Ph/UUDjx+g0Vca39JcbpnLgk06bN8fGvXt53YTY+4GtlmvSOGnDKi8Ry30zfj6zkRoc8z5fv/nRva8H1lMfNqBrKQnlX+mb/7sDnUSaxXhoKdL4w3B3oa9O5aMCBaaDXlSuIGbZ8IZyYanKuszRJZx+4GaEiF3hpmvS6f5Q3chkKpFyR9Yth4Hn6o4k7X15aFoTqzh3tGnA3wVnN1OBARySWiyYL/p6Wz97ZG3zMADEMRGsaUtlSPF2cnFsVReXoiK/IVy/OJdqcTcdGejtcNk+H/V9vSl0Z/OVSFKrfh+OTc4lcQSqLcs82+2uj2w/u7rZaTAauPJSfW6Tx17RGNdC1qoGuVQ10rWqga9Vfyf+PFZifmxYAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PG"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PG"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PNG"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Papua New Guinea"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"巴布亚新几内亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"675"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PH"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PH"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PHL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Philippines"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"菲律宾"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"63"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAFH0lEQVRogeWZ6W9UVRjGn3e20kKHaRFZTCoaxEgMSkKEBDFGQgQVVEJiiKl/gDECEYOhBETCYiSlLSQGKRJZqiwBKU2EIBCJIMjSQjttgDJQ2pky7XQ6W+fOcu95/TBtocMFup1Owd+nmXPOPXmee5Z73vfQgZP1X2+puOVqw/8DYua4Kn48WLtqW5UvFE+1HukQMyd+eQOx7362b9l/QxOcWk1S6TAcdSDtRQil5k58SUH5sfN3Uy1MFu2GRcNiqD4a8RllvgOg7Ixr0aZyhzOUann9jwFg9u5iXylHr4NjidIPpo+t+XVO4ZLJmRmm1Orrd9pHmFt/gxZAxmTKmAJQZ7XLo6zebi8udYinZWF3rGG1CcYskFm30cUa76JN5WcrPQMqTQ73dulHw4wDp+qXFlXccYdla5JKdw0naFPUjSXXNuysicQ0eZqk0jPDCerd4RVbK3f+cVuCHul0yzBHqmnIxKTCU5eaFheUX631yREmi24YVio1xwLj+DKkvZRUIwTvOVa3dPOVptaILIH9jUG/mLXObzK3nYXpGQ6caK8SEaD9HRkMlDtn3LV97y3LfcVifkhXgwwdlezeKJxfCXc+WAMAo40sOTDZAEC0ieZCcetT9pZ0trcNM2/4fFLl7tnvTx87QKr7gN6wDJ0GEYUIs/8IABhtsOTAmA2AfYcQqUX6qxgyIemhCTmZZRtnHC96e+ILVumq+4DeGlZb2LuLVQ/ITGQWvv2It5DlOQyfTxxkg5VM2ZS1EIZ03R4TwebKbVX+QRlsPnTT4tDfonE1lKtdWmfOoGeX0tBpj+23xR9ds6N6EAabSVOa2X+ElSqwCjInuQXAwXNkHgOOcbicA8d1+tMC0ILsOzgio6Vg8eQLO2a99fpIWdp7RZcRZt8hRG8yR8GClasIndZ5wDoXaTmJ2Y7018g6q0s1x8XNuazYDWNWUvZCGIYBKDvj+jL/8iDJInWN/jgOMBjgOOFhc1EFNMAEFoDeAZMsAMAqRCRheIa/pqyuKOqo62ftvSJpDTP7j8DyPA2ZyOEL4ubHDzQ3Gl8+C9MojtihtiYPLwAtABAHj9PQaTCPbbtY0fDN2vDl5KWRQpLie6Lh8wAADC0Ey3jEarvUZ7zBsXqyjKOMKfr9Ga0AyDY/3tTs+naZd+9h9PysLhW9XTrWwL7fOVYH8ygCC28J1EayjKPsXFbvgkHmMZT1CUwjdHvkaMxd8JN7c7EIK9Ll9xydDA5Hazl8ntImIG082T4ypE/i4AnKnEnWd+EtYeUyR2oQrSU9w77DR11r8gfJctVFL2UVqYJpJBssBtuHAKC1IlYHzQuAshZwzIH4dcQbgKn3P6RUX3fmrQv+9c9AqO4DOoZp5Bd0/3+1laN1pPoBgCyG0SuS2qseb+PagpY9B1h9ArICjw9xaNib0FrJOvPBKla15q07q6fO9vyy94lwi74kAAJ/nnbmrY/ccMgRJovepHiit+4489b7j56UIUg2Pcuza8FQ4/pCz/YSjquSBMmm24aF8Ozaf3fD5ri7WaYe6XQYfmQiPnTuknP52nCFfeB0SaPdMAdP6l61xOpdzpXf+0qPDbYTYq8xAcze3cK1isyjyZLT6VZEIk2Fxe6iYqEMxhNirzEBRNm5FL4C1dMR2bF3X6lrTX7c9RTeEidfiCv22w3L14XO/JtqYbK49x1Wmz3OVT9495VCiNRqkooJnQHdlu2i7cm+GewOpuDpc868dYr9WqqVDBD/AW2hlb7cL3BiAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PK"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PK"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PAK"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Pakistan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"巴基斯坦"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"92"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADHUlEQVRYhWP8//8/A9GAyUmWeMW0A0wD7QBywKij6QVGHU0vMOpoegGaO5qZidlMw0BaRIKKZtLQ0SzMLGk+0WubZ199cOvpmxfUNJmKZiEDAR6+ZTVTVaQVrHL8v/74Rl3DaRLSksJix6Zs9DBzyOyvfPPxHS5lgrz8vpauZJhPfUdzsXNuaVuoIaey8eiuveeO4FH54cunhZUTLLSM5MSk21MrlaXkibSC+o5uTi41VNVhYGCYvWUpfpX/////8v3rzq6ld5YeEeITuPvsIZFWUDlNayuo5QUlMTAwvPv8YdeZQzhtZWYJtvPMD06REZWEiExZP594W6gc0oWhacxMzAwMDFfu3/zz9w8uZXxcPD9//zpw8fjjV88gIvPL+3i5eIi0hZohzcLMEmDjDmHffnIfj8p3nz9sOLJzw5GdfFy8trpmce35phr6nmaOqw5sJsoiKjgWBkzV9YV4BUjS8uzNi8z+yot3r128e414XdR0tJKUHJzNzcFFjJZFu9Y8ef2cVIuomaYlhcTgbAMVLWK0kOFiBtpV4+qyyqQmFeIBNR397O1LOJuRkTHFO5KKhiMDajr6/vPHyNycwER2VjayTGLEL01NR5+8fv7Fu9dwroyoZGd6NRnmMBJwM1Ud/e//v20n9yGL5AYmhtr7kGSIuqwSwaEYKmfElsUTfv7+BecyMjIurZkc7RJIpHZbPfPP3wm3Y6ns6AcvnkzbuBBZhIWZZWHlhMl5LQI8fHg0cnNwdaRVeVs6PyOiu8BI9WExVhaWnV3LHAws0cRfvn+zePfa1fs3n79zFd4sYWRk1JRTCbbzyg1Kunz/hntpNJ4WCw0dzcDAICkstrd3pYacClbZX39+33368NvP7wwMDMpS8pAYuP7wjnNxGHI+xgNo4mgGWHfLw8yBGMXbTu6Lbsn5+PUzkYbTytEQ4GJs25lWBekTYAXnbl+umNW+5+xhkoylraMZGBiYmZjt9MyD7LxsdE2lRSRE+IXefHz39M2Lw5dPrTu07fClU3///SXVTJo7mhZgdISJXmDU0fQCo46mFxiSjgYAbpYLxS73jMEAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PL"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PL"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"POL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Poland"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"波兰"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"48"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEAAAAAoCAYAAABOzvzpAAAABmJLR0QA/wD/AP+gvaeTAAAAdElEQVRoge3YMRHAMBDEwDgYDCf8UYTLG8YW1iLQXHlrZua52KsDtAbQAVoD6ACtAXSA1gA6QGsAHaA1gA7QGkAHaA2gA7QG0AHa+vfXJ3izBtABWgPoAK0BdIDWADpAawAdoDWADtAaQAdoDaADtAbQAdoB3aUGdj2OZT0AAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PRI"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Puerto Rico"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"波多黎各"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAD4ElEQVRYhdWYa0wTWRSAz52ZttPy0K2ii0TE6AJRQdcAq+IjahQ1vhLFBxiDDT8UFf9s3FHDrigUX7E+EmMkvv+oMSYmGkkWE2OyRqP10SIqGB/BN1JbYGpLp3f8waoNzDDTMp3R799kJnO/nDn3nHsGzcs5VV5XNsT7En4eyIbs48eGFrfo+2V/uk1jv9Y+siAhncGItJuzTqUUGbD/d/c9AnitrSRAsNAdep3a9qTSuXnah6taCcmhq3Qnee9qrE4mhX2huo8shKUBQI87ip4f2/KoIpZrV9lJEhLSGcEbQUTazVlnkgtiufZMjwP9SIkuGulQxrjvVTmYHNctFYTkIEsaABCCxeN1e4ro5AQi2k6SiKZHd+qbcPW/gQ6OH5dGUWRUrSSQG+lQBvcnKgoMK6fqoyEkh0ikO5maQe2z0JkpGsQ8cmkAIBAUTtHtKTIO6IMUdJJeV/KJP1JFY4l5OH0tkLa2becFfwenqFePSEtXlxh73nZulmdO+zI2tF22qyQuIT0qmUxNIqeMpCRf1PAGz61gZ2xl65uwQm6iSNgsGk8ZKFiSq7vqkBXF2gfcmHWuVc+PbnpsjQ+0KmEoQNeNGGdEoclwY0dMehLZ0s6nlbThr40cY/B4Jbq6ucP155Ndxc+qST6osHJ36YkjyJOlppQEghBKHJ6H1y685rDv0p2AnLdnehyVDmZCyw1FXL8hUPJiaHRkjbFgsq7701fucitsXld7eIenvHc1VY6/FJzoBOLJ+vhCmzevnA2EfFjMw9Ld3jnb2XCNAYDgMUZK9iDRjfj0LdaFLEQgePkx7LKQ5bpd5WTGfrJHJieGaMnLz9UBAM9DrYMLYgCAQqGEEWOA7/0h++qa6zMVN4Ye2vizw3HmOLR4l7f2AZfzG3lxc4yegv4rW3mp7DBg/4YG2/rGA6agV3HdToSlUweRJ0qNC6xsc+v/jvEmdH6jyXref62up4KdP0FnXUEPT4zumVtYemBfotmDcbegJpqJty7hzM4YQtos9PRM6d7Ze4TXeO8WNhM0TohHFYW0ZbpetcmgV4GhSCiZpf9nGW2OVfVoGrn07LHUXosxPUmDkTES6WG/EjYLPS87jAqoLOFJx5vQtuWGktkGnaaDrVxpAkHxDP3WZXTiL6qmryCyZsRxLTetTma0+74KQnKQiPRgb1P5w7L5ry/+UL/FRKXpoK+0cV9p435j8LOaQnIQkEbA5zedLavfNujzG/WF5NBVOsPjrHQyuR//08RGJt+lE/wfyuv+zn91juCjPk73Egq+HibXPT0Yw7Fa+8iCmtR8vdK5aWTrQ61NwuALWFRYHN3D5PAAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PS"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PS"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PSE"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Palestine"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"巴勒斯坦"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"970"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAAB00lEQVRoge2Yv2rCUBhHf4khJkgszaRgLaX+a9+hU9vVQZCCz+Dagh2KQwehQ5+giwWXgoN7X6FrK7GDL+BSMJm0iyklRk3ivWiS70AgZPhyOeTAzUU7lZkrgjAHQFeAS6zKaXS1PAqJJAj/iABQSCTR1fKoyuldryd0iPaNIghopzJopzJQBGGXawoVovMBJe2PJYEAJe0HV4EAJe2VlQJtKOn1bBQIUNLr8CQQoKRX4VmgTVVO41U7pqQX+BYIAKcJmZJeEEggQEnbCB+Hpfm2Q8Rcdqo+3hnieWnKYlFhgolAABBVFUdPD9AbNRbjQkPghJ3MTBPjZgvjZgsz02Q1du9hJtBm0utjeFmH9WmwHr2XMBcIANaXgeFVHZNen8f4vYKLQCA+SXMTaBP1pLkLjDrcBeqNGsrvb1DOirxftRMkXoPjsi/kIlCpFHHy8hzZr+4/zBOOerJOmH2BcUnWCZN/YSurT4e3N8ZPOUeHCX4ZVFR0LjRYUjyPtAInbEkCOhcaBhWV5XpCRyCB37qE1vUBRjq3XVBo8G0g7sk68SyQknXHk8CRLuGeknVloxFKdj0rBVKy3nAVSMl6Z8kQJeuPP4GUbDAkgJLdBomS3Y5f/0PKT95P8NoAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PW"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PW"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PLW"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Palau"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"帕劳"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"680"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEAAAAAoCAYAAABOzvzpAAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH2gMWDQI0VvniHgAAAphJREFUaIHtmL9vEmEchz/Hea1FLQSBQjGif4OmtINaWiYXjDEu1bHpUnWwlcG42xKnuulkdTSGoYnGghqX0sbVrjSm/Cg/0iMVUi5318UbIJRL+36PNwaemfvkuSeB9zjh9sffOnoYG28B3vQD8BbgTT8AbwHe9APwFuDNGSvHPVIe484kxoZ/wDuwC7eUBwCUFB8KjQC2qrewsT+NouKzUqMjghUPQm6pgBn/CiKuBGyC2vGzKkQky1Gs5h6jonipVUwhDzDhTOJpMIYhW+1E19U1O+KZONJymFLHFNLfgKj3HZ5feXLimweAIVsNL64+QtS7SqlkClmAcUcKs4ElCIJ26g1B0DA7uoSQ4xuVlikkAdxSAYvBRQhg/zYJgoaFYAwuaY/AzBySADP+FZwV6xRTAAC7eIAH/tdke51gDuCR8oi4EhQuTUQufoLn37FpJcwBJpzrpkfdaRChIuRIke+2whzg2vBPCo+2XHdYt23AHMA/+IfCoy2jgzuWbRswB3BJRQqPrm8b9PyfIeYAFcVD4dH1bQPmANnDyxQex2wHLds2YA7wq3qDwqMtW/JNy7YNmANs7E9D00UKlyZUiEjLU+S7rTAHKCo+rFfuULg08bV8FyVlhHy3FZJT4H1+HnXtHMUUAOCvegEfcvNke50gCVBujCCeWYaus89puohXOy+7cgIAhM8BaTmMN9kYUwRdt+Ft9llX3wqRvhRN7D1E/vASFoIx2MWDE11bU88jnlnGZnWSUskU8ifBtBzG3PYavpTvQYX56aBCxOfSfcxtr3X95gGL3gobuKUCQo4Uxhzf4RvYhVvKAQBKih/5RgCb8iTS8lRXfu2Pw9IA/wP9P0O8BXjTD8BbgDf9ALwFeNPzAY4ANf+5NCoQbacAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PY"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PY"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PRY"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Paraguay"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"巴拉圭"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"595"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEkAAAAoCAIAAAA9uUB0AAAABmJLR0QA/wD/AP+gvaeTAAAB2ElEQVRoge2XTWrbQBhAZ6KRIlvjkZCLSURkuVBKTXuALnyFLkoDgfYOOUHorlnlCNmWBop3hbaLHKCLgDdZeOFiW3VtDPqxM8JSZOMueoZvzJh5F3jfG5j5JHz/son2lINdDwCIapMT1SYnqk1OVJucqDY52ec2vPjxbdczQIG3260Y03w+55xTShuNhhijiLbRaLRarSzL0jQNIbRcLiuVShAE0F7wtuFwqOt6r9cjhEwmk3a7PZvNOp1OlmWtVgtUDfuWJElCCOn3+6SqX91/eXv2jj59ctz0ut0uISRNU1A7bFscx2EYhtM/739ePK83nSpjhnXz9/bIO07TNI5jUDv4DuCcP9Tx5lC7fPMh+n3uoAdmspNnrcFgAH0dwNvW6/WLo+AQG1XqaxqrUn+2jDbrUsAbBtuGMXZdN+pPLZsF16em//HT3We9ZqXTyPM8jDGsHfT8kiTJsizPc9u2v09+PR5sbMPq1F+Vq0eMca1WcxwHzg6+A8IwNE0TIUQpLctS13XOOUIoz3Pf90HVInb3eDwuioIxZhhGURT/dzd0GBL5zRVF0WKxcBzHdV0xRvz1dizGJB6MXt/segYo9vn/TbXJiWqTE9UmJ6pNTlSbnOxz2z95+q8rNDA7mwAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"QA"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"QA"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"QAT"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Qatar"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"卡塔尔"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"974"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAGYAAAAoCAIAAACD7xgpAAAABmJLR0QA/wD/AP+gvaeTAAACkUlEQVRoge2ay27aQBSGx2mrKhuQuimp0mzbVfueeYYs8gZplglWSBgwYOyGWxB1uHnC1QRS1+Lqy+nCi0RdFBHpDMLy9wK/NOZ88w86AgAQDABG1bqeVHSa78plZ7FESdkGAtaRvQBcz7i7ZylFp2o3W3RtGzsRlbccMoQ3ex+/fYkcxiKHB+/23zfiEsH/TnjgHtnSmuo3MqOqThWT9VCzuIF2ZAD1C5o+PhlrbayILYHusulooifzzbjEqLIwLdQsPvDQv4+7srtyqXB6Vr+gocvWYPWMViLLqPqQuZ2Pf3NIRAXRZZ1csX0t60nFqGjgeVhB3EE7MkGIff/q2Q54QAgMy9pOD+NLOLls9vjUyRYYVVtXGas/4pCIxx6fmP0P0ejRQeRzLHr0iQgCn1AkMPUPMCxr/jupp1Sc+QIxiyO4VbZwetaVS+5qtx+V/4DuMs9xB7fVRlxiKSUYlwC/KksIGWvt9PFJWGXX4Np2N1vUqcpSinF3D+7OFzRElzUu07VzkaXU+cTEStkGuINpsp5OlaaYYcm8s1zhBfGEk8ucxbKXL/vjueuXAKcqSwgBIACeF7rsPwRP/D6I+m8n5NqPeKj/1+BfAoyq+o28tKbYcdiEVXZj0KvswrSaotSMS51cYTZ6wo7jQPgs3xjcwXz+ZzGRtXoGXhBPOLkMPM+oaHpSaSdyHbm00y7jUmUBjMo9S6ks/XNQ+rXT50VQ9W/1R62rDKNqJ1uYPQZB/D5ovzIAU+/+eRiYrB9W2Y2xZ4u+WgnGm5yECwavALnKAgzLWlOUmqI0qtY9x8WN40K4LLUxuIMZsJVPH34um09MllJr52LjMh26bA32dO4vSwVj/RPRZc/bBflALbH/BU7wJoojYTaKAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"RO"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"RO"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ROM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Romania"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"罗马尼亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"40"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAAYElEQVRoge3PQQ0AIRDAwAUF+MAEzpCBAwShh+TOxH5oOgKatESfXyS6e2Xm4oyW2quptQc4TOcwncN0DtM5TOcwncN0DtM5TOcwncN0DtM5TOcwncN0DtM5TOcwncN0P39pBVSXQvGkAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"RU"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"RU"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"RUS"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Russian Federation"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"俄罗斯"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"7"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAc0lEQVRYhe3SQQ2AQBDAQI6gAwMowAAKUIMgjCCBoIbHoWF5dLNJq2Aebb33oVpjNuBPoqlEU4mmEk0lmqokuu3HlW0I14b1zDaEK7mHaCrRVKKpRFOJppq29842hGvPMmcbwpXcQzSVaCrRVKKpRFOVRH+obwjuwqlfWwAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"RW"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"RW"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"RWA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Rwanda"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"卢旺达"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"250"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAACHUlEQVRYhe2WXWsTQRSGz5nZ3dlsEmq+iklTFJrWhir0SvGi/hb/mv9Fb4qI1GKK1QohjUg2aUPSdHZ2Z44XgRKa4NfF7gb2uZqL94WHw+EwCG8uYN1gSQv8D5l0XKRIGoFclACwwcbzBwKtTFqxev2WGh/YEI1MqWn1AnJ/RHVEmpr8cjIV0gzMI7srjeuifC7eu6giYDXmn4cth6mRKd3LJy/NwGxZ/ZEuHYl3RTa1MdzmvRvyTtSzXfvredgq4nRChcVK8tIuyn5Uf5V7W+XDl+K4yCaKbIbGQ/klbPX01kQXOGgN/K6SvHRAYtf+hkRNq1/mVy/EMQd9qg48Ic+ivYf854y8oS4vVhK+Hg6oJu+V2WgDx5JESBYHDQBt5+yz2s/BbQmvG/yyxvzFVsLSCpyRqUxMQaFTYtcOBvP1/agO206Ho55Bbmwe+Kay2Ep+PW7IOwufbFqDTriXx9mU8trYAHAatiem2I/q3WibgSHAu0ry0gBQ5cMPweFTxwFAImxY/Rl5HbV/SznfVJavB6bhl8dBb/KBy6Q07o594aIMyZbG/RQeCAyulu50KqTnVNlQYOCbyo79XRpxqRsOhPdmPCcV6zHHNxWBQUCiGzVDsgMSAYiVyRRJA0BAAgCmZsV0F0nRL+/vWUtpVCf451TKWMtJZ9JxkUnHRSYdF5l0XODj10dJO/wzaznpTDouMum4yKTjIpOOi18WxNSYNf5urQAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SC"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SC"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SYC"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Seychelles"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"塞舌尔"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"248"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAACgUlEQVRogd3SvUojURjG8ROZAQ1OCl0Yjd6BNjqFlUj8irWk0XJvQdhib2CLLVZFtLLxGrwAwWaLZbsEF2QdYxBNwmaIiJsQslsYjydz5uN8vOeM8WmHeZkf80+hpS8Ibicf3e2FBtS1h3Pv/rDSfepCHUQIGYC3Co4Hpe22utWjSvPMA7lGDgxsW52D7RuQU+3rv7dfr9uVFsg138DAe1s3H0Y78ncap/X6yd2/NmTG5GDABccrOLL5qcuYHAAYJGalGZMDAMvHrDpjcrJgyZj1ZExOCiwZs7aMyUmBZWLWmTE5cbBwzPozJicIFo45kYzJCYLFYk4qY3IiYIGYk834ecMzM5mNDW6wQMxJZjw0lJ6bs/L5zPq6YdtI4A/zxpxMxi9Oa23NnJggn/CBuWJOIONUKj0/H+jE4wBzxaw1YwYnHgeYPWZNGfM48VjBjDHryFjIiccEZoxZbcZyTjwmMEvMqjIGcuLFg2NjVpIxtBMvBhwbM3DG2Lm6ak5OwtzsXww4OmawjNU78aLAETHDZKzRiRcKjohZNuMknAihZuvxolYOBYfFLJ4xdq6smNks9+ucu23WSzW3eO+Wqm6xelWquo2nBxT2hwNjFsxYizOMRy8AHBgzd8Yqnew8egFgOmaOjBU4ZXj0/GBfzKwZY+fysjk1Jfw1CJpHrw/si5kl47TjyDhV8+j1gcmYozMWc+rn0XsF45gjMuZyvgUevR4YxxyYcc+Zy5nT02GH3iaPXg/8HLMv4wjnoPDoGQihguNtzv652+1lTDsHl0fPsK3Ot8XL8s6lYc/an/NWLlfLDP+sucXy99KPgefRSx3vfxobGfudHf/V9t4fj95/ccXDUMo/y+wAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SD"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SD"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SDN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Sudan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"苏丹"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"249"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAACDElEQVRoge2Yz0sUYRiAn/2pEiQdNgwEIaK2gzcpS/CmBw9qRIt0ELz4BwRBJkT0B1RePHTV0+KpvIngMQ9eFERbsEOBEhrlwXXX2VkPsWjjzjozfh873+77nIY5vPPyMM8wM5HMUHf55WqSllIEwT/RbNoiM3pM7oZd712MJArwvd3m+fAxC+mTeu9jHNHKQSFW5t3jItP9BfLxeq5kFlHniS93LMZG8pK0Ry4IBEnaD1UFgiTtFVeBFSTp2lwqECTpWngSCJK0G54FVpCk/8e3QJCkzxNIIEjSFSK8uF++6pCu6x35+cHXuQcd6SMVS5mEEoEAbYlWPo6+YrI3o2KcMcR4lHqrYpBlWyxurrBz8IPBe30kYwkVY0NP4GegG3Nrn+n58IyN3W+qR4cS5QIBtn7t8HBmjE9fszrGhwplCTtplqS13IHnafSktQsEKNklSnZjfrlofwWe7M0w82SK1niL7kvVBW0CryXbmH36hvGeEV2XCAVaBHbfukt2/D3pm7d1jA8VygU2erJOlAlslmSdKPkWTiXajyZSA7nOZCqvYimTuLrA9T+wsgeWkn8SxhE84RMblvdg86/CdcwjmMD9Aiz+hN9FxeuYh3+BTZ6sE+8CJdmqeBMoybpyuUBJtibuAiVZT1QXKMl65qJASdYXZwIl2UD8EyjJBibO9iEs7UKxMX+56+YUohDWrC1uoYoAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SWE"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Sweden"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"瑞典"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"46"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEAAAAAoCAIAAADBrGu+AAAABmJLR0QA/wD/AP+gvaeTAAAAbElEQVRYhe3YsQ2AIBQAUSAuSWvpULYsw0yEBWwE4WJyr6Tgc6H7MVwljGpnfjxP9/idb6VtkxYxgGYAzQCaATQDaAbQDKDFVuknzPn9DxhAM4BmAO2Y2eG4F/qAATQDaAbQDKAZQDOAZgCtA8TVCnMHKf4SAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SG"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SG"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SGP"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Singapore"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"新加坡"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"65"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAC60lEQVRoge2WS2wNURiAv3Nmeu9tq/RBos9QkWpqIfEKiQQLj4V0ISxYiHosBAkb8QqJtCGClYitXVkIEkmtJJ4tIaKi3Ghaj94ipaqX+5gzYzF6r3Jbld5bY8yXTDJz/jOT/5v/zPxH9FQvsPiPkH87gbFGH+lEMT6PrIXzkKXFCE1DhboxbjVjfujNZH5p57fCoiCfnJ1b8K9eBbpOvOUB0XONxG/fw4pEQAiQApQ5FvmOmmGFtWlTyTtzHFlWAvE44UNHiV64PPgBNVVYXyKo9o5M5pk2hhQW+RMYd/qYLQv0H2ggdqVp0BxtxnRyj+zDUorw3iOoYHtms00DQwpnb6tDqygDIHbtelJWSjDt5avaghiPWrEMlZQVAizn/vhFqrYkcrLJv3kVEfAD0Le2DqO1DQB91kysvs+o9k5bTtPsmwzDjs+sxorFUM9fjJHCn5GywvqcWQlZ830PxpNnwPcl3HAAvkbo330Q1fkqIQqgTa8k9+hBUCb9u/bbL8VhpBSWJcWJc7OrO7FEVVsQ4+59rGjMlv0JFWzHaH6ApZQjZeEP+vAA4fqTQweFINxwajT5ZJyUOy2zK5ScUDrZ/lYHUCYoExEI/HKf8PtBKftwKCmFjZaH9qYCkBOL0GuqkkFdRxYWkL1jM7KoEDQJmoYsKiR7+6bkmENJmZkViRA9fylxHdi6IRk0DPxraglsXIdv+ZLvFVf4alcSqFuPb8VSR++6tD2Tyg+nChiPn+Jbthg5YTxa5RTMNyFUWxAAkaUTv3EH1fEaM/TWHvP5iN++h+p4mRhzIin78ADalAryzp5AlpeCYRCuP0W08eJY5pd2hqwwgNX7ieiVJmRuDnpNFb6li8iaPxvrcz9m6F2yB2vS0burHxm2woMm5o0ja8FcZFkJQtdQXd3EbzVjffyU6RzTyoiF3YJz+0eGEJb1j3x8aeK/q7An7HY8YbfjCbsdT9jteMJuxxN2O56w2/GE3Y4n7Ha+AYoqBc4qQLfGAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SL"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SL"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SLE"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Sierra Leone"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"塞拉利昂"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"232"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAAc0lEQVRoge3XMQ2AQBQE0fsEHQhBFlbQggMCuKCgwQD1x8VdMjdPwU65MW1zlo4MrQfUZjCdwXQG0xlMZzBdd8Fxf8/ZekRNkZm+JTKD6QymM5jOYDqD6cZ1f6/WI2qKshyeBzKD6QymM5jOYDqD6boL/gEu9g8Tbr2CdQAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SN"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SN"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SEN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Senegal"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"塞内加尔"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"221"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAABmElEQVRoge2XPUvDQBjH/881RBqlLXSpoKIVdPHlC1QEQW11kk7FD1AU/Bhu3dzrIEItCGJ1LvgRHEo7WO3SyUmwUElyDhGhRKFD8gTP+8HBcZc8d7/kXgmnmxIB4hzHggyH/kov0Hgi0Gh/AC2sOlpYdbSw6mhh1dHCqqOFOei/eykKIhE+b0tU24Fe0sYmEuGbrsRt142iaRjcDb59SDy+yu98wiTW9kMVHjoSA3tU6LoL2F+juf4EFLOj71iGxEQsvI8QqrAjCUcPLu6fJQa2v77cdFFuennLAPbnCdWtcGdZqNEtA6htC9QLAknz9+eSJnCVF6jtCFghTzKWRaswS2gdxrCW9g/V9bRXtzfHM5fZVulMHFhO+beipZREJs7VC0bhoQM0Xrz89KSXAK9s6HD1glG40ZOwXUIxS2iVBFolgeIiwXYJdz2+Qwib8GVHopIj1PMCCZOQMAn1XYFKjnDR4RNmO3icbQjMTPnLT1YJBwt8hw+2P/yT7Dh1QaOvh6qjhVVHC6uOFlYdLaw6Wlh1/p3wJ1nvXd/nc8j2AAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SO"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SO"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SOM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Somalia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"索马里"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"252"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAB8UlEQVRoge2Yv0sCYRjHv++dmXdXN1TQZJAg/YDMpRyCKKqhIfoLXJyDBP+AaGwMmopAHKIxcKw2CdqSoCVctISiEKxMTO8aIusgocL3uXh7P9ML73s8z+fenzxsdiNn4x+huJ0ANVJYdKSw6Ehh0ZHCouOKcI+uosdQ3QjtjvBiyMTiWLcbod0RngrqmAoaboSGhzqg7lUQ7Pc225WaRRqffIYjAR2qwqAqDJGATh2eXnh6yPiyTQWpcKfHOauRgI5OD6NMAazdBQCFAasLfZgf7YLm/d3/fK5ZOLp4xObhHaw2lyfaLvzO+IAP68v9MLWf3bfl5wbWDm6QLVR5pMVvSWfzVUR3CshcPn37m8zlE6I7BW6yAMcZ/sxS2MTKXC861K/360vDxtbxPdJnZd6p0Bxa6bMyTnOVlv2nuQqJLEAkrCoMIb/Wsj/k90FVaE5rEuGw3wdT+whVqVmOF5apqQj7fRSp0AjPjnQ129lCFbHdK8R2rxyH0+cxPOEuzBgwM2zAtoFkpoTEfhG3D3XcPtSR2C8imSnBtt/GMIJVzV14clBHvQHE94pInZQcDwnLBlInJcT3iqg3gIlB/m9r7sLdmoLodh7n163v1vPrKqLbecc+5wXJPfyXkDUt0ZHCoiOFRUcKi44UFp1/J/wKVqSKL+CMwc4AAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SUR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Suriname"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"苏里南"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"597"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAABsklEQVRoge2Zv0ojQRyAv3EuZlk3cCQaC8+rzKXRUmw0aawsfAuxyguIWIkvcY9gd1znvcF1pxY5Ow2IIYUgCZtkJ2OhhgSDXuH+AnPzwcLAb+A33/zfXbVxVLX8R8xMuwHSeGHX8cKu44VdR1lr/TnsMl7YddTPcE18DavnbrYD6cxTGuFoNSFaTaaRmk/TSJrf7APw8Ec+vfwIK8hX+uQrfVDi2eWFo3JCtjggWxwQleWntbhwoZpMLEuR2iIKlg1f92J0OH4IzJXMsLyw0yUsjUubjuL6e0B8o1NpV6rHUvDFUDrsMPfNvF8ZaP/VXB2HxI10ZCHlKR03NJe1HLenWXirWy3cnma5rOVSlQXBi8fn9T7lkw5Kj6ezRlE/CLn/nZFohtym1W3qV7IASlu6zXRHdRQx4UKlNyzb5OmZFEsbMeH81tPtKm5oLmo5LkbW60tMAhHhYGlAuGJonWU4349o1zXtuuZ8P6J1liFcMQRLMm8SIpvW4m4P04HWr9mJ8fntHjqEux+T4x+JiLCaBfvOMv2XOh/SFv9Ny3G8sOso/3/Ycbyw63hh1/HCrvMIYeSApHgUxqsAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"ST"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"ST"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"STP"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Sao Tome and Principe"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"圣多美和普林西比"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"239"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH2wkMEi4mNUNgSgAAAjNJREFUaIHtljFoE1EYx389qjYEa7uk2KXQRXDqICiIo0IpRHBKF9NBOjo4CR0EcXAVh1JQuE6KLhpKXXXo6qAgiFJohaQtJYqlBIlah2dNernk7t17l7uT7wePu7x3/PnyO+59b+BWeerALTYRouHMvRxkrnIs6ToyiwMgEqPjHN6IxGg47T9Eoj6Od0Ik6tEhEESiDr4CQSSGpatAEIlh6CkQRGIQgQJBJPZi4N3IuYOwD9dmv1Ir1eOsJ3MM6jx8+skoU8cbFMrVuOrJHKE+4Xa2l8fZWR6Po5ZMoi0Q+idxc0uNtOZBRIHQH4mPX6iR1jwwEAjxS6y8hsqb9OaBZhPxY/uvQNuN5dsevP/cuh85ma68Q4wFgh2JO3W4cRc+bkA+B/sN+PVbrZ2/3po7MwGP7kBhtL953dA6BwYxVq4aSfy+D6Xb8GrNf336Ijy9D8P5ZPL8MNoDvZi+ieE8rD6EpYXOtaUFtabzZ23n+WFNYKFcZczSPnjKZ3/ym0sqrx0rAm3KA1h8pq43Z9UAWHyenrx2jJuIbXmNH/DpC6w8gJlLau7KBZi/p9ZyJ5LN82LURGzLA/iwDvkhmPAcLzdqqmuenUw2z0tkgXHIyyKR9kCR10JboMg7ilYTqZXqvL3WgL2Ix/b/kNAC3WIT93IOdnNx1pM5Qn3CbrGJe/Vn3LVkkkCBIq83PQWKvGC6ChR54fAVKPLC0yFQ5OlxRKDI0+efQJEXDQdEngmOyDPjD5qz9dF9aIxNAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SY"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SY"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SYR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Syria"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"叙利亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"963"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAABOUlEQVRYhWM8J6jGMNQA00A7gBww6mh6gVFH0wuMOppeYNTR9AKjjqYXGJKOZny/YftAu4FkwPj///+BdgPJgJzk8fPP759/flNuN9nmkOPoWWc2zTm9hQyN1DKHHEcvu7h76cXdZGikljksRKr7++9v4/4F33//5GblOP3kOiMDY8O+eV9//eRiZa9zjGdmYqanOSRkxLPPbnkuKHn99QNcRJRbYHtCj7EUaR02ys0hrfT48++vfHfIs09vGRgYpPlEHpSuZiE6jKloDrHJAwIYGRjffP3IyszCwMDw+tsHJkZGkrRTyxzSMuLKK3tl+MQel619VLpGmlds5eV9JGmnmjn/SQGnnlz7++8vhP33399TT66RpJ1a5oyYGnHAAcuaNWsG2g2jYBSMglEwCkbBKBgFo4DaAABDK0H92S3l5QAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TD"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TD"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TCD"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Chad"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"乍得"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"235"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAWUlEQVRYhe3OMQ2AQADAwAcxzFjAC7JY8YIqgocfynK3N+kytnPMeu9run2Ofbpdp8sfma6YrpiumK6YrpiumK6YrpiumK6YrpiumK6YrpiumK6YrpiumK58xfoEUmmC2wAAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TG"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TG"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TGO"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Togo"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"多哥"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"228"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEEAAAAoCAIAAAAubgCAAAAABmJLR0QA/wD/AP+gvaeTAAACI0lEQVRYhWO8JGDCQA3gEijxipOJKkaRCgbGVuqCUT8MDkDYD8w8XOzKcnRwCtmAsB8Eo/2E08Lo4BSyAQtBFXyBLqyiQnRwCtmAgB8Y2dm4DLUYWVlYxIT/vHpLHzeRCgj4gdfRnJGNlYGBgc/L7t2C9XhUPoncxSryi5pOIxqg+IGRnU00L+7/799/P3xmYPjPwMAgGOUDkRLJiIQrY+bjYeLhfjN5yd/PX+jpVlwAxQ//f/76sve4/Io+FhFBBkZGZCl2dUXp/ioI+++nL49TawaJBxgwy6Vv567e0PZ+M2kxw///WDV8WLX9hrb3511Hae82YgGWsvX/7z/PGybfD8r59/0nivifP48SKh6n1/378o1eziMK4Kwfvh45+/8Xah5lZPpy8DTNXUQ6wOkHLktDZn5eBgYGhv//Gf79Z2BgYGRm4nW1opvLiAc4/SAU68/AwPD3w6f7wbl33RJ/P3/NwMAglBBMP6cRDXDUD0xMfJ52389dfRBR9Of1OwYGhlvmoXLz2nhsTZi4OP99+46pQ2a520D1H5gzOaQwRXmcLP59/voooeLfV6hz///6/WH1DgZGRlZ5qR8Xb2BqWaTJ85WVEVOcDoARaz+OkZXl/+8/2DXgkBp0/ThcHsAvNVBgZPSBBj8Y9cPgAIz/zw20EygGwyEeRv0wOMCoHwYHGPXD4AAsjHP8BtoNlILhEA+jfhgcYNQPgwOM+mFwAABzYZpU6OVx3gAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TH"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TH"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"THA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Thailand"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"泰国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"66"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAAgElEQVRoge3awQmAMBAAQU/EKvRnF1YgCrbhx0bs1ZcFxC4S2Nup4BbCBULinZbSJdK3HqA2g+kMphvGY2s9Q1VRSvFaIjOYzmC6uK8n1ZaOZT5TBac70gbTGUxnMJ3BdAbTDdu+tp6hKt+06AymM5guvutOtaXDHwBwBtMZTPcDHJsUvKKWz3cAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TJ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TJ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TJK"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Tajikistan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"塔吉克斯坦"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"992"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAACUklEQVRoge2Yv2tTURTHv+fmvkaTYNr86qCoRTu1olIEwUG6uVScBBdpBCv1L8jqoCDi0OLioOji4OgfEHQsFKTFTglSSxTSGNvYJJi+++5xSG2DBFTIvZGX95kuhwPn++Hd9w48WsZgIfodwDaBsN8JhP1OIOx3AmG/M3DCVF5Y6HcGqxAz25/KbgUgclL2R1sUVlsAQQ5D1dxCFiBn/Dlk/KBuBWlnDFTNLc4DcE4/hYyL5DUAkPHf6haC2BKWcTE83T4ACGVudq1bwPyV1k12KxQ+8cdGbn0iJwNx2Ggcw2tJN1XxrirMsVvZr7G7qdZzaj3H7mZHsaIKt1VxHrppNJHhKy0iYuQK6wY56f2a9/lRKDMLsFd6LMcetovkpEXqOoViEBGjifqwlri5pqtvQCQSMxSZsDzd7BPuum8pMkG7X9qHv+nvLSaFVU0V7xzs2068Boj+ob93mBTu3Ld7aEAArL++BkgkrgL0q9i1v/dYeIf3fHTllVd+SbGzvLNEsSmwx40Vil3gxkpoNCvSNzqbzWFcmH98VIUsdAs0FDqW4/oyhjIidp49l5urUFVEp3TpAVhBhOX4Czo0ZjSPja80t0pQVciEu3pJnnoiEjNq4x70rjx5X2/nVWHWmXwLXYeToqGjpsNYWkvc2tDbef7+TjfWoLZYVQGQTEKOiOgkxS+L+DSFj1tIYknYKz/jxgdx5CJFz0EmyUkAYPcbVJXr7/XOEkXPhEZvWUhCi/lFC2P+Hwhz/Y5gl4H7pxUI+51A2O8Ewn4nEPY7Ayf8Ewzf680b+CLpAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TO"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TO"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TON"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Tonga"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"汤加"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"676"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAABFElEQVRoge3ZMQrCMBiG4b+iLm5CIdAz9CK9QreeIEfpCTr2CN09QxcvIBQLbi461MkhbYSQTwhpv2czVAgvJj9qMk3TJIFdy1LubRt6G152oTcQu73vG4emkfc4GmuqquSQpvCmYuId8FbX8ux7Y+1cFJsLyCMMYkAQA4Kc7kDbwJi//j53VMpYW/tgcQpoGxi/nptb+2DhEQYxIIgBQU53oKoqeQ2Dseb6TWTN95+IY8BM68Xao+sWATOt5ZTn/9lZJHiEQQwIYkCQ968xtsGy9oFh4x3QNli2iEcYlFxEgv8nEjN+AkEMCGJAEAOCGBDEgCAGBDEgiAFBDAhiQBADghgQxIAgBgQxIIgBQQwIYkDQB+yCPiSi9ML1AAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TW"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TW"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TWN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"China Taiwan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"中国台湾"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"886"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAACi0lEQVRoge2YzUsbQRiHn61Sk5TWD2hjYhJFKw3JUVBKcghkYLUVaU5CLh4VCjl6bY8evfgHCJJrTAKtISsImh485VDQ2iBiItYS6JepARvtoWBbqjHRxLXrPqeFd+D9PczszM5KMHOMChzxXI223FKlq4pcWNhobMRobKxlliuhKmGz2XTy7PG04/G0n1q7zlQlHAz2IssOAISwI4QdAFl2EAz21j5dHahKOJXaJRIZRAg7VqsJq9WEEHYikUFSqd16ZawpDfD0ZbkBZrOJ8XEXpdIx6XSelpYmmpoacDpbMRga2d8/JJP5wtzcBn199xkdfcjm5jcKhcOyjV/wqpYeFSNVcizJsoNIZJCZmbc4nS0MD3f9VY/Ht8hkvjIx4SIQWCCR2D63sVrHUkXCAELYcLvbmJ72nloPhZZZX/9MMpmtqLFawmXPFYOhAa/XghB2Ojru0Nx8+8yxQtgZGDDj99tQlCwrK7sUi6WaB74sVW1ax+esBUmSLpPlSig7w8ViCUXJoSg5hLDhcrUxMtJ16tjFxRxra58qXtJqUdEMy7KDWOwJnZ13ice3/qnHYlt0d98jGh06OaevK+d+G5rNJtzuVny+edLpPFNTjwmFlvH7bcCvme3paWZy8g3h8AZer4V0Os/e3ve6h78IFe/SAP39D1haesbIyGvGxh4hSTA7+45odAifb57V1Y8VN/4vbksej4VAYAFFybKzUyCXK5BMZgkEFvB4LPXKWFOquu6Ew+9Plqqi/N6cEolt0ul8bZPViaqE/3wvU6kPZ9auMxe+0B4c/Khljivjxv3xkI5AlX9aanHjZlgX1jq6sNbRhbWOLqx1dGGtowtrHV1Y6+jCWkcX1jo/AeIBu3E3Z6EXAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TZ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TZ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TZA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Tanzania"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"坦桑尼亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"255"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAABzElEQVRYhdWYvUrDUBSAz6039ae0oKvoINpKkYqDi+/gK4iFCKKDQl2KqINDRX0D7Su4+QRdLZQ6OXSyIFWoIsaYpiYOkaP0J23Sm3tvvzW58PFxOHAvmb1dA9Esho3LyeekYgCA2YTclZa71sxm1/8pP7VOhIm9H62rsTcKNgAUiqZ68l55/HY/JVJ6OWycT9UWaAMAPr/szMVH/ka3rN4HxUj7C4wIkP4fuJ8Jboer9ICBEX7SXldEN1IJykOaVeCxUXK8HclsTgQu7XtFtLC6pORPo8k5CoGOBwV7J/a6G60rBIBF4JEQAEBJjwclHURgzRo/eNrL19fZSzOfYCdwQVtRq4cVYxqYj0eggS075HxlJs0hMMJGmk9gZFBpnoGRgaQ5B0Z8SgsJjPiRFhUY8SYtNjDiQVp4YKQvaUkCI72l5QmMuEnLFhjpKi1hYKSDtLSBkVZpmQMjf9LyB0Z+pYciMEKHKDBCynczzlsEq8ANm+Zq6bOXDdMO6gJKHeOhCIxQ+Se4HZJK0PKD58cphUJWjWS3IgoFACjp8XT16F6fZy/YCeLjjKjAiDfplsB8JrgdD9LCAyN9SQtZES70lpYnMOImLVtg5AerZph42Qd8UgAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"UA"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"UA"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"UKR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Ukraine"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"乌克兰"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"380"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAVElEQVRYhe3QQQ2AMADAwA2bSEUHekADPG5Z0lPQdI7zGrs5Vgf8UbRStFK0UrRStFK0UrRStFK0Mp97dcJ3W54uWilaKVopWilaKVopWilaKVp5AQdnAzlWlYgCAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"UG"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"UG"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"UGA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Uganda"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"乌干达"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"256"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAACi0lEQVRoge2YS2sTURiG35lmEpNJXKS1XkBbs2mnCc1WN14QFzGhQeiiC1tcePkDAcnKQm+/IKu6EyyzsK2KCQUXLoRAIStbQqF02q6sKKRkBpOh9XVhDV7W51Sm88BZfMxhzvvAxwznUwAQJwj1uAPIxhf2Or6w1wmMZpTjziAV5WAz4P+WvIwv7HV8Ya+jvDwn9/KgxU4jcrEfAODsWjiwmzKPh7Ih6bYUSqXQPT2Nr66LdvQFgj230Jd+BKdSwZdiEW69LiOGnJaOjozg0uoqovk8duJx3C1s4HXpA76rKqL5PPpqNei5nIwo4oVDqRTOLyxACYfhui6qpolTARW3nzxFVyAAAFDCYVwwTQSHhkTHES/cPTUFJRIBAASDQWxrXbhy7ToMw/hjnxKJoGdmRnQcscJqLAY9m+3U1WoVdsvGfnMfO7s7/+zXMxmo0ajISGKFtUQCiqZ16kajgfWP69j7tAdr28Kbt6+wtrLSea6EQtASCZGRAPz8SgtZ6XSav3N4eMiJiQkOJAc4fn+czx8/5GpvLzcnJzt7hoeHheU5WuJeHovF2G63+Tfzz+apqiofjN/ju8Rl1uJxkmSr1aKu60KFhbZ0s9lEuVzu1I1GA6ZpQgtoGBsbw9UbN6HfySKYTAIAyuUyHMcRGQmA2PZhMpmk4zgkyVKpxOXlZdbrdc7NzdG2bb6fnWVjbY2O49AwDNHtLLalf61cLteRbrfbrNVqLBaLdF2XJGnbNrPZrAxZOcIAaBgGl5aWuLW1xUKhwEqlQsuyuLi4yMHBQVmyVEYzCiGRcDiGM2f7AQCf9yy0vtkyj/dnWp7HF/Y6vrDXkT7TOm6kzbT+F05cS/vCXscX9jo/AAdUDrfPTQARAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"UY"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"UY"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"URY"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Uruguay"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"乌拉圭"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"598"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADxklEQVRYhe3XbWgbdRzA8d/1LpfmwTz0miZt1qWxdqvdWtPVuQfbbe1Ytzr2UB3oRJH5ABNkTATRKqj4QhBfyNheWBQFwW4FW4durMzhBk5Xui3MtDVr2ia7tkmaLOThmuTyv+bOFxltzKoloncG+n153B8+HD/ud4cJggCFVpHUgH/S8miEkAiOvFoaHbo7Gwx4AYCJRa5ePgMALudNj9slKu2vI5a86nQMpOcThl1HZ6eGEpHhVCo50Nf1WteFJW8+0Tvm8SX+S2RuuejBq+frbc0NTXvPf9XsMpUD5wVETzh6a1YDAPA8//NP/S1tT2IYtnCk5yJ9bTgkJjp3PBoam3u7D0UC9pr1e7zD76C5EZ51x+gvtDp9yO88fWr3g9XWbLEkLaI5jgMAhVKzu/M955UXEDOukfmEuJ2YH5elR4oI9eiljuq6nUbzevuvZybHR6QzZ43H0OClaWeP1WLUlZjkVAeJ+rk0sGH3A0o+Ejca8D62yKpVoR8+30hZDhrMtoWDZfpis0EhJhrLXi5T7iG/6xv27vdaZZxB5fGou7oS16gwhysNGKYuhjmkMj38dt1jr4pJvL/F8Zj13UHxqRLKoC/bQBAYINpEFU1Op8MxIZ4QSnWYlio3rnpUjocnhk9PjN3geV4q9L3xQAiN/f5LMjoK6A6kZoHDtSp+3UMykk6zKehoIW/dng/N+FhBjgdkQEZwZYwyVOn0lJRokiRb2g4DgH96xH29i0ixHh9RVcEPObhgmK80KZikmiSRVoUU5m2llk5DWYUk3Ex/mumgf/zyt50mYwUGoBKuhxilHE8IICRYvFielpfskCuocMjnovm1tsOt7c9nTr37meM2zUiDtt8YHLX3Pr79KZVa/9vAnnmiVolN6tVRbwA3UBCMW9moq3bbyTUNTwPA9JRnVWVV5uCWV34UebksvvIamzY1Nm3iOK774/bm1jcUcpxxf8QSW1nwxhCmK6nQNLz5Xc8HL5o2l5ZZFsSSlLsRB859vf2Jrke2HkvG6IRsp9bUihdbVts+9NM3daV1R473n+37UhJodrnfHnsPHMlsadrL1NqeA4EDkrbWts/FP712pfvgs5+8dPR9QRCyN3l9tVZU8v3ojIbjuCSsqVm3KxiYwd0eAKhv2s8kiOx7Fup+a6MY0mzksr9bsVhUoxH7Wf59y6P/hxXkPyK2+eWLUhvyjhB5L/wrFeR4FCSaONRWKbUh71ZeeWK1ghYrzLzvrNSGvCNmgkmpDXlXkONRkGji9WfWSm3Iu5XlIlYraLH6A5uVfX/SP5QFAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"UZ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"UZ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"UZB"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Uzbekistan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"乌兹别克斯坦"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"998"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAACb0lEQVRoge2YS2gTQRjH/zO7yW4eNmlImtTU1I2NJTbWQqgp2kAQDylWUXIU0Zt6U8Te1JsXPfkAPXhXL14UKUjxgQc9VejBBxapTQutl9ImrnnMeogJpd1NUEmybPd3+piZD74f883MsgT3n2ErQevM+W3CiZ2Bw0FveJudaKzxCNaGsa5QF+YIub6///XRkYW8/CL7Y3Y1rwCbnXlC3h8/mJECADoFy3RmNOp2AtjVYZ/OjPpEPToT1Za+l4wd6/UPP3mbzcn187c7xFKZLckFABGXI5uT86WylaOS0/5pZa0pJf8f/OahuNd1Nho692amoS2AhXVrvqzkKkGhzPRpC9WWHu/tAvB0bkkrR+qw8/RPg0dcjtq4VqwrVIS9ohXA8s+CVs7DQ0O3DgwA4Al5nh4+2RcE4LZapsYTA52VM+yYOpLw6vLeUjnDlwalmyPR/kevPldbdAMWSgEUGdsQWylVgCJjPKUUKDDW3Nr/CZUdfjy7+KvMTkWCWjlFxopVmfVxoRqXGNOnLVSFv6/Jl999vDgoJbrctcGATUh1eypxqtvjtwkAOELGdvgcPAfAQkm6x2fjOQAiR9M9Piut98i3C/Wabs98O/Pyw4PU3vN7QhWHiX3hq/Hdldlr8cjEUBgAU5QbiehYrw+AhdI7yVjIIQLw28S7yZjAaX2ttBP1d7hGyGnjCFnMy3JZpy36t/DR+fmGi6QWFNIq+MnVxsJGgiiK0u4aWooeL9KmYgobHVPY6JjCRscUNjqmsNEhcxeutLuGlsKf7ptsdw0thf8qqfyaNjBb7gybwkbHFDY6prDRMYWNjilsdH4D/zGnih+f8J8AAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"WS"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"WS"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"WSM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Samoa"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"美属萨摩亚群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"685"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAACSElEQVRogWNk0K5nIAswMjIyMDD8//+fPO3nni0nTyOFgIlsnVYGspb6MlR0Cn0ACxl62NlYShOtvO3U/jP833bodvf8Yz9//aG6y2gEyInhn7/+TFtxWldNTE9NfNqK00PItwzkxTADA4OECE9R105GRkZxYZ53H79T1000BcR6mImJ8d8/RPl07e7ra3dfY6rxtlPbfOAm1VxHA0Csh0NctU5efvrw2QdcClwtlUPdtawN5fTVxScuOfn5608quZDKgLCHebnZK1NsfBzUXr75uuXgrcnLTiJHNRzsOXGvKN5SS1l0z4l7g9a3DMQUWp+//py/4YKOipiqvNCs1Wex+paBgeH///+bD9w0DZ/FxspMbUdSExCVpCVFecKKV6vKC3NzsX7/+RuXsmkrTlPPYbQCRHn40JmHeGSFBbhEBLhuPnhDJSfRFpDf0oIAXm72ec3+c5v9xIS4qeIgWgMy62E4+Pz158zVZ1iYmV69+0oVB9EaUOphBgaGbYduU24I3QD5SdpUR9pEW4qKTqEPICeGJUV5OdlZYnz1/v///+7j9+8//zx//ZnqLqMRIMfDrCxMi9oDrQ3lGBgYjLWkosvXUttVNATkJOlHzz/mtm3/////////c9u2PXr+kerOoh0gs9Cy0JPxzlrGyMhgqS974cYL6rqJpoBMD89ec/bP338MDAwszJTW5HQGjOcE1QbaDXQFQyx+KAejHh7uYNTDwx2Meni4g1EPD3cw6uHhDkY9PNzBqIeHOxj18HAHox4e7gAAAc6mQsP4s+4AAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"ZM"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"ZM"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ZMB"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Zambia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"赞比亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"260"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAByUlEQVRoge3Vu2oUYRjG8d8es7M5B9mQIKhpJEYLJY14A7GLhZZeihcQrLwIEUFQrMQ2hY1NRBAtXMlCMDGu5uAes2OxNsomGgk6Ozt/mGL4eB7eP98LX2pmRWiASP/vAf41iXDUmNjh8g7CH98xybWY3CVodf+zJzncSZNrsFzmSpHbVSoptoo8L7JR4GKNO1UeNHl8lk6aQpOFGhd2kWFxn208HOXNdMSFW0PdIYMK5zoszVL+yPUcwTCNkIVxzmxzd4vaFyayFJs0D+ikaLXJ5Pg81u2MtDC8mOb1FEsb5Pco5bsy7T0mC6Rwc4S1TcZDDlrUQmbHyODlAY+m2Ay6fal+epYKTS595fwOp/eZH2UmhwxvqzRTpBtU86wOs1qiEfzc0VfCvzL3jeUP5AJKHdbbvC/yrEQ93zsT+ZU+ivUC1TEqdeaz3Jv7fSbyz9JRjNT5hFqWJ6N/lunrG64WeVo8Xqavb/hvGDjhyK70tXLOrbWhnmevgraVcr3nWTDM/RuH90ZWuLSXtljpPV79VKjxrncunOBq+/DegVvpRDjuJMJxJxGOO4lw3EmE404iHHcS4biTCMedRDjuJMJxJxGOOwMn/B153HWSDy/9YQAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"BO"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"BO"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"BOL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Bolivia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"玻利维亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"591"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADsAAAAoCAIAAADPBRXRAAAABmJLR0QA/wD/AP+gvaeTAAAAc0lEQVRYhe3SoQ2AUBDA0P8JCscCLIBlOQbCsg0ShWYAHDOcaC6XtBM80X6tSyvVkA0Ip5hPMZ9iPsV8ivnqift7TNmGWP17sgnB6l2hmE8xn2I+xXyK+cbznrMNsXrbt2xDrHpXKOZTzKeYTzGfYr564h8CwwcuskduaAAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ARE"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"United Arab Emirates"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"阿拉伯联合酋长国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"971"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAAAnElEQVRoge3YwQmAMBQE0R+xH4uzlDRlEZ4820MsYhZMYF4BSxj4l7RRNSqonUdybnrb3w9YnQEhA0IGhAwIGRAyIGRAyICQASEDQgaEWvoz4X6fK7k3u3jAGtm52XnCkAEhA0IGhAwIGRAyIGRAyICQASEDQnt6sPfuZwIaTI4twBOGDAgZEDIgZEDIgJABIQNCBoQMCBkQMiD0AXV8ENxv+JKOAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AQ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AQ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ATA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Antarctica"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"澳大利亚南极地区"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"672"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"CG"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"CG"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"COG"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Congo"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"刚果共和国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"242"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH2QcUAToNzmQzbAAAAOZJREFUaIHlz8kRQUEUQNFjCIVIxEUWIpAdGyJgY6GU6X89vO5/A7hVZ2a/uQradr20Wy2S/S6Ho3myW+JyYM+HU0xwLizigXNiCQbOjSUQuASWIOBSWAKAS2KpDC6NpSK4BpZK4FpYKoBrYikMro2lIDgClkLgKFgKgCNhyQyOhiUjOCKWTOCoWDKAI2NJDI6OJSG4BSyJwK1gSQBuCcuf4Naw/AFuEctIcKtYRoBbxjIQ3DqWAeAesPwI7gXLD+CesHwB94blA7hHLG/AvWJ5Ae4ZyxO4dywP4ClguYOngoX5lLBwAxx0+sFMdsPeAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"FM"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"FM"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"FSM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Micronesia, Federated States of"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"密克罗尼西亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"691"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEwAAAAoCAIAAADbkIswAAAABmJLR0QA/wD/AP+gvaeTAAACvElEQVRoge1ZTU8TQRh+Z3ZmtruhtSzGbQlUggcOeDEkIJgoB/XiH9BwEqPhpgc8+DO4eFS4EY8e/AHEi5CAMRHCwfgFuNuGUlq6bbe7Ox6KxpAYbDu+JrXPaeew7/M+8/m8M+Txyw/Q6aD/OgEMdEV2CrBFZnr1waSOTMqQ+cYzCSnhayGHSYokcrgvJjQaSnnRNiXAu2+GRkmtHn3MVxHYkUTmjoLZCTudEJQQAJidSDlF//mqi8OOtCZLtWBhZXfT9RrNLddbWNktVgMcdtQ1OXBGL1bDxgcmL57IVFx8KdSW17MAcPvSuVRcOCUfh5qg2Tqu0XoY/a75V4F3Tp6QhKYQuo6nc9AV2QzOW7GkoWyv7jXYkKXsmFEmUiPkwWSaEgAAOy641nRkoVG7RwAAJXB/Mq1RZbkp6/tISsvk9y6n7R6+V/SfvXGajeCH0a1Rqz8h3KO6ZfIwkqpy067cedhmiExSvzFi3RyxBCN9Jq9H8unrvbClDN875asXkqm4IARGU+bZHlGqhQ2T1A4UTAlDaIyChGNZBEg70X7+LgEYJSbX2s1PicjtrLe8kVtacyMJm65XDaKZMbu1UDNjdiUIt7JeJGFpzV3eyG7nvPYzVLYmGSVOyV9cdeDHxtOspxGMvtrKuyWfADy6NsBoWzPiVyjzrkOWXqiEhYqa6skyWVxnnw/UlNTKRvJTvqYqFADkvSDvKas2u46nU9AVqRQnjF4Lvq9l4DElYnRuqt/g1OB0bqo/EcOjxrvj2S8HvQZ7cj1DAMp+tF9GuqoDzJEkBPKVeoxRndGDSp0oO+pPB5LIPpPPTw8OW0ajOWwZ89ODlslx2JGma4zTF29zYSTvjqckwOKqo1FicKTRRBK5e3jshzZdT4LcOVRpj04F9qvW+k5JWS38x8AWifOMdQJdx9Mp+C9EfgcO9eKX6Nx+dQAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"MO"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"MO"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"MAC"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"China Macao"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"中国澳门"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"853"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAABmJLR0QA/wD/AP+gvaeTAAAEVklEQVRoge2ZW0xcRRjHf2f37J3LshsWwUXKRYitghApFAotYEjLA2mqJk1MGpu0IcQXjSQaL333gcQXY9TU1BebeIsxqbQm0FbTWEBBSaFgSpfrlkuBZZdlF/ZyfNhmYbuQqj0HEsr/8ZtvZv6/zMw3k3ME3jkp8RhJtd0Gtlq7wDtdu8A7XbvAWyG9OoxeHd6OqbcHuD79HvXp97Zj6q0FFgRozh/jfHkf58v7aM4fQxC20oHCwHajn0b7DEVmNwCSBOduZ+JYMuBYMnDudibS/XdekdlNo30Gu9GvpCVlgYvMHi5U9lJhc0VjSZogde37qWvfT5ImGI1X2FxcqOylyOxR0hKC0m/pRvsMP07YYmJatQjAaij40Fy5pcgKr6/A6wGsxgQEQeDLV87wxcunEQQBqzFhw1ylqrjswIdt87SW3CLL5IuJGzVaLp1q4bWSg5woKufV5w9wsriSS6daMGi0MblZJh+tJbc4bJuX2578wCnaAMczp0gQQzHx6uwC3Cs+3qtpjMber23EveLjUHZBTG6CGOJ45hQp2oDc9hDlHvDKtIXCi1Ush9Qx8VxrGvM+L7W5e6OxPGsaf94dI8cSe25HvAYKL1YRCMt/Z8kO7ApoNoyrBAGTRhcXN2l0CA9cxt6gGm9QHZcrhxQpWkaNlrN1x2gqqyHPmgbAzakJzAZjXK7ZYKR/egKIrHhTWQ1n645hfOBcyyXZVxhAJagYnHWSY7HxRmU9FmMCn9zowLu6EpfrC6wSCkt8daKZ+eUlJtwLDM46UQnKPBFkvYdFlZqOM29TmZWP6v42DYZDdI3fIRgOEwyHyLakkp2SCsD44jzDczNISOhFDaX2bERVZCuHJYnro39T+/mHBMOhTef8zx5lG4kIXM/kKFV71qquqFJTkfU0AIt+H6JqbeUsBhNJGVkk6w1xY6kEge4Jh6ywoMAZfvfyN3SOD2/Ylqw3YNKuFS6TVrchLMCNsWE++Pk7ue3JD9xS3cAfkyN8e7N705xrjkGuOQY3bJMkia/7uuh1jtJS3SC3PWXe0i89+wKvH3iRRf8yGYkpPJGYjD3ZgmfFz0fXL5Oo0yNJEp4VP28ePEKiTs/44hzTHjeT7gWS9QY+/q2d7/t/l9ua/MBmvTF6rxZnZLEv7Un0oobVUBC9qKHxmWI+67qKShA4XXqIHwZ6WA0F0apF/MEA/dOT9DpHgchqu/zLctqTH7iprIaSjD1x8QWfl+6JO7QN9bEcWAUi9/XRgkJK7TmkGExxfXqcI3zaeUVOe8ps6bLMXJ4yWx9pjDHX3KbF71GkyMOjc3wYnSjSUFD0v/r/NPSXIrCgEDDAL44hep2jvFV1lL22jH/VZ2DGSeuvbXhWlPvMo/gXD4ic1bq8fRzJf45UU2JM26zXQ9tQHx3DA9GzraS2BHi9zHoj6UlmAO66XbJX4YdJsS29mVz+5S2HXK/dXy07XbvAO127wDtdjx3wPwSFbzEQOlqHAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"RE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"RE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"REU"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Réunion"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"留尼汪岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"262"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAAWUlEQVRYhe3OMRGAMADAwIIVNiQgCT+4QwMWwEOHsPzvucsytmvMeu9zun32Y7pdp8sfma6YrpiumK6YrpiumK6YrpiumK6YrpiumK6YrpiumK6YrpiumK58Oo0Enzns13kAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PT"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PT"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PRT"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Portugal"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"葡萄牙"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"351"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAEUklEQVRYhe2Yb0yUdRzAP8/dc8dxd3Icd8d/OAG5AxGVhMSpIdkL07CWrmwr25zrrXPai9oyN231oq02V65otLLmlrPWcm2RFKIk/QEJlIAJGHoC8u94eIDjuOd5euFs2SsPn442+bz+Pd/fZ9/f83x/3+8j8BK6oH2oT5x7wRC7rfRjUTpWLErHikXpWPEAS4sQFnWJdE8I878RNaq8PJSB10VqPLZZHINofVh+w/8dgp6S/8bImvk8VpXHkUfZtoqbYzT3s8SK9xpiE1oahhe4sZnIJI5evWXvMJ9DPbSBLYWcbmXPV0ypAFkeKq/j+xRAtnBtH8HDhArIP6ar7B2ifj0OllKRTV7diyidKcMpZk0UYMQxagBP0IXGnDEy4BoyWoqkbTWmk6x4X3/p6DL9wSb86cghQnLjuOeq/XuS2gGa9wFkfQ5wq4TAdpLGJuUR1J1cTGDdWwsn7TRRXkRxMZEIgZPxooRo8YxXLAcc9msCjFcsBczTlz3SqH3KKnQztgJpPWEBs7ZA0rsKCE7Q2IhBpLA/ceknyHuftFdXA2fP9iqKtvJoHiDv3p36zonRLUlhG1lnCL/BzSdY+o2e0lHU6fxU2oe4Ps26tWjqXak7Xdf3Rd1dxUJQ8R0j7zxCM9Pr9HH9mygynefi5y56x0i+SHrSRPsu8s2SHYBX95Qoqnp72bhFat5FMsHAxxguI0s4ihZIWlRJECjN4cerVJ9nf4p800XyzNj+V+pSXZbpkBpRFLfD0hOYPGIbD6RgG5PEL1H8zBYykU7YgFmNubTBQDiMquCyMxshs9fja+jTHkkz2wx2q1lgbnZOsFtNZpMhbSQ1vZaZ/NQZd2fYiWZgeFg33eikwxC20tHHUAh/JnGC3dmB7JdPHK8EWjpHVFUrXe4B5Kffs3cQKbAN5mO8QZyRlHw900xUH2LnDZxLON7CgVoCnkRAaGqaCwaBN2suHa1pASKSJDQ0AJrf4VxF5gWSEohc0dOYqHoPt4VnyujoYYeflGyv0tN7adtk5IeGxPU7ne4lq30ub6LQ/frWtqJuQTYNP+dd/lTX6GqCySScwtmlp3QU17gg8HUVVjsNfQQmxD2da0cyGpd1kPmTV6msRFGM9fX9m6735JI1sTnnUMOfnXPFD9PyK2V6l7zouryVboqyUGXirGqbS93YXl74WV98MBjf2hrf1hYnSUntgjH3cSnv8og8MTzLwADi72R+q7N01A3TgWKq1lB/hQQX7jhrTu9j2efClgEJmM1w3FprtrlrxamZ8RBx5fTXsvWw/tPRfIaAl0t4dgOnf+HdJmYEgNc28HwbvrcBZAeDBzFuZ/QjSv8nrelttueytxyXjQvddA1SnkPJEKZWtAIMZZgGsFbjrdVb9g73NW7t8LFxGb407BqWEMlTKH9gOkfGmf92YL4P6X8gwnQNpogOoe4FfTISIXbGPND/PWLMonSsWJSOFYvSseIvoBiCfiQXHQAAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SA"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SA"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SAU"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Saudi Arabia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"沙特阿拉伯"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"966"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAFNElEQVRYhe3XeVATVxwH8M1uQm4gkHAlgXBEArEgR4ISFA8UYbQV6oEodmyn0EO0thW1lukx1c7Qyky1ttXqVJlacdoKDJV6FJValNMjRgjSAAkQEkJgc2yyOTb0D2c6/snGmo4z+f61M/ve28/85rfv7RKAHRLgeQv4fwO8iR/tq/jRvoof7as8l2girtHBVCYAADYnSoKIZCIJdTvtLsfs7GwQleF0uwShkf26ESGHz6TQtSYDmx5sc6FWh82ImAgAAQIhCARtTpRKIkMgRA+gECFoHDYEUuhmFHmGaMyD5SctyhNJukb6kiIETAqtbfDuud7LWyUFLsytmhrLiVuAOO0b0vIeTgxl8EUZ0SK9Zbr83KFUrjBLMN+MIodbz9LJlK83VFFJ5GGjtr73ysLY+TdV9y713Z47A1978FhhOfGpabzEd5aVuD1YSpRQHBkXGcjOihEzybQpK1yzrvLWkHzKCjcrbv41dO94e0MYI0QaI76i7EyJSgihBa5IlCj1asyDJUUIYLvl5QXLkyPiROECXAwIkHLnPro0Iz82lGtBEW4w50znRVG4oEfTHxEU+mhSo5hQnSqtbrh/I5UrXCnKYtECC8WyHk1/VBAHcdplsSkOt6t3VKk1GWC7hUIip/NFF+5fH4P1ozN6EkS8NSyfOwNfpXOF6QbrTFHqUgAA6rZ9crm/I47Nre+9ojUZ7o8P7m8+1qXuY5Bp2+o+Ukyofr13rXWge2/T0XRe4s5fDgMA8GhSE8/mfbtpn82Jnu25VCErFnKiO0YUfFY4Lga+ni754QCTTKMHUDUzOggEDdaZN3KKb6rurhRlFYplabxEFo256ljlrqUl1x71nN9+MIOfVPnzF5nRyWXSAp3FaEaReDZvy5nqvERpKlc4OzubwOGppyeiWRG4GPgqLY0Rn9j8gWJCFcZklUkL67cfDGeGHMh/lUmmHblxfsZmbpL/mR2bMo2Ya16qhEDo5O0mM4q09LW/nr3OgtqsDhuHGbxMmJGftFAzozvSdn4Bbx5IAGkBFFwMfJVWT0+sP7Xvy6JdSr26daB77QuL6QHU2ms/IU476nZwGKw7Y8rjJfs5DBYBIPTphqpXv9Yx/MCNYSfaG95avL7lYbsLc1982D5kHN+zokxnNmIez+cvvm1zorgY+Crt9mDbF65N54uMiKkip9jqsLswt1w7uFVScH3nd2e6LqbzRAqtil+95oH27wAiaXBS0yhvg0Dwx+5LvaPKBA7PjCLlsqJdS0t0ZqPVYb8zqjQiJqvD9qzQVBK5IDk7ns1rG7yzLiW3W923JD7teHtDZe6md5eX1vxR58awlSLpKKxvrqi9OtCZWfNKXVfL3bGBjhFFODMkNjSKQaY1ytuWz8skQcQtktXjpsmqpqOnO39zYi5caBztQSAQtkoKdl+oba6oZZLpMSGq9xu/Wp20aAqBP275/puNe68OdBafrILt1s0ZqwrFsjh2VCg9KJoV0a8bvvXeqdLTH47DhtbKY3sajzTK2wAA+GzNm1qTYceSjeX1h3ChCT74R6SQAkgg0eKwAQBAgoguzP3vrcSwmFFYj7en8b2I3gV1OVHA+fj6STEAAAOTai8WfC6/8vxoX8WP9lV8jV6SkPb0i3i/5VXllZXLimC71ePxmFDrHGcJQiI7RhQ2JzpuMnz6+0nvHv1UhwubEcwN4hBBaO5Taot3m1EEAsGC5GxW1QrYbvHiub44EZ9MbGjUY2hmdPJVZad3i/ga/Z/Ev3v4Kn60r+JH+yp+tK/yD9/3M1F47QCgAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SB"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SB"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SLB"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Solomon Islands"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"所罗门群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"677"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAEW0lEQVRogeXaW0xTdxzA8d//XOi9WGy7crHOohi0yMAOlsjcBosxOkLIYrJL5nQXsz1sOOfCwy7Zw/awW8IGyTaXxcuLDy6ERCUby0i2DMZQdJ2ogSHRWlEBhSJlxZ6es4efaeuhPS2HtpTu+3YOp/3/P5z/OT0lEKjvgMxt6xrnB4+1VhRcCu5hREcoWarcpu8emIzzHauKDaeHPD4/n7A5Jqi5VEwMfm6zZWuZMX5ww1Mr2vtUBztHEjDHBBWN6rye1dylvwfWKmmWoQBg5+N5dqvGoGUBgOcFzwwX8U2z1QxFEQB4wm4w6di23jEA8HP8tC+QPIl0FBGe3/D7/k0n15vdoh91X1Z+1a3vcysAgOA1vLFQd+gN+9p8DUsTABAEcN/yvX148FjXzYjvvmPTA1+8WFSwXEkIAIA/IAxc8+5q7u+7dCepqojFScVI8KbF0KStsXS7wwQAV8d95ft7xqf8EsMY9eyZzx9ZYVQCwInTY/WfOLmAkGBKrOZFxULXMBcQBABBAI4XGJpIawFgfMrP0MQfEBiKCAAp1sqgYiEwQ5PVueqKxl7X2L8/f7ixzKY7Oyy1Pstt+rEp/0P7eqwm1ZE31zM0SY1ZNhULLWlzNktR1I2JWQBgaLImV33R7Q0eV1mUzfNwasgT3FNcoPnn+gwiLQYFz/OjnhiLYoEtkIqFznD4dLmAEK4FgFdq8nkQwsHhB+CvKXklhIqJP4dFbV5n0ChpP8fXVZoA4FjXTZYhXh//24UJGfOWUQKpGJF+tMwzKI6/W7ZhpZahCQBwAeHvK3dqP/5rJMmnFJJAxWKAsdbG0vpKMwC09ow+/alTxjDzKklULMaSxhyF+pHbswDgWK2XPVI8JZWKRQBnMdRdLvRlwG7V/jnoeeHLfgA40mC3W7X9ruloB8suBVRMvKRLVmrrHjZ/9MNwcI9aQc/MBqJtvr/D1tY7eu7KNMgtZVRMfIZfqsmvKl4WDg7nzd2sqzAZtMy+g4Myxk4xFbsHrinJeXVL/qSXe6bKolMx375WnK1mOvsnDnSIp4Lt2VJQbTdMznDlNn1hrkqtoJdpmO86rv1y7nY8oy4KFQst6b211s92FuHHDwAc6hzZ8/UFf5SnRZYmB15ft6s6Dze5gPDO4cGmE66Y4y0iFQst6abjrgeNqoZaKwCcGpra3XJe4mX+gLC75bzdqsX7dku7K6Z20anYfdfwNofxj4FJ5+XpZx+1KFlK+g83SpYqylN/85O7dJVuu8P0VvTLOE2oWAicm6P48eytvd8P8IJw0e2tLslpPzMu8conS5e/d3So+eRVipCml9daDFk3Ju6KjkkrKhbXk5aM0pCKxfWkNa/SloolEpzmVCwx4CVBxRYKXkJUTD54yVExOeAlSsXmB17SVCxecAZQsdjgjKFiUuAMo2KRwRlJxcTgDKZiIXDGUzEG/jdUjJH+B4Ffh1WLMq3kRTinWbQrU6nYfTetzFvAc/sPlYy5cwij4jwAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SI"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SI"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SVN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Slovenia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"斯洛文尼亚"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"386"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAACVUlEQVRogWP8//8/w0gCTAPtAHqDUQ8PdzDq4eEOWMjQ8/nH7wevvz5485WBgUFBhFtRlIeHgxxzBgSQ4NBvH7/M3nN9wfnXlx5/cFC4uu++FgMDg5PitQMPtPXlBBIMxFJcNbn4uGnmVOoARuLr4YcXb0XXrj4qoMDAwMDC9PfPP2ZkhvWHB8taw+R0VWnmVOoAEmKYX0KI/88PCPvPP2ZlwZcMDAx334tDRAR+f+cXF6a6+6gOSPGwqDD/359w7r0PYiiy/3/xiQhSzV00AySU0oxMjNxszHCuh660u640nMvNxszIxEhNp9EGkFa6crOzMDAwqErwivJyVPvr/P/P8Pn775efftx5+ZmLbWgU1CxhUw4Tr5rvxx8OfuaV2bZKojz8XKwMDAxbix3vvf5i2bjjy48/JBk1UIBl9alHxKtO/P6jJ9LIUB6RV/m5WA3lBXsijc51nCLJqIECpLW0GBn/M/77w8DA8PT9t19//v388+/Z++8MDAyMf4ZMH5O0jLdDWJ179srev+Efv/1mYmJkYGD49+8/Hxfro7nLt4uq08aFVAakefgZO9+753dZbzxqy3V78PoLIyODnDB3xaSdbz79eCHBSyMnUhcwM+gHkaThCq+E8ek9R1/+dLbR4mBlbpuw6ceO3QukTRgYhkCdxMDAwMgQu4QMbW5vb2v/fsfAwHCFVXC3sBq1XUVDQKaHhy4Ycf3hUQ8PdzDq4eEOWPxeXRtoN9AVML6VURloN9AVjLgkPerh4Q5GPTzcwaiHhzsY9fBwB6MeHu5gxHkYAByCrTpIIOiuAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SK"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SK"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SVK"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Slovakia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"斯洛伐克"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"421"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADb0lEQVRYhe2YW0hUQRiA/5lzW7Xc2rNeKktts6gsNaPS8CELesmIqEQiCnwIooyoHixKu98wqKAbQRERUVlW0MXoxTIJIbtKWGGWpeVtV3d195w9Z3o4tuq24bjs2RD2e/r/mX9mvx0OZ/5dRAiB4Qb+3wL+EJIOFiHpYBGSDhYh6WDBUtY5Nm2Vyu4NGMKYmz8PANw1r4nd0X+GmT418uGdABn6gFaaWG3eQ6oacbIEmUXrzDmDFwcUammH/e9BpeErw3Okw+pdPPDgAw675mjFoEUrshKyJdmTGgo2KB8/qY0/wOkitk5mRjKOEtm0FOfZC8TRDQAgS9V1rSfLavWSvl3ZMGhRmkVcIPdJC2vycGyMJ428f0sLnOcvagGR5Babk2Zn/6B6PHgOg+z2pPLjJ0rtB7Xhq7A+H8fF9ezag6Kjucy54OlyFYXDSA9dDSppjsGk30l37yjWAn5ZDjEa5afPAUAqLetbQIiAdWzT6aRZDO7ekx5x9RISePVbI3G6mPRZ2BgZfngf4jkUG8vEj7fNX6iV8UTVS3kI0pKkxchgYNNT1fgJ4HIhkwnxHJeVCSyLo6OIo++lwYP7H5sFACrpbqcbBKE33r1XqfukfYeIkkN4clJXzgoAAIZhk6d5lthV2pepH1Bd47+sPTgmWouVd7WeUx+Aorhfv9VCZDQ2OZQAGfqASrq+2Y4TE+g3ZSyJ9c1d/gnRQCVd/vI7syjba/D5yISkKx1ji15eN6V4TXGLsh9UNwZG0BdUT57VLlWOnjTbbH4gi2diMsbJnQVNz/Itq+xIAIDt8TmJrvY7puQ34WOWt79d11HzM3NBzZNq/aRRxNLLNHVpFvHCxLbMcrcLsQBgUGUn5jyznhQBuZnYfG18xo2KL/oIA9D30zWf215MyVgc1tu+9Tfun6YQq2F1bulTvS5wDbQyq5CyVDDwOw/krd1b/h6P8lkQozjKts07fepRW4u+rSlqj0saQrVoUk+cyDteVQmi11SSYistSDcfLFY+1wfU0AdD+7lF2trx5s13C1JKLPZwtbcbYYi6ydRaUThH3F8UBGMY6kn/WYSE1bkNC5cUnqtqldCRtamz6l85T5/3fenogF/S2kqjMWzLRmQWew4eU380BVZrkI/2W/o/Miz/QghJB4uQdLAISQeLYSn9G60DNUZG8yA8AAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SM"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SM"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SMR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"San Marino"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"圣马力诺"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"378"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADUAAAAoCAYAAABerrI1AAAABmJLR0QA/wD/AP+gvaeTAAAFYElEQVRoge2Y+29b5R3GP8fnEvv4Fie2EydOyKVNO0q7kjJ1pYoGTBpjqmAqWiWEtvHbQFO3rjCQJk1CQhX8wlS2/YDERRUg0LhoGyAqWFtNHaVrV5IlaVNonMRpYifxPfaxfXx8OfwRPg4E5fkDvs/z0fO+Ot/3CKZpmnzLZPu6A7RCW1CbRVtQzahcLGyU1cZA5dKrnHn9N+RS8Y2w2xgod3sAOfwATm9gI+w2BurSRyfRp5/i80/+uhF2CK36+F6+eI5zH/yJRnGVtWSeobCPuViW7oAXwR7knvuPs//OH7bCunVNffzWMZxkuOvwCe469BjJZIwD9zzC3Q+eQG2kOf3msVZZI7VqsNO3k9Wlz7h54Sj1ep2gX0RcfZWba6dIpst09h1olXXrmvrBoWOkC3DmSoFs0UZ0uUIiL3D28yKpvMnYT37bKuvW3SmA1184Smb2Q1RFxNEmoBsm5WqDwQNHOfTQ71pla21Ts3Oz/PrJxwB49smfMn7pfWLrVebWGlxfFZhdMVnMVDj7wUme/f39ABz51YP85eUXrIxhTVNfzn7B/OI8r7z7EoOhQYYceVI3PsZuF8gV6zgkmfWKC5eUp1Kv0e6U0A2T4Mh9TGUhmprn5ON/pmjo3L5n9JsB9YfnniIRGSdTU3G6XPSVLtLvkZitD9LQU/jufZ5SPIraO0ju9HEEh58BIsQ1E3HHQ0xNjePNR9HDO3jnxX80DdX08bt85RKYArGcRl00CAV7UMQqWVsP8o6HqfruxRMIU1qcoU1tp+z9EdLwz8iZPci2Knq5TM1lsKjbGe7b3jQQWABlVA2ml/+PUwzSYe8ifXMZr0MkL3ZhD/ThCY+giDakwAAetwdnZzf+2w5SsofxqTbiNyM4DBdqrUF1+Trv/PPtrx9q3947CLv7SOpJJmbG6e3tRRJAUDxkp86TjUyizVxALa6yPP5vcotfkJk6j6k4Abh91z4y5STVsIeoCrn1bNNQ0i9Px5oaMPf3E7hq60geGUUM8f7kPEdCoFBG9XXQcDqwebsQ43PUHO04HXbaPR70tE6pCm988hmKKNEVElmcK3Pu+wf5tMlMTTcV2HsI2ZEjnyrR1ibgcNpIaDbclXlsikIilQJBoFAoYFdVjFqNSqWKW18gqYn4B3ai1DUKMQ2vT0Z2uJuN1DyUM/wd1lJORM8ApUQGZ34OQ/ETkFLYGjoDt9yCllxieGSEQjaG1+PFLkOHlMCQ3XSlJ7DJbZRMBV0dRRCb39yaniDKCq7QEHJhgrWVGlrJYLKxn470v9ASp0gGhwh0d7BSreBzOMnIRYzLH7JOgxlzG8XiEtv29XDt4gLtg3uaBgKLNorO0SNoZRVnqAPfcDfllWlmND/2ehqXZBAe9hLu8dGQGwT9NZRahpmCj0pBo5IvMzu5xtDhZ/DvGrMijjVQaiCM97YHUEN7cIlBbLpGMmsjaj+Ae3maaxdmkBWRRjqHMX6BG9XtJIsilVSZ720P4O7eRiF62YooAAi/+GjZsoV28tQfaSQnCI4eZq+/hkAH+WQUM/VfGkIRam3gv5P27mHy63Gu3rhGKR9j16NvIakuq2JYCwWgxyPIgX564lf4+cGdRCIRlpaWUBSF/v5+FhYWGBsb47X/XGUlvB8tMkH7rda+rSyFMqJX2afm+fH+vSTiS0xPT2OaJotGGw4tRk7qZMQjIAgCu3fvxh/q5b0z55mu+HDvsg5M/O7Dx5+2apjN0wm6hl6H/8XyLAodJAyB6+OfItz3BJGzf0Pv3Eba3c9STkcz6sQqEvWBUQSbda8gy4/fN0Fbv503i7agNou2oDaLtqA2i76VUF8Bf1wyOPi/BcgAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SV"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SV"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SLV"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"El Salvador"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"萨尔瓦多"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"503"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAEcAAAAoCAIAAAAjcHDHAAAABmJLR0QA/wD/AP+gvaeTAAACL0lEQVRoge2YS2sTURiG3zMzSSeXdtpoDEXwErRZNFiqRPGyCG1R0a4U3PoTBLeuhELpoosKrizUhUWIi3RRXClBa73VW6wtBWlNlaZJ05ikmUySyZkZ/4QfZcI8P+A83wOHcw6HKVeSaDuE/R6ABKfKPjhV9sGpsg9OlX1wquxDe1axuddb+z3D/4dZlkVrsDiaG2isQfBCjsCsQY4AjNRJvAN5AdoXGCqUa+v5QxC7AQYtjVaeVEtZxQuoLekIwTcIJuW2CxA7Dem44ToGSwffpTPTVZkwKrlGZOxBcubpm0r+g0dLN9XM+NTzh4lZbgWgLgBUm5+syiiBuaafTA1E49miZBZzkeDFWvbd36oSPjAwMXMfHWHoWSI5WVV95e3K++29ntTC1/6eeUs5Wa7v+ALnTxx8+ejZ6k7FyBQ08BKRnKzKGxOkkFtEUxBZ8Ju1EftRmki8uuPtM7WW3CFLgiBCcBPJJaJ1of+J9CqyXzsc/vl4a2SaXxIMtlfX62bX6NmPKvcEA0chUZ3vZFWuUKe8tln7fcQVv+np7/K7XyyuXh86lcmWS41aufxL5suQLxDJKW/hako1g7fG7g6fGREgDkVvzH+e5S39+2Y6cW9SNErwxYjMlFWWDnWxyrsn55KfltMoDrLepavnLt+OD/vZOpRRMJHITP1islBNwXu6qFot3S1KzaBfR2sX3iiltF1ft86PtG1wquyDU2UfnCr74FTZB6fKPrRn1T9uuNPKS2z1vwAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"SZ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"SZ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"SWZ"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Swaziland"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"斯威士兰"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"268"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TC"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TC"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TCA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Turks and Caicos Islands"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"特克斯和凯科斯群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAGaUlEQVRoge2YeVATVxjAv7dHrk2ABAQUlcsg3ooHWlGkHbQOrQcatBbrVULFo9UZwFZxegxTQKe2Wm0b2lGpWlSUAWWwtioMXmVQ0aIoiNUqKgIBEhJy7W7/iENtIriClkN+f+2+fe97+5v35tvvLaqY94F77HLR6OEAUK3Wbf7xzI69hY16E7SAYvqQA1vnFfca2twysrokYvX+g7lXWxoiFvFWRAauHuNg+GGX5kQBNWaEW+xyx+jjLfV/qWAAUPbmgvKwhdr8c71kVHLc1Fun1sRFBYlFvPZHF4t48cpJN74OVV44/ChiGWuxyI+myXP3Orwe1P7gbQNTjQ53O7KPdHetUChfoLZVtTRx4rK8tGZV34xUKjCgWq2LT+mY5QUALFlV4LU088s+wbLDafba98/GJsWGSh2F3CNKHYVJsaE3UyYvy0urWbIKEwqaVSurNNEJ2X2DNqeknn55Sq2DAYDJTKvSi+TKbHttCcWPV066k7+Wi7ZVtTRxYniW6kFkjL2qT8gWVXqRyUz/L2pPB8GAhCfveSS+eM6o9dP6MTv31B85To0d6R4XIwmeAABanXHH3sLrt2p2Js22SVpL1mX6+7gs9mQ1W1N1hZckwRPcY5dTgQEAUFml+fzbvF2HLnWsZzNIsSrdvpXAsSnjvcNHOLOnCnQXLvN9vZxmThMO9gMAk5nmkbiNsP72vYZfMo03bwsH+znNmMqXewOAuqEp49jVvPN/WWjGfopWsvpLBbEs24ZhNsJtmVi+sQ2j2g+65DKkQyYe5RTeIfNiHTJrB/LKCRMd/QKtMWyg22crx2Lw7PTOAL5xW2FJ2aNn9iTalnLan7SAQ9JycxbP7P0RXX8eYwlEmG2e1tZhjBmTOVtwHMDhte0uUZyEQxfttm8VU7z5YUPffsNfJCABQH/lWt3+bEPZLcnkQP6sMMd+7jb9tTqjhOIDgOF6ufrAkaYrpYKBvqLZYcerID2npFHX4lGEC3othT/0x93umCqnSobuBQCjCe7fFrBmzKjF6x4wlMzowTnzEr+frXjyXuoojFcGxbw7ziqgzT/3MGWHruiybG4Y+eHyhF/var8q2LdFYRMlekO2RMzfuHKKh7+8z8a1uj8uPtz0XfX0dwLGjZqyOmrXHZSsOl3X0NQ2YRJwPgh0lcN4xkC69iLuXMqacZLGb1bwjHW83vImRzGPNnH9uP6btKyF4Z38tfHKSRKKr80/Vx62sCIimu/VV3Zod6JsglyZrUovemoVYaEZVXqRT8iW6ITsyioNFRjgm5EqP5qGCQUPImPCs1SliROftyZvBjEEhiGByQ8hIVs7CgC0GqRrIBrrCZ0e6tRkbRVhMDzlrVoU5qj6zNrQWpO/cG2cFjHAAABgEszsCADObhYPP723rxknYdBwveegJqGY6+cGi1dOunF8tb2qW9ae7Z4hQ1bkPG+5b9X2n7p13abfqtU6e+0rn46Pi+J0HjZbaEAY0esu9C9mqess3QB9TuoNQDOAEDi5G40WxsnVgBMshhEmE6eXxJJiQ3vJqMeqc6Nwidg1PXW7Z4hfdHZK6ulWfn20TqPelKwq8AnZYq9ds2RV9MVMLkG0OiPCxQCABDqiXzHj8Q1NlZ1a0D8tojcAWIyIosCgIxHOIsJB02jkJPyfDZz5c7J8uveKY+1RfRKrdt+gzTabnLVYuAy/dbcO+N7WaySqF7pfu1FMmOuxC2oTo0VCqWWAvwHn0QgA+N4Vf6u5xLQ9HnY2ao7KpNVrmm93FLuQuVKGZfiK+sXy2setLNS4bHWbUc0lYKeutAAg55J3ZN/H11oa+0kqqlbQLAEWXKqg1RTOAgAglH3RC4CTcGevpbcfrEKyt6zXJ5pERsCEiMER+4jB8w0iaztynvV9RiXHgJ1duPDKvfO1SwERAHDKSJlZIFmWj1gAOGmkAAAQcabqvQsl9zkG7OzCAKD4uMLgGgcANwwkybI1JEkAAkBXTXwAaHL9ZN76cu7RuoBwZZVmTpIf6xod6aAhCFQLxENE+hDmRVQ94xozK9Hr/iMt92idPUs3EzbF7+AGDf/emkbaAgBigt/ksU3xBS83/zmWF7rEClvJySsb8b65RJAlkU6WSIP/5GWOWKp9XlvoQitsBSE0P2woC7A/p6Rtvx+7mHD76TJb+kXRI9zd6RHu7vQId3d6hLs7r5zwPyIJAWuZ0jjuAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TK"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TK"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TKL"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Tokelau"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"托克劳群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"690"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAIAAADmAupWAAAABmJLR0QA/wD/AP+gvaeTAAAFUUlEQVRogeVaW1ATVxg+Z7PZbBJCIjYWAeVqgXYqUMAZbdVxKmgLrdoOI4N1HEFbw9BaO6OOUjt0itaHVkFbpLFD7YPWqtQWggQeAEFrFWtQCigWUKRcqpBwy22TbB+cYdgQYM9uiDr9Hv/9b1/+/5zz79lAELYP/J+APekEPA00whj2zP9ACAQIoSBbtWzmUkEChtEJUe2BykFkQ5Z6ySvCb5Zm7tm29IeD68QkjhrGjSAJ2/aka035x8SE7f5DOao5W8Ka6jtGMwUhyC2oMZltqGHcAjFh273u9051/uH0ioLy+JL6Fzg4QajVl4V1V3SdYYGz2zr1HCLxAYQgbWljblr14x5uuOf7TXk8N1cIhM9pmwAA//QNc4vEGXFhPXmbtUsiusYkB4tfpWmO3p7kapwWQUrDka3a5Ni744X6EfL81QjOPp9SwgRu3550LTulzltscXpU9VcwZed+OrqBsBAXJL4WWlbTyt8VAABCsHH5rdy06oDZQy4VGjp8+fjnS3hBoM+Zo+sD/RWZn2lOlzXy9Bbh/+hweuWq6LYpdNp7FXxCOBOODFXSNLjd/pCl/d37Ax1derEI/6WymU8eUhG1/72qzNXXccwxtabBSPIJxCD8fmrchrcW0gCcKm1Un65n6SJjz68joxQhxKyUnVsSi8O71CrNS/NY/cp2HgsYOA0e5Rdb4xcGxC8MKEdZkPpBM2Wzj5ooDuG9SGteRkVd7gmWbB+bcAg0BkaFrZSjqPgGBLTF6olZKmVJc356he+sESSryTYzlmAQ7ns0kpWj4eOOJZTexkObKzcs47LJhc4d4BPa0+cwhtEfvlGfk1ojlzgfsCyxaEE3nwQ8Sth31sj3qtI3Y//m4yQmuFdM2ExWjpl77oV+4/JbLUcKeLIFABC4PSGqnbO5Jwh7kVa1SvPjR79xbmMnJDGnayTMOOG4sJ4bXx3fslLnRp8pS5qlIi6nIJhpwltW6mq/OBHGb1+dCIXUnMZphwczR1gqok7uOK9WaUhiRo707HcviYRcBjsB8Fnu9mxCnteXZf+UGM19a5kWcqmlu192vc0P1dD9Fd6acKMxrzA2tMftnp2wb32tBH0lo1V4jo90ipmZJGz5GdrPUy8KBdO88bgFMtJqtAjrWuYjWSFUeK5S9m1O8mRPo4L6dF+rVav+RArPEzmpFxeHd02vNw6sCGMYPLR3deOFrLWJkVeLP4iOZNw5QAgyXtfV7T8R7tePFJs/cMxRlFWCdESxIuxw0J8c0FKUDQJ44FhtQ0vv2KN5zw1d+PTU8UwNz7c2zgj368/LqGCvz3YNK2SkwpvcsV8b86LvFd0DAACG0bvWXjm782yEv6cL64RXQnotFH7pNqvFDLl9Lg1SGr5TlfGZad0LhwNuOrrmZO3L02oin8M45vg4+eqZneeeeGHHA0KwZtGd7gGZrmPu1JpohGOCe0v2/rxpxU0C98TBgwQMgrfjW0N8DZea5xutwsnUEFra32d497rLBO5ioJNJrC5vGzGMlkvMLr2JCRspdD11yiUWDHPxKUUosE+2NUpJaiyxIZOosiGk6YFy2CgyjJJFVdHjNdm+RgfPMex65zJ09UXHYhPoH3q7tBocJWkAJ8pNFtxscxGapoFh1PUt7KiFsFKCiXK7Aw6ZRC5N7v2r6B8WOwnZEvaRmdbEtYqYNfGWWASuSvGUoH9YvK0wqfiPyPFCjrv0ZJjYjQqJGTIbY5YXo8khBApm22OQlksnShiXBwJIezOvE3CBw4tkSCi7oFAb262XMdTYUmGHQaNzd+lHJrRon3tjouGZ/5MKKv4DMnHIDVjFuPQAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TM"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TM"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TKM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Turkmenistan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"土库曼斯坦"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"993"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TN"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TN"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TUN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Tunisia"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"突尼斯"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"216"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADU0lEQVRYhe2XW0gUURjH/2fuq667pkiW2ZYgWW0pFdRLRRciizIqKCmCohtB9VCUIV0o7SGIeguKKIMyuhhaW0EFXSQiaMM0DSpNkiWydN2VnZmd2dPDyNpDQXmWMWn/b3O+c87/x8z55vsOCSATw03cUAMMRklou5SEtktJaLuUhLZLQgL3IrKkrF4ur1giFnlJhgsA7Q5G/Y1a7R31eh3V9IQZJaqMK6uWOU8c5j15v4yabZ9Cew+rN+oT4pUIaJ5PP3k0ZecW6ynWE9TvPTI7AwD43Bxp0TzO7bJCfafOhPYcgmkyGibgeKSfrkrZsQlA7MvX8MHjkQs1VB84CUSSHBvL0o7s57KzUndvIxzXu+sAoyPrm1ZKS9y11QCM5tbukjVmx+c4qGPTOj7fA8B836bW+hzrVwuFBaC0e/k6rf7+kEETRc5qec578mJd377NWGi2dwDgR+e46y+LxV6qakSR45ONplYuN4dzu8y2T12Fs1jykumXJ5eWWJkXKj9mERNFzvDViMVeAGrNTb3hRXyyMHkCDfcB4MeNlZctZvFlglZKSwDEeoJq9VVrJGX7RmHKpP6wYQQ37KChMExTf/Q06n/D546iqhZfOGgxJaI4rQiA/vBJPPOUspU/TzA/tH+fvdT8HOA9Y0Y0+ADQSIQosjBtKosvEzQ3MhuA2dYxsF1hAdV0/cFj9XqdVncPQPR1E3Gmua+cJZIEgKSmAuBHjWTyZVkMQn4xqKo02EvDfVTTmDb/vZig+yvIuIEqaLx9R1zpStlK97Xz6acqAQjeiUQQetZuto6QlYvWwqGBNvyNAKT5s61PDyBysebnCXy+J7PBl/2lxVlVYTS/A0BSFADGq0YWXyZo9ZYPAOd2ObZusEYi5y4Zjc39YYcjo7aaONMgitLCuWKxN9YZIIoSXzhosVVEUcxqeiYU5P9VcTGaW7umzmHpQNgSMRoN7zsCgMvKzLh9mc/LBWB2Br7PXNS7fY/R1EI1nWp69KU/dKASPMe5XaA0VH6UsWdKQJfnrKpILd+NP2iYAIQrT4Yrqhgdh2Vr+t9eAuJ7yZK8Yom8eIE4vYgf7wFgfmyPvvRrdx9qt+78i9ctOzUsb+NJaLuUhLZLSWi7lIS2Sz8AG/Bv03Y9GQIAAAAASUVORK5CYII="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TR"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TR"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TUR"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Turkey"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"土耳其"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"90"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADPUlEQVRYhe2XWUhUURjHv3OXubPcGfd9yYeIyGUqqGhITcrEJKW0ElEssSCLIB9aHrQHrQdLe1EIIhqCQF+yBykqkaEgCCGQxBYIy30Zx5xd5y49TN3cmHudGSeN+T2d795z/vw495xzOWhYGQObDexfC3hDUDpQBKUDRVA6UASlAwXhxRgqJ0t54hiVqcPCQoEgeIuV+T7k6Hph73jKTRv9rrgStKbfOKlND73bSOn2rfqWt1otza3mllZgGD/prc4apJWlJWFtzUhOCU+cr3vsHZ0L73s50yySy/HkREVBHrl9m6mmlpsxrY8wgHRpZUlRuP4+IOQu2YlJ05kL82/freyJaTT0pXOWe228w+lP00VIksaTEmJ6DZha7S7ZoZGpI0Xs8KiHIdThg/PdBr8orkTS6RHSUCcY8wsuY3G5Z2MAmO82EAnxAEBq0xFJ+mi5DHFpPC5WWVwolDb9E9fAZynRnMMBALKM1JDGOq/9VkVcWl6QB9jfbrYHeonRnGkWEAAAXVNN5WRhkRGqqorQpgYk83Xixc9p2a4Moc1OTUucZjeYQgEEARgW2f4IKeS8i5nKzucXXN6YLkJcGo+JFtrsyJjEXDw6Sl54VHnyOLV/DwAgWgUAc9fqXf0DXnkuQcJG/HPMrQmkpjGNGtGqxUvLX4gnsmPjQhtPjJeYy3wbtLS0GnMLf9beAADe7gCOC2msJ9N2eCe6GHHphb5+oY1HR5HadOnpnMPJO5zAccZTleNbd85dv6mqLPN9I4r/XPC42LivH4SvbHv4ePbyVSnRWEQ4N2NSVZTiKcnmhiYfRZco1ZK05x681YpvSZJp09ylLCPV+bKbnZgUCUYIo2neZgeEnJ1dwHF+0XUjaZeYb93hLJbfBUFEtOvxpATPQ6jcHHZqGgBcfR95l69n3DIkSbPDo6ayamBZd4knxkcbnlOZutUTNRr1lYvzPW/85rgC8eXhhhn8wQwOyfMOIYIAAIymVeWnZXt3A8I4s5m32TGaJrVp9PmzdFW5+XYzb7Otn/T/fgkQoLIPKPJzqUwdnpKM0SpmeJT59MX5qsf+rGsjXrc2CJvyNh6UDhRB6UARlA4UQelA8QuLfBF6eP1vwAAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TT"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TT"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TTO"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Trinidad and Tobago"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"特立尼达和多巴哥"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"TV"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"TV"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"TUV"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Tuvalu"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"图瓦卢"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"688"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"US"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"US"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"USA"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"United States"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"美国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">2</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"VA"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"VA"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"VAT"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Holy See (Vatican City State)"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"梵蒂冈"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"379"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAIAAAADnC86AAAABmJLR0QA/wD/AP+gvaeTAAAC+ElEQVRYhe2WzU/TcBzGu7b0vWUbY1sL2BAQibzFdzC+XAwnE6+GGIkvf4JH9WDixYPhwNHEaHxLCIZ4AWMAo3ECYZFg2Ia8bAgbG4yubN3adV3rgWQeRDTQYWL2nJ8nnzzf30u+FiME7F68sesouAfsnlQCl8Al8N8q6B+RM+I/ACcSUUVRdzDAxaAOPr+VWh+PLnjc/Mmj565u6zG/sZyR8sIogwJgeioTn9R1fZ/A/smXbHM3aWNJ9rSSRzPSxrY2c0a9Hpmu5Fo/vLmHQDmIagTE4VwuR5KKJoeWF73Rb0PVh87XtVyKxWIsy25FzGkcD456Rvuq6jrcTTfkPCaISnJjMbIwomhIUsFrWi7TlHWo/wEEQYWIOY25pitzo2+DUz0sf+Jwx7UVFMFpt5rLMgSYEuZXg4nNjTlnBeV0OgsRcxrP+GazWpm9vttW3Q7oeQxMMBRiyfgIyoGg5TCQpDODscAL/9gjk8Ecx0mShNNOCwh/HHyoQTaCcTP22hX/68CXAZTg9LySRY85+VOFiMWsDSQSiYTDYavVquUUKa1UlsFZ4XEmtYrV36ZJZPVrb9uF+whuNR9ckCAI85+Hl17dzbnrL955BkEwSZK/2sx/x5o4Fpu4qUqoDDT6fH4Mw7a1mXOr19ZiQMprAEZac80MdFU2XcJiOM1xgiB4x9/XHWyUswaBwwhkUFbWTHDA04NAehkCKZlkQ+cTeMlAjsQol4uvrg7M98ftVaGlpQor7qhgCmATRq3IEpSeoF3tsPW4mpqD4ihRW6vKsqO1NT49jdBnEqLI87wB4in55wdiAhjDKRh3ExRJU4QaRgi7g21rw3E8DwDNXV2YppVvboqiaLfbGYYppMwZNXbg+trsUwsIgbazqWDI/3056vXmdT1RVQWlo6skgRuMmFjjbDkA4Lci5j+nLU329tZ0droaGn5nKNYGYnGBKFO2g6EoYMMwgL6B9CfPfoNVWVbfTQLJnXauYp3xH/Xf7dUlcAlcAu+ffgB0tjdKwY5AwAAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"VC"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"VC"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"VCT"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Saint Vincent and the Grenadines"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"圣文森特"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAACaklEQVRYhe2Yz0/TYBjHn7cQGmw3BiyyiazJargQopdFuTgS1IMn/wMPJF41hpDs4vAEAz1DwvAf0fjjghD1bhjuMKLt0lpgP+hMt74e6rpOt2S4p73Q7+nNkyfP95NvuqdvR+DpLvSs+sMHvTefS4Nf7vfezLgE4ap8aK/kQ3slH9or+dBeyYf2Shce+lN1pGZ2GFgzmc9nI4hGmNBPjma2FOHf+qYqPC7MIBqhQb8uhferoRfFuE7bZp6ZAy/l+H419KYUxvJCg34uTQOAbLBZJeasZ9Up2WABYEWaxvLCgX5bHt+rhKzzuizaYeuUWZdF67xXCb0rj6PY4UCnf7RSlAz2VTPsHTVmxfyn7TtO2AjQ78tjHyujzsqaLOqU0SmTkURnfbc6+qEy1r8jAnSD/j2EACW0c3O90048rxBGLATV24Gfzkoq+o0hdABoKnLorCd5bSGo9u+I80w/i+bsszCkL4YL24qQVWKL4aOrQ3qrbfIAxQ4Hej6g2WEvRfINIGuyuCpfMwksT+StepLXkryGYoe2p62wrZizSkwyWMlgd9RW2FgxAyK0FfZSJF+nTKa5mzOS2ACyPJFHjBkABrEGAUBm8uvscHlLEezdLBnstjL16HIhwZ0gGmFemBLcqQlkoxh3FjeKIqUkwZ0iGiHfpw9qXNHxCgQA2WBzvzhcF2ToG5dKd9s38b2gcn24hOuC/+WSjrZtifSVXLfO/xY+9C3+xH7t3QmqN1F/gpZc+UZcab4g01H8mAF35dma44/nAxoBOscfuzHfFWgASEUOSbebXt9yCxrlNtdNF/5/D8/kQ3ul31D8yf0pVPUeAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"VE"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"VE"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"VEN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Venezuela"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"委内瑞拉"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"58"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAAD/ElEQVRYhe2XXUxbVRzAzz339vaDFboWpBQYFNrpxkcM7dwcaiM6osuiETZEtuxhakxM/Ig+aGI0YszefEAwM7q9mM1sbNG5zBnBBVGGpq5MPuZCobaln3S2tLS9vb3ce48PEKZsuvVCelnS38vNSe7//H/53/859xwMXQZ3HcSK8dRsWSiqwglyR/WIKEJ3wg1pisEm7IoLzmKZYq+cu2j3b2iuo7UqVkS5/wJbbA+eB+fHZf0nCyU+HBgLlNoQxTKvtMxRHLxPx4ktuZKlSnf15Y1O4y0sazZJx4OhvhTYvjU64pfq8tdjpeHiIxDHMZII8xzE+UQKRQP8wgLx6bDSE5VwvLiGt2Cp0j6KDEXRt5zuFPXcJJ8Iu7306C8pafTyDNlqSomreDMEAIDjgYxnS9TExanKtx7bfFBb/t3A1aBbgha+MlcwCAEME1vz3xAAAByCYhX/2zXefG/++UvhZNInwVGBDP7qkjmDqfVmDJbbY4u8qEKvGXb/wQavGEpoeVpKEmx7iUZBbwBgUlzFm1laiB3NjuA8lcelcZm0VBKYnWcVQHoPQbdY1p0xWJbGIXh9/wRL59fq5poapQ/W05GI8uBep1Yjrt6twf559uBYMDSocMc36TV+87a4XIbEE/s/sH0HWsV2yBgMGN5d2xl3PVTdP+S4MWw09F+aXtsUOFBbVj8LhBAhBCHcbTF+9uHT+5+63+WLVm9Sn+xq69hTO+kMOzxziy8gtAYtt/JoKozjH7U6PXPHTtsSKUZbpCzIl/cNTWMYdqbnWRlJJCimslR1aF9DVdnGjjdOrz7dGlS6fU/dOy9bdjaUf9Dz4+Sff0EIOrsHIIYVKGVn+6/5Q/Evvv4dAXT2SEeNscjuilydCoksXWssHrfPVpVv/GHYgRCwO8ODVpc3OB9LpGNx2hucH7S6AAC7GquvRyjf7Pwnx61V5epQOLmapMIX4gttphfbTE5ftP213s16jd0Zvk0mDDNWqO2u8KmutspS1ee9tqO9NmGpobAwAIA3ENtWX9q0Xf/EI4bbGgMAEEJ2V/hJi7Fph95cp/MEYoJTC2wPCKFaJT/aa3N4Il+eG7/zwGl3hE6znT2D6TQbuJ4QtpkIbI/3X3308JGfmAVOShJpJrPbDUkSDMNKSeLtlx7u7B4QkD3jSkMIP35v95vP73ymucY24ZvxZ/yVOY5/oL7swrEDrc1bC9V53//syLTeGfc0z/Mnzo1RKXbGH7WO+TINX8Q65nX7YhTNnvhmlOczvs8J+bkkk4zadLihpkRA7DKd3QMjE/4thiIBsdjjFYdWk1sUsCuFNWI7ZIzwfVpEctLZIiedLXLS2SInnS1y0tnirpT+G4ABnr6a1fV1AAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"VN"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"VN"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"VNM"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Vietnam"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"越南"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"84"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAACQElEQVRYhe2YMW/TQBTH/+ezTRKncdIkUp2CikQQO2JAUKQyUsEEEixIFCSkDoiNkYGhnwAWlg5lACYGJKaqK1+AoQjhVoIWSFM1uImS2OdjKCqhooHa74wq+Ted5ed3P1l3753N3p88hsOG9r8FopBKJ0UqnRSpdFKoks6d6+XOdhUl1xXlLd7yINF5m1GRXJV09kwXYIqSK1keZt3X8lLLh+YJX0V+JdLFGW/PgBYl0tbF7p4BLfTS+nigV8TPcVXoNUE+Bb104Wp7yCUJLNp52nCE87TBiyEkpGAIgRAyYJAwjgdMl7uRMmD+ig4GpktogAbGJRjElrZ+t+qv8+SkAfCyOLrQMOtR6kP/g/HpZlU0oxgjzvIQTb46Pbb5xEZ4kMdCbD62V6fHIhsjzpve5cgpf3y+wSt/33Big3+eqfaWjZgzEmzE3rLhTjnem9zwsO+vLHfKiW8Mquoh++zL/XLrpbVfQOuF9fXBqOzTNHbKkpc93Y9wKwJk0twedtIw6z63D7Rhh0Embd/YHjzViZYWegPJGezr21RzkUkPdr72Yta9UPt4vtZezP4KuEbWGmmktUJoTAQApMC3h6NrsxXZZbLL1mYrjUelnUJuTARagWaF0EiX7nhgO+3GaT3/rYZsPcuvXHJEk4OhdJvmpEojPXK5017KuJM13/3Dp5Dv6u5krb2UGbnSIZmO3yvbcXNokAHbmCtB7h8j4b22pGC9d+awsH+DoI0nT/rfIylS6aRIpZMilU6KQyn9A5iqtMb8MymrAAAAAElFTkSuQmCC"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"VU"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"VU"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"VUT"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Vanuatu"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"瓦努阿图共和国"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"678"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"ZA"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"ZA"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ZAF"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"South Africa"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"南非"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"27"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADYUlEQVRYhdWZW0hTcRzHf//9d87ZxaWmlk5tVuawbBJFF++UBVGWaD6UWBGFIJgSBREi0eUhivDFBytEiijoJSqii4qGFVFpSnhBw1tY2kCn29ymO6eHU0O3eXZ0Z2fz83T+23+HD999z+8PG4JLOeBCqiaxNu9sQng0uzS3vNPfuGbX6113+gUM6VrXV4cN+prPr0w2a8baJCyREGs0qsN59KTB1tMtvqIr7qUBgGaY94Ndz7o+7YzVRqlCEUkq0jJkm5MtbV9pk1FkSycWlGYZNU7c/9aoIKgdsVqEEBEdo8rJ9XvkWJ65YZZBHDtmafvr3raGH+1pmo1hihWBEDnuLTd9Nyv7LTLufc4tj45RHcix6//Y+nrFEZ0LrjpBFEWMqamZZkOwjZFwbHVuOUUpM3fLdH6IHF8ulCMEW4OMRyP0fCIfNU7Utr6dF7noLcf9v+ksHSEnUYh0domRk6QiLYPSJlravjBmsxjS7f322jfWuNV4kwZ7FbmIsxwDgNkKT1psnUP2LB2hlHkbuQiDBTuuOofsD5ts2hicEO1d5L5vOZ67mJpmHjUtg8jdHysRwai6RFmQTrLLAYvsdF98w0Swx9sRGJ9Lzb2SXUhiKQDQU5PW7i4BdVm4zsLje6iqYkVoEAIAhoG7o5Hn++Om7JjjIyy6yLi6/PIt6nWCac6Hy0CowSKoMAB30g4K0snqEmVEMAIAGlDVSFTFgGaaFt6GJ56/awDoHLLX1f+PHGCXaqqQX+Q+gpc0eDHLfQFfaRbXWZ4frm81Bg3bKB/5ucVvvfQGXg8iiwTBhSOyymNyBYUAwMZIKgdjb4+oZ0R/IvlKx6txbbkyPUnKLtuMQSd74ztMSp+JceFZ2ingQBh5HqSXHLCKkt/af+rMtn0ILaKBPOF7jC+qwdnrk+/llWpCVgmmOR/30kIFPG6w1n/4KaAui7O0NyPCKeA7jzsv3vw4brD6VlodJqkpVR7cTrDLJQc8MmYqrmh+0TgguC7LP+llEfA8aaEa7OuAHSChRsTzxoHiiqZfY2L8hICYlyvZq8AP2IEUAr7Brki9mcFlV1sePO3xvaQz0pQOnYX2fNI6/aHhl4AdSD0aywny+t6ispRDEj812BUp99uB0GBXFpT2+4jgwL10YAbs4C/Ljlzh5yfO9QAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"ZW"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"ZW"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"ZWE"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Zimbabwe"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"津巴布韦"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"263"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAABmJLR0QA/wD/AP+gvaeTAAAFPklEQVRoge2aa2hTZxjHf+fkJM2ttmmtrdhLyhQmlg101gsT8cKUbTqmE1vrZpUNhayMjd1Ah2NDnDD2xTk2GeZUtw/O6Qc7GAibOIdtdcqEhHlBt9KWWWvtNenJpefdh9DY2oTGaWuT5vfpQN6T87x/nv/7vOc5r+R2u8XbO98kb0MI+xMyaR4MSQghPB4Pm6oq6XBeIX+FAtLjDit5kAHKyspoqG/kuZzN3DgYJOwTjzuupEESQgxTS1VV0pZOnBECAqQtnTgxBQTw+/24XC5O/3mYZdsVzPbxDi05iCvgIKqqsvcTF9/u9rNk7niFlTyMKiBELL25qpLK5R7e3wpS2tJREqoSZWVlnKtv5EpXNWtqoKNrrMNKHhIus1bA7XbzylY3i7dYOXtpDKNKIhIWsOX5ZwlcvkR1dTUn6s5T80UZ+w7B6AtAahN3DexuOYXecxFzYRUZA3aa5s5EcZZSdPoicK9Kt/56hC+XmcgxT86FMaaA3bevIHlWEwz0Y8udTdfxmWg/HEeSoPC3yyiFxdGxqqry6Vs17LXCfLMyrsFPBGJauLu5DslUwNRsGcvAVfzaSSBi187P9wwbW11dzclzDezJc/J1d4DJ5uiYAhbPe49g6YHo+lbwokxfbuS67+SPhP9tHTZ+zpw51Dc0cvuljbze5qNTnzwyxi0iuTPm0dbjoKNbJygEJbtMaKWA0On8bDciHBo23mq14na7ee2rg2zoGuCCFh7r2CcEkhBCBM7Xo11qJNTaTLi5mXBrEwNttxDbfTjnGqODgwH4uzaIckbHIBmQ8/IwFEzHWOREmVGEsbgUy4pVXL1zl02VFaxuucH2rIyUfpWWhBBCO19P245X0Ts7hv1o/lBh+lMKvn6BzXJPhpYzIfq/01Hua3tZlq4k/5sjSBnmaJU+WltLrkFKfL+UZESrsAgF6dj1Lr3HvgMhEEDmPhP2aRK+fkGWXcY4pMh2tujcOhDE3ARy5hSm7T+EZemKEQ9QVRWXy4Xf7x+vOY0rI7YxWv1Zbtdso9fSwaw9JkJhsFkkev2Crj4dWQa7WSbLLhEMQPPvTkpcP6E4cuM+xOv1UlFRgcfjGfMJjTcjnGVetITCXy6Qs6UQnxaxrhYUkWISAptZwmaRuNuj06vpOObf5Mb1E48j9glBzKXJJ/xYS+5gyZDo6Nbp8QkMMigGaO/S6fHpCAGyDFrYSunTVXEfoKoq5eXlKZl9ADFfHYxGI62dFrKn9HHr7gCOTBlfv8BggEAIuvoE2XYJLSAwTp2PKcM64j/uLyJTldQsIzEFNNvysPpzyC3yEwgJdB2m2GV0XWAygkGGQBAGdImwaWSX1ev1RrcxnpKslN7GxE2L4HUNAIMsIUlgMoJRkVAMYDVH1kVZEiiORcPuU1WVtYsXsrP9H3ak+B4Q4mSgCATQrgfo7NXxaTqOzIjOBhlMxogk2ZkSvl4jBcURAQct23T0e47lWXHIqS5dhJgCBq/9Rc7sdQzMegNHdk7MGwN/NBC+eAplvWmYZT/Kt6V81g0ldj9QiMQ+fAiBWls7qdtZsWecgHhDG6o/vzzYUA0+4vAmPv8rZbxeL1WbKqhc7uFQHUhS/6OOK2l44M2ZqqqsW1PO/nc8fLAt/Ykz4QwctGz7TZVztZCbPZZhJQ8JZaDH42HxogU8ma1Stz8t3lBGFVBVVdavXZC2bBzSh4sekvTxtodkhIVVVWXJqoVoy66RvzIt3mhEM3DQsicuHKZksxHFllYuEdKHzB8Sg9Pp/Hjj1nVkvNBOzjOGtHgPyH+QZEW57T2hZgAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"AO"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"AO"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"AGO"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Angola"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"安哥拉"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"244"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAIAAAAt2Q6oAAAABmJLR0QA/wD/AP+gvaeTAAADYUlEQVRYhe2XW2gUVxjHvzNnLnudzZpkduNdtClUDLaaqhg1DxJ9EIWmoKDYB6ERpBUUofZCAwWDEEgrBhX0QSImIuIt+OINtWiqJqixKyWmoSbNxsRL0uxm5+w5c04fVgquK8jOZE1hf08D3+H7/nPO/zvzDeoIlsL/Del9C8iGvOhckRedK/Kic0VedK4YR9EIi6LNZmA1nXUgpq+gDmaWHcyVBp4kQjVm6lkwiLUpnDiUucZd6EymNBCAANItiyTSZlrqFK4vowVrk6RLpkN2jxeN08DkKWMgYKxTBgC5iIe/SgRWUgBIPMR/bvWDsJV8vDytV1K98pWP2TOp70fvsyYVAJACCNuT7Lg95AJRsjNR+DnxLbFcpdxXTr2fsESnzE0Uv6toMyzfp8xTZllxlPwLZ13F4Z1mw+jpfrdgCPs59nNB0dNGNxtGqWj0Z4+g4F3ACjfYaknn7cFGkNmFOQFOwOzCbAT9F7Jeon+uqQDw4qRmp4TDorFXAAIlZD3eqD/epCthK21BrE0GACXM7VRxWPTkb8ewj/fXeWlUov1Sf503re1oVAKA0NZEoMrJz032yBjincapxoD89h6rWKCQiBF7YGxY48qhtLeDELxoLyYR4+zBAp8HZVyzaZ2LRIyvv/DYKeSkPYSAllYTABbNVw79pIeLMySvqlABoLc/3evvE92Hfj0RJBGj+0phyy+BeR++NtuUGNLofYNEjMtNQTtVsr/hM0KS0HTGpAxWLlWnleDSmdilSfcesVT0yB597gfy9Tt039GxP3om0manCBdLjbX+sU7jRkvw8B49qKPa7V4SMW6fmqSpme3+7jjm6c+qtOMNganhV0c3MMS31Y6u3jLs1lDlIqXhO//fAzw6yE0iktTu7GH3pVNIElw9Flw8X7GYOH2RnL+aHHzOAWBKSAoGkCqjHVu8fQPWuUtmcyvpfmLXGM6IBgBNRRcOF1QsVN4Mnb1Edu2N7fvBP3s6vtlBd9bFRuO2voiONaJlwciomBzCu+vjv92ny8tVZsHu+tiRk4nyMuVQc6K51Rx8zl0qavjef+8R643a0j0uVK/SqldlmIrmzMD13/iit4oyRic0X653D90p/vijLP9QHb6n35H231m4SOod4D19E++2zpMnT54Jxb+ZjTR+Gap9tgAAAABJRU5ErkJggg=="</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"KZ"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"KZ"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"KAZ"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Kazakstan"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"哈萨克斯坦"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"7"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"PN"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"PN"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"PCN"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Pitcairn"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"皮特凯恩群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"64"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"VG"</span><span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token property">"mark"</span><span class="token operator">:</span><span class="token string">"VG"</span><span class="token punctuation">,</span>        <span class="token property">"Alpha3Code"</span><span class="token operator">:</span><span class="token string">"VGB"</span><span class="token punctuation">,</span>        <span class="token property">"en"</span><span class="token operator">:</span><span class="token string">"Virgin Islands, British"</span><span class="token punctuation">,</span>        <span class="token property">"zh-CN"</span><span class="token operator">:</span><span class="token string">"英属维尔京群岛"</span><span class="token punctuation">,</span>        <span class="token property">"TelephoneCode"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"flag"</span><span class="token operator">:</span><span class="token string">"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"</span><span class="token punctuation">,</span>        <span class="token property">"Order"</span><span class="token operator">:</span><span class="token number">999</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020团建</title>
      <link href="/2020/08/22/2020%E5%9B%A2%E5%BB%BA/"/>
      <url>/2020/08/22/2020%E5%9B%A2%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>团建嘛，那就是玩咯！峨眉山，天下名山，真滴是壮观美丽！虽是四川人，但长这么大还是第一次看见峨眉山，给我的第一感觉就是不愧是天下名山，太美太壮观。</p><p>团队贴图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/%E5%A4%A7%E9%97%A8%E5%8F%A3.png" alt="大门口"></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/%E9%87%91%E9%A1%B6.png" alt="金顶"></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/%E4%B8%87%E5%B9%B4%E5%AF%BA.png" alt="万年寺"></p><h3 id="走向金顶"><a href="#走向金顶" class="headerlink" title="走向金顶"></a>走向金顶</h3><p>大概是 2 点左右，到达了半山腰的酒店。下车映入眼帘的就是一片雾气连带着蒙蒙的小雨，真宛如仙境，真滴很引人入胜！把行李寄存在酒店，各自收拾着自己的行装，准备向着我们今天的目的金顶出发。山上的温度确实比山下的温度低了些许，各自都穿上携带的外套。我觉得我很机智，带的羽绒服非常适合这个天气，嘿嘿！收拾完毕出发！</p><p>沿途贴图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG5.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG6.jpeg" alt></p><p>运气非常好，走在去往金顶的路上还愚见一位大师兄：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG7.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG8.jpeg" alt></p><p>大圣爷一出现，马上就成为了万众举目的明星了，男男女女老老少少都拿出自己手机疯狂拍照。大圣爷好像也非常给面子，就在围栏上给我们拍，我们是少见多怪，我感觉大圣爷是已经习以为常了，😃。看完了大师兄继续向前走了，来来往往的行人是真滴多，疫情的原因给我们国人那个憋得呀，现在我们情况好不少了，出来走走转转的国人还是非常多滴。跟随着向上，准备乘坐索道而上。本半上就是雾蒙蒙的在乘坐索道冲突雾气看的太阳时，整个乘坐索道人们都：哇，感叹此时此刻的美！</p><h3 id="金顶风光"><a href="#金顶风光" class="headerlink" title="金顶风光"></a>金顶风光</h3><p>封着我们大家的一声“哇”，我们也顺利的抵达了金顶。我靠大自然就是这么神奇，半山腰雾气蒙蒙，小雨绵绵的而金顶确实一片阳光明媚，天气非常的事宜，导游说我们的运气真的不要太好，嘿嘿，我也是这个觉得。</p><p>金顶贴图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG9.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG10.jpeg" alt></p><p>不过到达金顶后最让我感触的就是背行客贴图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG11.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG12.jpeg" alt></p><p>猜猜他们背的沙石有多重？200 斤！！！200 斤啊！！！就从山下这么一步一步的背上来！！！有游客问他们：你们这一趟多少钱，20！！！也有游客大哥试着去背，却无法背起！！！我深感他们付出和收入不太成正比，可能是我个人的觉得吧。不过靠自己双手，靠自己劳动获取收入的人们是非常值得人尊敬！！！内心当中感叹了下生活的不易，生活嘛还是的慢慢去体验，酸甜苦辣是生活给我们的味道需要自己细细去体会！</p><p>继续向前，四方十面普贤像，映入眼球：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG14.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG13.jpeg" alt></p><p>也祝愿诸君看见菩萨像，能够得到菩萨的保佑！在菩萨像前，我们拍了一个团队照就开始自由活动了。最吸引地方就是舍身崖，听说这个舍身崖还是有故事的，不过吸引我的不是舍身崖的故事而是这里的风景真的太美太美了！！！</p><p>舍身崖贴图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG15.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG16.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG17.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG18.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG19.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG20.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG21.jpeg" alt></p><p>在舍身崖拍了很多的照片和视频，站在这里恍惚间感觉自己伸手就能摸到☁️，那种感觉真滴很美好。以后我肯定还会再次来这里，再次体验这样的感觉。诸君如果也有游行的机会，非常推荐峨眉山金顶的舍身崖观看风景，最好带上一个照相机，那么拍的风景图就更加有感觉了！！！整个在金顶我在舍身崖呆的时间最长，在欣赏完舍身崖的风景后，也陆续去拜菩萨，金顶之行也完结。我们开始准备下山了，下山有二个选择：做索道，走路下山。而我们 90 后大军选择走路下山。</p><h3 id="下山"><a href="#下山" class="headerlink" title="下山"></a>下山</h3><p>下山的路刚开始还是挺好走的，不过越往下走天气又回到了刚上山的时候了，而且走着走着我的腿都不自然的发抖，我去丢人拉…不过我感觉不是很少走这么长的路的原因，而且是下山的路全是台阶，还有那种看起来就很抖的路，走起来确实比平地走有难度一些，贴图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG22.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG24.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG25.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG26.jpeg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG27.jpeg" alt></p><p>说实话我们走路还是走得挺欢快的，小音箱一拿，蓝牙一打开，歌一放一路走走唱唱还是挺惬意！大概走了有 1 个半小时，终于是走下山了，说实话真理强，不止我一个走的腿发抖，另外也有伙伴走的腿发抖，而且下山的路天气还不是那么的多，不过还好路上走起来气氛还是不错。回到酒店，洗了一个澡，晚餐就开始了。吃晚餐时我才发现，团队的人是真滴厉害，我们自己带了二瓶白酒，之后陆陆续续又拿了 4 5 拼白酒，说来惭愧，我喝白酒不行…不过我飞哥和超哥是真滴强，感觉一个可以顶几个那种，真滴猛呀，嘿嘿，下次啤酒就到我来表演了！</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/%E6%99%9A%E9%A4%90.png" alt></p><h3 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h3><p>吃完晚饭还有一个狼人杀游戏，不过我因为和了白酒胃不舒服早早就回房间休息了，飞哥又喝麻了我们就没去参加，也是可惜啦！</p><p>狼人杀贴图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/WechatIMG28.jpeg" alt></p><p>第一天行程圆满完成，玩的很舒服，下次还有机会我一定还会再来玩，不！肯定要来！第二天行程没有拍照片，确实是第一天消耗了太多的精力，导致第二天有些萎靡。不过总体上来说，这次出来玩还是非常舒服，美中不足的就是没有打打牌，这个有点可惜了（我不是老赌哥，打牌嘛都是认识的人那就娱乐，我每年过年都要打打，非常放松非常的快乐，😝）</p><p>万年寺，终章，希望来年还有机会与诸君同游，结！</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/%E4%B8%87%E5%B9%B4%E5%AF%BA.png" alt="万年寺"></p>]]></content>
      
      
      <categories>
          
          <category> 2020团建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2020团建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-模型过滤</title>
      <link href="/2020/08/01/Laravel-%E6%A8%A1%E5%9E%8B%E8%BF%87%E6%BB%A4/"/>
      <url>/2020/08/01/Laravel-%E6%A8%A1%E5%9E%8B%E8%BF%87%E6%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>在一个项目当中，列表数据的搜索往往是比较常见的一种功能，也是一个难处理的功能，反正我觉得特别难处理。一个列表搜索可能就会写很多，也可以越加越多，特别难复用之后代码越来越多的冗余。我在的处理比较笨，那就在一个服务层里面写上所有可能用到的搜索条件，以下是代码的展示（请勿嘲笑）：</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>          <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">searchService</span><span class="token punctuation">(</span>object <span class="token variable">$query</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$page</span>  <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'page'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$limit</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'limit'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token variable">$query</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$mobile</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'mobile'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$query</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                <span class="token string">'mobile'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$mobile</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$inviteMobile</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'invite_mobile'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$query</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                <span class="token string">'id'</span> <span class="token operator">=</span><span class="token operator">></span> User<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                    <span class="token string">'mobile'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$inviteMobile</span>                <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">id</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$address</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'address'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$query</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                <span class="token string">'address'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$address</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$erhAddress</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'eth_address'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$query</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                <span class="token string">'eth_address'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$erhAddress</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$googleKey</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'google_key'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$query</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                <span class="token string">'google_key'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$googleKey</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$googleStatus</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'google_status'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$query</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                <span class="token string">'google_status'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$googleStatus</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$nickname</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'nickname'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$query</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                <span class="token string">'nickname'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$nickname</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$identity</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'user_identity'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$query</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                <span class="token string">'user_identity'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$identity</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$inviteCode</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'invite_code'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$query</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                <span class="token string">'invite_code'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$inviteCode</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$status</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'status'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$query</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                <span class="token string">'status'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$status</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$time</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'created_at'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$time</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span><span class="token variable">$time</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$time</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token function">ApiExceptionError</span><span class="token punctuation">(</span><span class="token string">'日期错误'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$endTime</span> <span class="token operator">=</span> <span class="token variable">$time</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'00:00:00'</span> <span class="token operator">?</span> <span class="token string">'23:59:59'</span> <span class="token punctuation">:</span> <span class="token variable">$time</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$query</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">whereDate</span><span class="token punctuation">(</span><span class="token string">'created_at'</span><span class="token punctuation">,</span><span class="token string">'>='</span><span class="token punctuation">,</span><span class="token variable">$time</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token operator">-</span><span class="token operator">></span><span class="token function">whereDate</span><span class="token punctuation">(</span><span class="token string">'created_at'</span><span class="token punctuation">,</span><span class="token string">'&lt;='</span><span class="token punctuation">,</span><span class="token variable">$time</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token operator">-</span><span class="token operator">></span><span class="token function">whereTime</span><span class="token punctuation">(</span><span class="token string">'created_at'</span><span class="token punctuation">,</span><span class="token string">'>='</span><span class="token punctuation">,</span><span class="token variable">$time</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token operator">-</span><span class="token operator">></span><span class="token function">whereTime</span><span class="token punctuation">(</span><span class="token string">'created_at'</span><span class="token punctuation">,</span><span class="token string">'&lt;='</span><span class="token punctuation">,</span><span class="token variable">$endTime</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 此次省略 N 个        <span class="token keyword">return</span> <span class="token variable">$query</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">paginate</span><span class="token punctuation">(</span><span class="token variable">$limit</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'*'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'page'</span><span class="token punctuation">,</span> <span class="token variable">$page</span><span class="token punctuation">)</span>            <span class="token operator">-</span><span class="token operator">></span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Eloquentfilter"><a href="#Eloquentfilter" class="headerlink" title="Eloquentfilter"></a>Eloquentfilter</h3><p><a href="https://packagist.org/packages/tucker-eric/eloquentfilter" target="_blank" rel="noopener">Eloquentfilter</a> 一种有说服力的过滤 Laravel 模型及其关系的方法的扩展包，能很好的帮助我们处理好条件搜索的各种问题，而且也可能很好做到的复用。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><pre class="line-numbers language-bash"><code class="language-bash">composer require tucker-eric/eloquentfilter<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>config/app.php</code> 配置文件中注册服务提供者:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token string">'providers'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>    EloquentFilter\ServiceProvider::class,<span class="token punctuation">]</span>,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>使用 publish 命令将包配置文件复制到本地配置文件:</p><pre class="line-numbers language-bash"><code class="language-bash">php artisan vendor:publish --provider<span class="token operator">=</span><span class="token string">"EloquentFilter\ServiceProvider"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>发布配置文件后，会在 config 目录当中看见生成的配置文件 <code>config/eloquentfilter.php</code></p><pre class="line-numbers language-PHP"><code class="language-PHP"># 设置模型的命令空间，如果要改到自己模型目录当中可以这样'namespace' => "App\\ModelFilters\\",# 修改到 Models 目录下'namespace' => "App\\Models\Filters\\",<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h4><p>扩展已经提供了生成模板的命令，执行命令后会自动生成对应的 Filter。</p><pre class="line-numbers language-bash"><code class="language-bash">php artisan model:filter UserFilter<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>所有过滤器的默认名称空间是 <code>App ModelFilters</code>，每个 Model 都希望过滤器类名遵循 { $ModelName } 过滤器变数命名原则，而不管模型在哪个名称空间。下面是一个基于默认变数命名原则的模型和它们各自的过滤器的例子。</p><table><thead><tr><th>Model</th><th>ModelFilter</th></tr></thead><tbody><tr><td><code>App\User</code></td><td><code>App\ModelFilters\UserFilter</code></td></tr><tr><td><code>App\FrontEnd\PrivatePost</code></td><td><code>App\ModelFilters\PrivatePostFilter</code></td></tr><tr><td><code>App\FrontEnd\Public\GuestPost</code></td><td><code>App\ModelFilters\GuestPostFilter</code></td></tr></tbody></table><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>已经生成好了 Filter 之后改如何去使用呢？</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Model</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">EloquentFilter<span class="token punctuation">\</span>Filterable</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Database<span class="token punctuation">\</span>Eloquent<span class="token punctuation">\</span>Model</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">UserRole</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span><span class="token punctuation">{</span>    <span class="token keyword">use</span> <span class="token package">Filterable</span><span class="token punctuation">;</span> <span class="token shell-comment comment"># use 扩展提供的 trait</span>    <span class="token keyword">protected</span> <span class="token variable">$guarded</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token shell-comment comment"># 创建一个公共的方法并引入创建的 Filter</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">modelFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">provideFilter</span><span class="token punctuation">(</span>\<span class="token package">App<span class="token punctuation">\</span>Model<span class="token punctuation">\</span>Filters<span class="token punctuation">\</span>UserFilter</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下是定义模型使用 Filter ，创建 Filter 肯定是要拿来过滤搜索。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Model<span class="token punctuation">\</span>Filters</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">EloquentFilter<span class="token punctuation">\</span>ModelFilter</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">UserFilter</span> <span class="token keyword">extends</span> <span class="token class-name">ModelFilter</span><span class="token punctuation">{</span>    <span class="token keyword">use</span> <span class="token package">CommonFilter</span><span class="token punctuation">;</span> <span class="token shell-comment comment"># 使用一个 trait 定义一些公共的条件</span>    <span class="token comment" spellcheck="true">/**    * Related Models that have ModelFilters as well as the method on the ModelFilter    * As [relationMethod => [input_key1, input_key2]].    *    * @var array    */</span>    <span class="token keyword">public</span> <span class="token variable">$relations</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">protected</span> <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token shell-comment comment"># 黑名单，禁止使用的方法 $this->blacklistMethod() 扩展包提供的添加黑名单，$this->whitelistMethod() 扩展包提供的删除黑名单。嘿嘿，白色，黑色 政治不正确哦，哈哈哈哈哈哈哈哈哈！</span>        <span class="token shell-comment comment"># 看着这里注意：！！方法名 ！！就是前段传递的搜索的字段</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">whereLike</span><span class="token punctuation">(</span><span class="token string">'role_name'</span><span class="token punctuation">,</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token shell-comment comment"># 看着这里注意：！！方法名 ！！就是前段传递的搜索的字段</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">introduction</span><span class="token punctuation">(</span><span class="token variable">$introduction</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">whereLike</span><span class="token punctuation">(</span><span class="token string">'introduction'</span><span class="token punctuation">,</span><span class="token variable">$introduction</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token shell-comment comment"># 看着这里注意：！！方法名 ！！就是前段传递的搜索的字段</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">role</span><span class="token punctuation">(</span><span class="token variable">$role</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token shell-comment comment"># 如果字段的以 _id 结尾可以省略 _id ,如果你不想这样可以 protected $drop_id = false;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">whereLike</span><span class="token punctuation">(</span><span class="token string">'role_id'</span><span class="token punctuation">,</span><span class="token variable">$role</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token shell-comment comment"># 看着这里注意：setup 很特殊，只要定义了 setup 那么他都会每次使用这个 filter 的时候都会去执行一次</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">with</span><span class="token punctuation">(</span><span class="token string">'roles'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token shell-comment comment"># $this->input(</span><span class="token string">'x'</span><span class="token punctuation">)</span> <span class="token shell-comment comment"># 获取前端传递的某个字段</span>    <span class="token shell-comment comment"># $this->push(</span><span class="token string">'x'</span><span class="token punctuation">,</span><span class="token string">'xx'</span><span class="token punctuation">)</span> <span class="token shell-comment comment"># 如果在 setup 方法中调用，则添加要过滤的值。如果调用其他方法，则只会过滤关系</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Controllers</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Request</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Requests</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>User</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>ModelFilters<span class="token punctuation">\</span>Admin<span class="token punctuation">\</span>UserFilter</span> <span class="token keyword">as</span> AdminFilter<span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>ModelFilters<span class="token punctuation">\</span>User<span class="token punctuation">\</span>UserFilter</span> <span class="token keyword">as</span> BasicUserFilter<span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Auth</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span><span class="token punctuation">{</span>            <span class="token shell-comment comment"># 使用方法1</span>      <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">test1</span><span class="token punctuation">(</span>Request <span class="token variable">$request</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>                User<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token shell-comment comment"># 使用方法2，可以通过传递要用作 filter() 方法的第二个参数的筛选器来动态定义筛选器。动态定义过滤器将比为模型定义的任何其他过滤器采用先例。  </span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">test2</span><span class="token punctuation">(</span>Request <span class="token variable">$request</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$userFilter</span> <span class="token operator">=</span> Auth<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">isAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> AdminFilter<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span> <span class="token punctuation">:</span> BasicUserFilter<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> User<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$userFilter</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="通过关系过滤"><a href="#通过关系过滤" class="headerlink" title="通过关系过滤"></a>通过关系过滤</h4><p>其实就是模型关联，举个简单的🌰：假如用户和角色是一对一，角色有角色的名称</p><p>现在有个需求，就是通过搜索角色名称查询出用户，现在的数据结构这：</p><pre><code>{    &quot;code&quot;: 0,    &quot;msg&quot;: &quot;success&quot;,    &quot;data&quot;: {        &quot;data&quot;: [            {                &quot;id&quot;: 1,                &quot;uid&quot;: &quot;2af04c60-d78c-11ea-ada2-3b19d33d4b22&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;boyi6868@163.com&quot;,                &quot;username&quot;: &quot;boyi6868&quot;,                &quot;google_status&quot;: 1,                &quot;google_key&quot;: &quot;X55ERBFUJRMZAP6PWQMY5A3PUMLYQ4CLRQ3CLEL3K72LAKLYSISCAGZWC5DL3QCA&quot;,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:26:00&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 08:15:21&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 2,                &quot;uid&quot;: &quot;dc643e80-d78d-11ea-b343-d17dbdf776b7&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;abdul.becker@krajcik.net&quot;,                &quot;username&quot;: &quot;Dr. Alexandro Moen&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 3,                &quot;uid&quot;: &quot;dc9406b0-d78d-11ea-bc67-ff4416fdb6a7&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;buckridge.raina@hotmail.com&quot;,                &quot;username&quot;: &quot;Agustin Bogan&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 4,                &quot;uid&quot;: &quot;dca3fee0-d78d-11ea-959c-29ea7bbc8023&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;umayer@yahoo.com&quot;,                &quot;username&quot;: &quot;Mr. Rico Walsh&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 5,                &quot;uid&quot;: &quot;dcb3ba10-d78d-11ea-9699-2d7b3d45b6b9&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;juanita34@cole.net&quot;,                &quot;username&quot;: &quot;Dr. Tyree Bednar&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 6,                &quot;uid&quot;: &quot;dcc3b140-d78d-11ea-bce0-a56cef20050c&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;kara.dach@swift.com&quot;,                &quot;username&quot;: &quot;Erin Abshire&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 7,                &quot;uid&quot;: &quot;dcd2df80-d78d-11ea-ae70-c1b527fa12fc&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;devan.grady@yahoo.com&quot;,                &quot;username&quot;: &quot;Abbie Crona&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 8,                &quot;uid&quot;: &quot;dce248c0-d78d-11ea-be1c-4f69f3e57beb&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;tmoen@schroeder.com&quot;,                &quot;username&quot;: &quot;Marielle Ernser&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 9,                &quot;uid&quot;: &quot;dcf29ca0-d78d-11ea-8191-170a814a5d37&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;kromaguera@schimmel.com&quot;,                &quot;username&quot;: &quot;Jaydon Mertz&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 10,                &quot;uid&quot;: &quot;dd029040-d78d-11ea-baf2-e3152a4f7558&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;kamren.cormier@hotmail.com&quot;,                &quot;username&quot;: &quot;Myrl Koepp&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 11,                &quot;uid&quot;: &quot;dd125db0-d78d-11ea-b7af-316788adee55&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;reichel.lela@yahoo.com&quot;,                &quot;username&quot;: &quot;Dr. Anastacio Abernathy Jr.&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 12,                &quot;uid&quot;: &quot;dd221620-d78d-11ea-aec7-b3c06b5e1d30&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;bkonopelski@luettgen.info&quot;,                &quot;username&quot;: &quot;Miss Mattie Baumbach DDS&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 13,                &quot;uid&quot;: &quot;dd317060-d78d-11ea-9bfa-b1aace9a9939&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;hoeger.keyshawn@yahoo.com&quot;,                &quot;username&quot;: &quot;Mrs. Keara Shields Sr.&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 1,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 1,                    &quot;role_name&quot;: &quot;个人&quot;                }            },            {                &quot;id&quot;: 14,                &quot;uid&quot;: &quot;dd415c30-d78d-11ea-9524-ad8181d0f16d&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;hoeger.gustave@damore.com&quot;,                &quot;username&quot;: &quot;Dr. Kaleigh Kuhlman V&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 2,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 2,                    &quot;role_name&quot;: &quot;店家&quot;                }            },            {                &quot;id&quot;: 15,                &quot;uid&quot;: &quot;dd58ce50-d78d-11ea-973f-9f9ae3a97408&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;malika00@yahoo.com&quot;,                &quot;username&quot;: &quot;Janie Reilly&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 2,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 2,                    &quot;role_name&quot;: &quot;店家&quot;                }            }        ],        &quot;total&quot;: 101    }}</code></pre><p>这时候 filter 提供的模型关联过滤就很好用了，请看以下操作：</p><pre class="line-numbers language-php"><code class="language-php"><span class="token shell-comment comment"># 用户模型，我们关联角色，角色模型可以不做任何操作</span><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span><span class="token punctuation">{</span>      <span class="token keyword">use</span> <span class="token package">Filterable</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">roles</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">hasOne</span><span class="token punctuation">(</span>Role<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token shell-comment comment"># 角色的 Filter ，我们只查询角色名称</span><span class="token keyword">class</span> <span class="token class-name">UserRoleFilter</span> <span class="token keyword">extends</span> <span class="token class-name">ModelFilter</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**    * Related Models that have ModelFilters as well as the method on the ModelFilter    * As [relationMethod => [input_key1, input_key2]].    *    * @var array    */</span>    <span class="token keyword">public</span> <span class="token variable">$relations</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">whereLike</span><span class="token punctuation">(</span><span class="token string">'role_name'</span><span class="token punctuation">,</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token shell-comment comment"># 用户 Filter，可以试用 $this->related(),但是我个人还是喜欢使用 $relations 数组</span><span class="token keyword">class</span> <span class="token class-name">UserFilter</span> <span class="token keyword">extends</span> <span class="token class-name">ModelFilter</span><span class="token punctuation">{</span>      <span class="token shell-comment comment"># roles 也就是用户模型当中模型关联，name 也就是 角色 Filter 当中的搜索字段</span>    <span class="token keyword">public</span> <span class="token variable">$relations</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'roles'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在来搜索现在角色是 店家 的所有用户结果：</p><pre><code>{    &quot;code&quot;: 0,    &quot;msg&quot;: &quot;success&quot;,    &quot;data&quot;: {        &quot;data&quot;: [            {                &quot;id&quot;: 14,                &quot;uid&quot;: &quot;dd415c30-d78d-11ea-9524-ad8181d0f16d&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;hoeger.gustave@damore.com&quot;,                &quot;username&quot;: &quot;Dr. Kaleigh Kuhlman V&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 2,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 2,                    &quot;role_name&quot;: &quot;店家&quot;                }            },            {                &quot;id&quot;: 15,                &quot;uid&quot;: &quot;dd58ce50-d78d-11ea-973f-9f9ae3a97408&quot;,                &quot;team_id&quot;: 1,                &quot;mobile&quot;: &quot;&quot;,                &quot;email&quot;: &quot;malika00@yahoo.com&quot;,                &quot;username&quot;: &quot;Janie Reilly&quot;,                &quot;google_status&quot;: 0,                &quot;google_key&quot;: null,                &quot;role&quot;: 2,                &quot;identity&quot;: null,                &quot;status&quot;: 1,                &quot;deleted_at&quot;: null,                &quot;created_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;updated_at&quot;: &quot;2020-08-06 02:38:18&quot;,                &quot;roles&quot;: {                    &quot;id&quot;: 2,                    &quot;role_name&quot;: &quot;店家&quot;                }            }        ],        &quot;total&quot;: 2    }}</code></pre><blockquote><p>官方文档：<a href="http://tucker-eric.github.io/EloquentFilter/，Filter" target="_blank" rel="noopener">http://tucker-eric.github.io/EloquentFilter/，Filter</a> 的使用大概就如此了，还是比较简单的开箱即用。</p></blockquote><h3 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h3><p>不依赖扩展包，自己手写一个 Filter 的思路。</p><p>未完待续…</p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel-扩展包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL-唯一索引与 NULL</title>
      <link href="/2020/07/28/MySQL-%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E4%B8%8ENULL/"/>
      <url>/2020/07/28/MySQL-%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E4%B8%8ENULL/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>有没有遇到这样的情况，手机号码、邮箱账号、用户账号、都说登陆的账号。而为了简化用户的操作，用户可以选择手机号码或邮箱账号，那么也就说他们之中有一个会为空。当给这三个字段唯一索引时，可以确定的就是用户账号肯定不为空，其他二个可能为空而给定了空字符串。注册完成第一个账号，完全没问题，在注册第二个账号时，会提示索引重复。“我没有重复的呀！”，唯一索引，只可有一行空字符串，多一行就会报错索引重复。那么又在想我给默认 NULL 呢？</p><p><strong>默认 NULL 当然可以，NULL 可以多行，但是 NUll 会导致索引很麻烦，此方案也不可选</strong>，<strong>NULL 在 MySQL 当中会在空间长度为 1 ，而空字符串是不会占空间，长度为 0 。</strong></p><h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3><p>手机号码和邮箱账号，默认为空字符串。他们都使用普通索引。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>MySQL 在唯一索引中允许存在值为 NULL 的字段。NULL 值在 MySQL 可以代表是任意值，NULL 其实并不是空值，而是要占用空间，所以 MySQL 在进行比较的时候，NULL 会参与字段比较，所以对效率有一部分影响，而且B 树索引时不会存储 NULL 值的，所以如果索引的字段可以为 NULL，索引的效率会下降很多。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-datetime 和 timestamp</title>
      <link href="/2020/07/28/MySQL-datetime%E5%92%8Ctimestamp/"/>
      <url>/2020/07/28/MySQL-datetime%E5%92%8Ctimestamp/</url>
      
        <content type="html"><![CDATA[<h3 id="datetime"><a href="#datetime" class="headerlink" title="datetime"></a>datetime</h3><p>保存格式为 YYYYMMDDHHMMSS（年月日时分秒）的整数，所以，<strong>它与时区无关</strong>，存入的是什么值就是什么值，<strong>不会根据当前时区进行转换</strong>。</p><p>存储范围：从 <code>1000-01-01 00:00:00</code> 到 <code>9999-12-31 23:59:59</code></p><p>长度：8 个字节，datetime(n), n 不是存储长度，而是显示的小数位数，即使小数位数是 0，存储是也是存储的6位小数，仅仅显示 0 位而已。</p><p>显示：显示日期和时间。</p><h3 id="timestamp"><a href="#timestamp" class="headerlink" title="timestamp"></a>timestamp</h3><p>存入的是自 1970-01-01 午夜(格林尼治标准时间)以来的秒数，它和 unix 时间戳相同。所以它与时区有关，查询时转为相应的时区时间。比如，存储的是 1970-01-01 00:00:00，客户端是北京，那么就加8个时区的小时 1970-01-01 08:00:00。</p><p>存储范围：<code>&#39;1970-01-01 00:00:01&#39;</code> UTC to<code>&#39;2038-01-19 03:14:07&#39;</code> </p><p>可以当做时间戳使用，在更新时，自动更新，这一列只能由系统自动更新，不能由 sql 更新，这个在乐观锁时有广泛的应用。</p><p>长度：4字节，因为存储长度的原因，决定了它支持的范围的比 datetime 的要小。</p><p>显示：显示日期和时间。</p><blockquote><p>原文地址：</p><p><a href="https://blog.csdn.net/wangjun5159/article/details/48010563" target="_blank" rel="noopener">https://blog.csdn.net/wangjun5159/article/details/48010563</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-权限管理</title>
      <link href="/2020/07/28/Laravel-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
      <url>/2020/07/28/Laravel-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>我们常说的 RBAC 就是基于角色的权限访问控制（Role-Based Access Control），我们会利用用户，角色和权限的关系，决定用户能做什么事，不能做什么事。在 RBAC 我们首先需要了解：</p><p>用户（User）—— 拥有角色的主体；<br>角色（Role）—— 一定数量的权限的集合；<br>权限 （Permission）—— 是否可以做具体的某个操作。</p><p>具体的权限是判断是否能做某件事的决定因素，<strong>一个角色可以拥有多个权限</strong>，<strong>角色和权限之间是多对多的关系</strong>。给用户赋予某个角色，用户就可以得到角色拥有的所有权限，用户就可以干某件事，<strong>同样用户与角色也是多对多的关系</strong>。总结一下就是用户可以有多个角色，角色可以有多个权限，用户的任意一个角色中拥有某个权限，他就可以做这个权限对应的事。</p><h3 id="路由-Action-属性做标记"><a href="#路由-Action-属性做标记" class="headerlink" title="路由 Action 属性做标记"></a>路由 Action 属性做标记</h3><p>思路：把路由的 Action 属性拿来做标记，就相当于我们给这个路由贴上自己的标签。它属于哪一类，它的作用是什么，一目了然。让不知道的人看下它的信息就可以知道其的作用。当然可以不是所有的路由都去给它贴上一个标签，公共部分那么就不需要去区分，不做权限的记录。</p><pre class="line-numbers language-PHP"><code class="language-PHP">Route::get('role',['title' => '获取角色列表' ,'as' => 'role.query','uses' => 'RoleController@queryRoleList']);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="刷新权限"><a href="#刷新权限" class="headerlink" title="刷新权限"></a>刷新权限</h3><p>上面把路由作为了标记，随时入库权限表。</p><pre class="line-numbers language-php"><code class="language-php">        <span class="token variable">$routes</span> <span class="token operator">=</span> <span class="token function">app</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">routes</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$routes</span> <span class="token keyword">as</span> <span class="token variable">$route</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$route</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">action</span><span class="token punctuation">[</span><span class="token string">'as'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token variable">$route</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">action</span><span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>                    <span class="token string">'name'</span>          <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$route</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">action</span><span class="token punctuation">[</span><span class="token string">'as'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token string">'title'</span>                 <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$route</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">action</span><span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token variable">$result</span> <span class="token operator">=</span> Permission<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'title'</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span>                <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token operator">!</span> <span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            Permission<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            Permission<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="权限验证中间件"><a href="#权限验证中间件" class="headerlink" title="权限验证中间件"></a>权限验证中间件</h3><p>给与用户权限后，那么用户访问路由时，进行权限的验证。</p><pre class="line-numbers language-php"><code class="language-php">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">,</span> Closure <span class="token variable">$next</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$result</span> <span class="token operator">=</span> UserRole<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token string">'id'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">role</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">'competence'</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">competence</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token function">ApiExceptionError</span><span class="token punctuation">(</span><span class="token function">trans</span><span class="token punctuation">(</span><span class="token string">'message.permissions.error'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">array_search</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token variable">$next</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span>                <span class="token string">'code'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token string">'mes'</span>  <span class="token operator">=</span><span class="token operator">></span> <span class="token function">trans</span><span class="token punctuation">(</span><span class="token string">'message.permissions.error'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">'date'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">''</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">403</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opcache</title>
      <link href="/2020/06/10/PHP-OpCache/"/>
      <url>/2020/06/10/PHP-OpCache/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>它是由 PHP 官方公司 Zend 开发的一款免费使用的 PHP 优化加速拓展。将 PHP Code 预编译生成的脚本文件 OPcode 缓存在共享内存中供以后反复使用，从而避免了从磁盘读取代码再次编译的时间消耗。同时，它还应用了一些代码优化模式，使得代码执行更快。从而加速 PHP 应用响应。开启 OPcache 之后注意重启 FPM，不然不会生效。</p><p>编译器是把源程序的每一条语句都编译成机器语言，并保存成二进制文件，这样运行时计算机可以直接以机器语言来运行此程序，速度很快；而解释器则是只在执行程序时，才一条一条的解释成机器语言给计算机来执行，所以运行速度是不如编译后的程序运行的快的。</p><p>对于一个编译型程序（比如 Java,C），它的编译和执行是分开的，先编译成二进制可执行文件，然后再次执行。</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/5G8TBn.jpg" alt></p><p>对于 PHP、Python 属于解释型语言，不产生机器码，而是产生中间码（中间码是不能直接执行，这个中间码只有解释器可以识别到，中间码要靠解析器来进行执行）</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/vZVVxA.jpg" alt></p><p>在 PHP 当中，源代码首先进行词法分析，将源代码切割为多个字符串单元，分割后的字符串称为 Token。而一个独立的 Token 是无法表达完整语义，需要经过语法分析阶段，将 Token 转换为抽象语法树（简称 AST）之后，抽象语法树被转换为机器指令执行。在 PHP 中，这些指令称为 op-code，到 AST 的生成这一步，编译型语言与解析型语言所需要经历的过程相似，从抽象语法树之后开始产生差异。</p><h4 id="执行过程"><a href="#执行过程" class="headerlink" title="执行过程"></a>执行过程</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/5I680H.jpg" alt></p><ul><li>源码通过词法分析得到 Token</li><li>基于语法分析器生成抽象语法树（AST）</li><li>抽象语法树转换为 OP-codes （opcode指令集合），PHP 解析执行 opcodes</li></ul><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/nRiZW4.jpg" alt></p><ul><li>语法分析将 PHP 代码转换为有意义的标识 Token。该步骤的词法分析器使用 Re2c 实现。</li><li>语法分析将 Token 和符合文法规则的代码生成抽象语法树。语法分析器基于 Bison 实现。语法分析使用了 BNF （Backus-N阿URForm，巴科斯范式）来表达文法规则。Bison 借助状态机，状态转移表和压栈，出栈等一系列操作，生成抽象语法树。</li><li>上步的抽象语法树生成抽象的 opcode，并被虚拟机执行。op-code 是 PHP 7定义的一组指令标识，指令对应着相应的 handler（处理函数）当虚拟机调用 opcode ，会找到 opcode 背后的处理函数，执行真正的处理。</li></ul><p>来简单的一句话就是 PHP 内核把 PHP 代码编译成 opcode，然后再来执行 opcode。这个过程看上去很简单，没有可以优化的地方，其实不然。在 PHP 没有变化的情况下，内核生成的 opcode 是不会变的，那我们可以把生成的 opcode 缓存到文件或内存当中，这样可以避免重复执行 opcode 的过程，提高 PHP 的运行效率。开启 OPcache 后的 PHP 执行就是，读取 opcode ，执行 opcode。</p><h4 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h4><table><thead><tr><th align="left">名字</th><th align="left">默认</th><th align="left">可修改范围</th><th align="left">更新日志</th></tr></thead><tbody><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.enable" target="_blank" rel="noopener">opcache.enable</a></td><td align="left">“1”</td><td align="left">PHP_INI_ALL</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.enable-cli" target="_blank" rel="noopener">opcache.enable_cli</a></td><td align="left">“0”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">在 PHP 7.1.2 至 7.1.6 （含）的版本，默认值是”1”</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.memory-consumption" target="_blank" rel="noopener">opcache.memory_consumption</a></td><td align="left">“128”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">在 PHP 7.0.0 之前，默认值是 “64”</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.interned-strings-buffer" target="_blank" rel="noopener">opcache.interned_strings_buffer</a></td><td align="left">“8”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">在 PHP 7.0.0 之前，默认值是 “4”</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.max-accelerated-files" target="_blank" rel="noopener">opcache.max_accelerated_files</a></td><td align="left">“10000”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">在 PHP 7.0.0 之前，默认值是 “2000”</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.max-wasted-percentage" target="_blank" rel="noopener">opcache.max_wasted_percentage</a></td><td align="left">“5”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.use-cwd" target="_blank" rel="noopener">opcache.use_cwd</a></td><td align="left">“1”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.validate-timestamps" target="_blank" rel="noopener">opcache.validate_timestamps</a></td><td align="left">“1”</td><td align="left">PHP_INI_ALL</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.revalidate-freq" target="_blank" rel="noopener">opcache.revalidate_freq</a></td><td align="left">“2”</td><td align="left">PHP_INI_ALL</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.revalidate-path" target="_blank" rel="noopener">opcache.revalidate_path</a></td><td align="left">“0”</td><td align="left">PHP_INI_ALL</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.save-comments" target="_blank" rel="noopener">opcache.save_comments</a></td><td align="left">“1”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.load-comments" target="_blank" rel="noopener">opcache.load_comments</a></td><td align="left">“1”</td><td align="left">PHP_INI_ALL</td><td align="left">从 PHP 7.0.0 开始被移除</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.fast-shutdown" target="_blank" rel="noopener">opcache.fast_shutdown</a></td><td align="left">“0”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">从 PHP 7.2.0 开始被移除</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.enable-file-override" target="_blank" rel="noopener">opcache.enable_file_override</a></td><td align="left">“0”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.optimization-level" target="_blank" rel="noopener">opcache.optimization_level</a></td><td align="left">“0x7FFFBFFF”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">从 PHP 5.6.18 开始，默认值从 0xFFFFFFFF 修改为 0x7FFFBFFF</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.inherited-hack" target="_blank" rel="noopener">opcache.inherited_hack</a></td><td align="left">“1”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">自 PHP 7.3.0 被移除</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.dups-fix" target="_blank" rel="noopener">opcache.dups_fix</a></td><td align="left">“0”</td><td align="left">PHP_INI_ALL</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.blacklist-filename" target="_blank" rel="noopener">opcache.blacklist_filename</a></td><td align="left">“”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.max-file-size" target="_blank" rel="noopener">opcache.max_file_size</a></td><td align="left">“0”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.consistency-checks" target="_blank" rel="noopener">opcache.consistency_checks</a></td><td align="left">“0”</td><td align="left">PHP_INI_ALL</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.force-restart-timeout" target="_blank" rel="noopener">opcache.force_restart_timeout</a></td><td align="left">“180”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.error-log" target="_blank" rel="noopener">opcache.error_log</a></td><td align="left">“”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.log-verbosity-level" target="_blank" rel="noopener">opcache.log_verbosity_level</a></td><td align="left">“1”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.preferred-memory-model" target="_blank" rel="noopener">opcache.preferred_memory_model</a></td><td align="left">“”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.protect-memory" target="_blank" rel="noopener">opcache.protect_memory</a></td><td align="left">“0”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.mmap-base" target="_blank" rel="noopener">opcache.mmap_base</a></td><td align="left"><strong><code>NULL</code></strong></td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.restrict-api" target="_blank" rel="noopener">opcache.restrict_api</a></td><td align="left">“”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.file_update_protection" target="_blank" rel="noopener">opcache.file_update_protection</a></td><td align="left">“2”</td><td align="left">PHP_INI_ALL</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.huge_code_pages" target="_blank" rel="noopener">opcache.huge_code_pages</a></td><td align="left">“0”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.lockfile_path" target="_blank" rel="noopener">opcache.lockfile_path</a></td><td align="left">“/tmp”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.opt_debug_level" target="_blank" rel="noopener">opcache.opt_debug_level</a></td><td align="left">“0”</td><td align="left">PHP_INI_SYSTEM</td><td align="left"></td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.file-cache" target="_blank" rel="noopener">opcache.file_cache</a></td><td align="left">NULL</td><td align="left">PHP_INI_SYSTEM</td><td align="left">从 PHP 7.0.0 开始支持</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.file-cache-only" target="_blank" rel="noopener">opcache.file_cache_only</a></td><td align="left">“0”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">从 PHP 7.0.0 开始支持</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.file-cache-consistency-checks" target="_blank" rel="noopener">opcache.file_cache_consistency_checks</a></td><td align="left">“1”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">从 PHP 7.0.0 开始支持</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.file-cache-fallback" target="_blank" rel="noopener">opcache.file_cache_fallback</a></td><td align="left">“1”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">从 PHP 7.0.0 开始支持，仅适用于 Windows 平台</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.validate-permission" target="_blank" rel="noopener">opcache.validate_permission</a></td><td align="left">“0”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">从 PHP 7.0.14 开始支持</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.validate-root" target="_blank" rel="noopener">opcache.validate_root</a></td><td align="left">“0”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">从 PHP 7.0.14 开始支持</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.preload" target="_blank" rel="noopener">opcache.preload</a></td><td align="left">“”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">从 PHP 7.4.0 开始支持</td></tr><tr><td align="left"><a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.preload-user" target="_blank" rel="noopener">opcache.preload_user</a></td><td align="left">“”</td><td align="left">PHP_INI_SYSTEM</td><td align="left">从 PHP 7.4.0 开始支持</td></tr></tbody></table><p><code>opcache.enable</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>启用操作码缓存。如果禁用此选项，则不会优化和缓存代码。 在运行期使用 <a href="https://www.php.net/manual/zh/function.ini-set.php" target="_blank" rel="noopener">ini_set()</a> 函数只能禁用 <code>opcache.enable</code> 设置，不可以启用此设置。 如果在脚本中尝试启用此设置项会产生警告。</p><p><code>opcache.enable_cli</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>仅针对 CLI 版本的 PHP 启用操作码缓存。 通常被用来测试和调试。</p><p><code>opcache.memory_consumption</code> <a href="https://www.php.net/manual/zh/language.types.integer.php" target="_blank" rel="noopener">integer</a></p><p>OPcache 的共享内存大小，以兆字节为单位。</p><p><code>opcache.interned_strings_buffer</code> <a href="https://www.php.net/manual/zh/language.types.integer.php" target="_blank" rel="noopener">integer</a></p><p>用来存储预留字符串的内存大小，以兆字节为单位。 PHP 5.3.0 之前的版本会忽略此配置指令。</p><p><code>opcache.max_accelerated_files</code> <a href="https://www.php.net/manual/zh/language.types.integer.php" target="_blank" rel="noopener">integer</a></p><p>OPcache 哈希表中可存储的脚本文件数量上限。 真实的取值是在质数集合 <code>{ 223, 463, 983, 1979, 3907, 7963, 16229, 32531, 65407, 130987 }</code> 中找到的第一个大于等于设置值的质数。 设置值取值范围最小值是 200，最大值在 PHP 5.5.6 之前是 100000，PHP 5.5.6 及之后是 1000000。</p><p><code>opcache.max_wasted_percentage</code> <a href="https://www.php.net/manual/zh/language.types.integer.php" target="_blank" rel="noopener">integer</a></p><p>浪费内存的上限，以百分比计。 如果达到此上限，那么 OPcache 将产生重新启动续发事件。</p><p><code>opcache.use_cwd</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>如果启用，OPcache 将在哈希表的脚本键之后附加改脚本的工作目录， 以避免同名脚本冲突的问题。 禁用此选项可以提高性能，但是可能会导致应用崩溃。</p><p><code>opcache.validate_timestamps</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>如果启用，那么 OPcache 会每隔 <a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.revalidate-freq" target="_blank" rel="noopener">opcache.revalidate_freq</a> 设定的秒数 检查脚本是否更新。 如果禁用此选项，你必须使用 <a href="https://www.php.net/manual/zh/function.opcache-reset.php" target="_blank" rel="noopener">opcache_reset()</a> 或者 <a href="https://www.php.net/manual/zh/function.opcache-invalidate.php" target="_blank" rel="noopener">opcache_invalidate()</a> 函数来手动重置 OPcache，也可以 通过重启 Web 服务器来使文件系统更改生效。</p><p><code>opcache.revalidate_freq</code> <a href="https://www.php.net/manual/zh/language.types.integer.php" target="_blank" rel="noopener">integer</a></p><p>检查脚本时间戳是否有更新的周期，以秒为单位。 设置为 <code>0</code> 会导致针对每个请求， OPcache 都会检查脚本更新。</p><p>如果 <a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.validate-timestamps" target="_blank" rel="noopener">opcache.validate_timestamps</a> 配置指令设置为禁用，那么此设置项将会被忽略。</p><p><code>opcache.revalidate_path</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>如果禁用此选项，在同一个 <a href="https://www.php.net/manual/zh/ini.core.php#ini.include-path" target="_blank" rel="noopener">include_path</a> 已存在的缓存文件会被重用。 因此，将无法找到不在包含路径下的同名文件。</p><p><code>opcache.save_comments</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>如果禁用，脚本文件中的注释内容将不会被包含到操作码缓存文件， 这样可以有效减小优化后的文件体积。 禁用此配置指令可能会导致一些依赖注释或注解的 应用或框架无法正常工作， 比如： Doctrine， Zend Framework 2 以及 PHPUnit。</p><p><code>opcache.load_comments</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>如果禁用，则即使文件中包含注释，也不会加载这些注释内容。 本选项可以和 <a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.save-comments" target="_blank" rel="noopener">opcache.save_comments</a> 一起使用，以实现按需加载注释内容。</p><p><code>opcache.fast_shutdown</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>如果启用，则会使用快速停止续发事件。 所谓快速停止续发事件是指依赖 Zend 引擎的内存管理模块 一次释放全部请求变量的内存，而不是依次释放每一个已分配的内存块。</p><p>从 PHP 7.2.0 开始，此配置指令被移除。 快速停止的续发事件的处理已经集成到 PHP 中， 只要有可能，PHP 会自动处理这些续发事件。</p><p><code>opcache.enable_file_override</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>如果启用，则在调用函数 <a href="https://www.php.net/manual/zh/function.file-exists.php" target="_blank" rel="noopener">file_exists()</a>， <a href="https://www.php.net/manual/zh/function.is-file.php" target="_blank" rel="noopener">is_file()</a> 以及 <a href="https://www.php.net/manual/zh/function.is-readable.php" target="_blank" rel="noopener">is_readable()</a> 的时候， 都会检查操作码缓存，无论文件是否已经被缓存。 如果应用中包含检查 PHP 脚本存在性和可读性的功能，这样可以提升性能。 但是如果禁用了 <a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.validate-timestamps" target="_blank" rel="noopener">opcache.validate_timestamps</a> 选项， 可能存在返回过时数据的风险。</p><p><code>opcache.optimization_level</code> <a href="https://www.php.net/manual/zh/language.types.integer.php" target="_blank" rel="noopener">integer</a></p><p>控制优化级别的二进制位掩码。</p><p><code>opcache.inherited_hack</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>在 PHP 5.3 之前的版本，OPcache 会存储代码中使用 <a href="https://www.php.net/manual/zh/internals2.opcodes.declare-class.php" target="_blank" rel="noopener">DECLARE_CLASS</a> 操作码 来实现继承的位置。当文件被加载之后，OPcache 会尝试使用当前环境来绑定被继承的类。 由于当前脚本中可能并不需要 DECLARE_CLASS 操作码，如果这样的脚本需要对应的操作码被定义时， 可能无法运行。</p><p>在 PHP 5.3 及后续版本中，此配置指令会被忽略。</p><p><code>opcache.dups_fix</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>仅作为针对 “不可重定义类”错误的一种解决方案。</p><p><code>opcache.blacklist_filename</code> <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a></p><p>OPcache 黑名单文件位置。 黑名单文件为文本文件，包含了不进行预编译优化的文件名，每行一个文件名。 黑名单中的文件名可以使用通配符，也可以使用前缀。 此文件中以分号（;）开头的行将被视为注释。</p><p>简单的黑名单文件可能如下所示：</p><pre><code>; 将特定文件加入到黑名单/var/www/broken.php; 以字符 x 文件打头的文件/var/www/x; 通配符匹配/var/www/*-broken.php</code></pre><p><code>opcache.max_file_size</code> <a href="https://www.php.net/manual/zh/language.types.integer.php" target="_blank" rel="noopener">integer</a></p><p>以字节为单位的缓存的文件大小上限。设置为 <code>0</code> 表示缓存全部文件。</p><p><code>opcache.consistency_checks</code> <a href="https://www.php.net/manual/zh/language.types.integer.php" target="_blank" rel="noopener">integer</a></p><p>如果是非 0 值，OPcache 将会每隔 N 次请求检查缓存校验和。 N 即为此配置指令的设置值。 由于此选项对于性能有较大影响，请尽在调试环境使用。</p><p><code>opcache.force_restart_timeout</code> <a href="https://www.php.net/manual/zh/language.types.integer.php" target="_blank" rel="noopener">integer</a></p><p>如果缓存处于非激活状态，等待多少秒之后计划重启。 如果超出了设定时间，则 OPcache 模块将杀除持有缓存锁的进程， 并进行重启。</p><p>如果选项 <a href="https://www.php.net/manual/zh/opcache.configuration.php#ini.opcache.log-verbosity-level" target="_blank" rel="noopener">opcache.log_verbosity_level</a> 设置为 2 或者 2 以上的数值，当发生重启时将在日志中记录一条警告信息。</p><p><code>opcache.error_log</code> <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a></p><p>OPcache 模块的错误日志文件。 如果留空，则视为 <code>stderr</code>， 错误日志将被送往标准错误输出 （通常情况下是 Web 服务器的错误日志文件）。</p><p><code>opcache.log_verbosity_level</code> <a href="https://www.php.net/manual/zh/language.types.integer.php" target="_blank" rel="noopener">integer</a></p><p>OPcache 模块的日志级别。 默认情况下，仅有致命级别（0）及错误级别（1）的日志会被记录。 其他可用的级别有：警告（2），信息（3）和调试（4）。</p><p><code>opcache.preferred_memory_model</code> <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a></p><p>OPcache 首选的内存模块。 如果留空，OPcache 会选择适用的模块， 通常情况下，自动选择就可以满足需求。</p><p>可选值包括： <code>mmap</code>，<code>shm</code>, <code>posix</code> 以及 <code>win32</code>。</p><p><code>opcache.protect_memory</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>保护共享内存，以避免执行脚本时发生非预期的写入。 仅用于内部调试。</p><p><code>opcache.mmap_base</code> <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a></p><p>在 Windows 平台上共享内存段的基地址。 所有的 PHP 进程都将共享内存映射到同样的地址空间。 使用此配置指令避免“无法重新附加到基地址”的错误。</p><p><code>opcache.restrict_api</code> <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a></p><p>仅允许路径是以指定字符串开始的 PHP 脚本调用 OPcache API 函数。 默认值为空字符串 “”，表示不做限制。</p><p><code>opcache.file_update_protection</code> <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a></p><p>如果文件的最后修改时间距现在不足此项配置指令所设定的秒数，那么这个文件不会进入到缓存中。 这是为了防止尚未完全修改完毕的文件进入到缓存。 如果你的应用中不存在部分修改文件的情况，把此项设置为 0 可以提高性能。</p><p><code>opcache.huge_code_pages</code> <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a></p><p>启用或者禁用将 PHP 代码（文本段）拷贝到 HUGE PAGES 中。 此项配置指令可以提高性能，但是需要在 OS 层面进行对应的配置。</p><p><code>opcache.lockfile_path</code> <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a></p><p>用来存储共享锁文件的绝对路径（仅适用于 *nix 操作系统）。</p><p><code>opcache.opt_debug_level</code> <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a></p><p>出于对不同阶段的优化情况进行调试的目的，生成操作码转储。 设置为 0x10000 会在进行优化之前输出编译器编译后的操作码， 设置为 0x20000 会输出优化后的操作码。</p><p><code>opcache.file_cache</code> <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a></p><p>配置二级缓存目录并启用二级缓存。 启用二级缓存可以在 SHM 内存满了、服务器重启或者重置 SHM 的时候提高性能。 默认值为空字符串 “”，表示禁用基于文件的缓存。</p><p><code>opcache.file_cache_only</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>启用或禁用在共享内存中的 opcode 缓存。</p><p><code>opcache.file_cache_consistency_checks</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>当从文件缓存中加载脚本的时候，是否对文件的校验和进行验证。</p><p><code>opcache.file_cache_fallback</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>在 Windows 平台上，当一个进程无法附加到共享内存的时候， 使用基于文件的缓存，也即：opcache.file_cache_only=1。 需要显示的启用文件缓存。</p><p><strong>Caution</strong></p><p>不鼓励禁用此配置项， 禁用它可能会导致进程无法启动。</p><p><code>opcache.validate_permission</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>针对当前用户，验证缓存文件的访问权限。</p><p><code>opcache.validate_root</code> <a href="https://www.php.net/manual/zh/language.types.boolean.php" target="_blank" rel="noopener">boolean</a></p><p>在 chroot 的环境中避免命名冲突。 为了防止进程访问到 chroot 环境之外的文件，应该在 chroot 的情况下启用这个选项。</p><p><code>opcache.preload</code> <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a></p><p>指定要在服务器启动时期进行编译和缓存的 PHP 脚本文件， 这些文件也可能通过 <a href="https://www.php.net/manual/zh/function.include.php" target="_blank" rel="noopener">include</a> 或者 <a href="https://www.php.net/manual/zh/function.opcache-compile-file.php" target="_blank" rel="noopener">opcache_compile_file()</a> 函数 来预加载其他文件。 所有这些文件中包含的实体，包括函数、类等，在服务器启动的时候就被加载和缓存， 对于用户代码来讲是“开箱可用”的。</p><p><code>opcache.preload_user</code> <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a></p><p>考虑到安全因素，禁止以 root 用户预加载代码。该指令方便以其他用户预加载。</p><h4 id="推荐配置"><a href="#推荐配置" class="headerlink" title="推荐配置"></a>推荐配置</h4><p>PHP官方推荐推荐：<a href="https://www.php.net/manual/zh/opcache.installation.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/opcache.installation.php</a></p><pre class="line-numbers language-ymal"><code class="language-ymal">opcache.enable=1opcache.memory_consumption=128opcache.interned_strings_buffer=8opcache.max_accelerated_files=4000opcache.revalidate_freq=60opcache.fast_shutdown=1 (在PHP 7.2.0中被移除，会自动开启)opcache.enable_cli=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>推荐：find . -type f -print | grep php | wc -l 查看项目文件数量</p><pre><code>opcache.enable=1opcache.memory_consumption=64 # laravel 推荐 256opcache.interned_strings_buffer=16opcache.max_accelerated_files=4000 # 这里的文件要比项目多opcache.revalidate_freq=0opcache.validate_timestamps=0  # 开发环境为 1，生产环境为 0</code></pre><blockquote><p>参考地址：</p><p><a href="https://learnku.com/articles/49492" target="_blank" rel="noopener">https://learnku.com/articles/49492</a></p><p><a href="https://www.php.net/manual/zh/opcache.configuration.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/opcache.configuration.php</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-队列</title>
      <link href="/2020/06/02/Laravel-%E9%98%9F%E5%88%97/"/>
      <url>/2020/06/02/Laravel-%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>Laravel 队列为不同的队列后台服务提供了统一的 API，比如 Beanstalk, Amazon SQS, Redis, 甚至是关系型数据库。队列可以使你延迟处理一些耗时的任务，比如发送邮件。延迟这些耗时的任务会大幅提高你的应用对 web 请求的处理速度。<code>划重点：当修改了队列后，一点要先重启队列！！！因为队列处理器是常驻进程，他们在重启前不会应用你代码的更改。</code></p><p>认识队列和栈：<a href="https://daixianjin.github.io/2020/04/14/%E9%98%9F%E5%88%97%E5%92%8C%E6%A0%88/">点我跳转</a></p><p>这里只说 Redis 的配置，其他配置没有操作过。在 Laravel 6.x 版本之前使用 Redis 我们使用最多的就是 Predis 这个扩展包，它可以不安装 Redis 扩展都可以使用 Redis，在 Laravel 6.x 以后都建议使用 PHP Redis 扩展。</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>配置队列先看 <code>config/queue.php</code>，强烈的建议不要直接修改配置文件里面数据，我们应当养成一个习惯，配置文件都应当<code>配置文件 =&gt; ENV 环境变量</code>不取其中一种，而是二者结合使用。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">return</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true">/*    |--------------------------------------------------------------------------    | 队列的驱动程序    |--------------------------------------------------------------------------    |        | Laravel 队列提供了可以跨各种不同队列后台的统一 API，例如 Beanstalk、Amazon SQS、Redis、MySQL        | sync 表示同步的意思，一般性都是本地测试使用，切勿在线上使用 sync 的驱动方式    |    */</span>    <span class="token string">'default'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'QUEUE_CONNECTION'</span><span class="token punctuation">,</span> <span class="token string">'sync'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/*    |--------------------------------------------------------------------------    | 队列连接    |--------------------------------------------------------------------------    |        | 在这里，以为每个服务器配置连接信息。如以下的驱动程序    |    | 驱动: "sync", "database", "beanstalkd", "sqs", "redis", "null"（抛弃不要在使用了）    |    */</span>    <span class="token string">'connections'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>        <span class="token string">'sync'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>            <span class="token string">'driver'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'sync'</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'database'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>            <span class="token string">'driver'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'database'</span><span class="token punctuation">,</span>            <span class="token string">'table'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'jobs'</span><span class="token punctuation">,</span>            <span class="token string">'queue'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'default'</span><span class="token punctuation">,</span>            <span class="token string">'retry_after'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">90</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'beanstalkd'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>            <span class="token string">'driver'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'beanstalkd'</span><span class="token punctuation">,</span>            <span class="token string">'host'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'localhost'</span><span class="token punctuation">,</span>            <span class="token string">'queue'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'default'</span><span class="token punctuation">,</span>            <span class="token string">'retry_after'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">90</span><span class="token punctuation">,</span>            <span class="token string">'block_for'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'sqs'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>            <span class="token string">'driver'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'sqs'</span><span class="token punctuation">,</span>            <span class="token string">'key'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'AWS_ACCESS_KEY_ID'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'secret'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'AWS_SECRET_ACCESS_KEY'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'prefix'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'SQS_PREFIX'</span><span class="token punctuation">,</span> 'https<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//sqs.us-east-1.amazonaws.com/your-account-id'),</span>            <span class="token string">'queue'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'SQS_QUEUE'</span><span class="token punctuation">,</span> <span class="token string">'your-queue-name'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'region'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'AWS_DEFAULT_REGION'</span><span class="token punctuation">,</span> <span class="token string">'us-east-1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'redis'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>            <span class="token string">'driver'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'redis'</span><span class="token punctuation">,</span>            <span class="token string">'connection'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'default'</span><span class="token punctuation">,</span>            <span class="token string">'queue'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_QUEUE'</span><span class="token punctuation">,</span> <span class="token string">'default'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'retry_after'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">90</span><span class="token punctuation">,</span>            <span class="token string">'block_for'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">null</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/*    |--------------------------------------------------------------------------    | 失败队列的处理    |--------------------------------------------------------------------------    |        | 队列失败后可以记录下来，以便 Debug 的操作。一般性都选择存储在 MySQL 当中。    |    */</span>    <span class="token string">'failed'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>        <span class="token string">'driver'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'QUEUE_FAILED_DRIVER'</span><span class="token punctuation">,</span> <span class="token string">'database'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'database'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'DB_CONNECTION'</span><span class="token punctuation">,</span> <span class="token string">'mysql'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'table'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'failed_jobs'</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">driver</td><td align="center">驱动的程序</td></tr><tr><td align="center">connection</td><td align="center">连接程序</td></tr><tr><td align="center">queue</td><td align="center">队列名称</td></tr><tr><td align="center">retry_after</td><td align="center">指定在重试正在处理的任务之前，队列连接应等待多少秒，如果任务已经处理了 90 秒而没有被删除，那么它将被释放回队列</td></tr><tr><td align="center">block_for</td><td align="center">阻塞，将block_for 设置为 0  将导致队列  workers  一直阻塞，直到某一个任务变得可用。这还能防止在下一个任务被处理之前处理诸如  SIGTERM  之类的信号</td></tr></tbody></table><p>下面是我遇到过的问题，注意一下，如果不知道的话确实比较搞人，本地一切正常，Push 到线上后却无法执行，不知道原因的话，就非常之难受了，我已经难受过一次了，切记切记。唯一改变的就是 Queue，连接 Redis 集群，队列名称就必须包含一个 <a href="https://redis.io/topics/cluster-spec#keys-hash-tags" target="_blank" rel="noopener">key hash tag</a>。这是为了确保一个给定队列的所有 Redis 键都被放在同一个哈希槽。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token shell-comment comment"># redis 集群版本配置</span><span class="token string">'redis'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>    <span class="token string">'driver'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'redis'</span><span class="token punctuation">,</span>    <span class="token string">'connection'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'queue'</span><span class="token punctuation">,</span>    <span class="token string">'queue'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'{default}'</span><span class="token punctuation">,</span>    <span class="token string">'retry_after'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">90</span><span class="token punctuation">,</span>      <span class="token string">'block_for'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上配置都是针对 <code>config/queue.php</code>配置，在配置好队列以后，可用在 <code>config/database.php</code>配置 Redis 的驱动，当然也可用使用默认的配置。</p><pre class="line-numbers language-php"><code class="language-php">    <span class="token string">'redis'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>        <span class="token string">'client'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'predis'</span><span class="token punctuation">,</span>        <span class="token string">'default'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>            <span class="token string">'host'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_HOST'</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'password'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_PASSWORD'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'port'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_PORT'</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'database'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_DB'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'cache'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>            <span class="token string">'host'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_HOST'</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'password'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_PASSWORD'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'port'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_PORT'</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'database'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_CACHE_DB'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'queue'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span> <span class="token shell-comment comment"># 这里新建的 queue 那么就对应上 “队列名称”</span>            <span class="token string">'host'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_HOST'</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'password'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_PASSWORD'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'port'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_PORT'</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'database'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string">'REDIS_DB'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><p>创建一个队列的任务类，直接使用 artisan 命令即可快速的创建一个队列任务类。执行以下命令，会在项目目录下 <code>app\jobs</code>生成创建的队列任务类。</p><pre class="line-numbers language-bash"><code class="language-bash">php artisan make:job JobName<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Jobs</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Bus<span class="token punctuation">\</span>Queueable</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Queue<span class="token punctuation">\</span>SerializesModels</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Queue<span class="token punctuation">\</span>InteractsWithQueue</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Contracts<span class="token punctuation">\</span>Queue<span class="token punctuation">\</span>ShouldQueue</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Foundation<span class="token punctuation">\</span>Bus<span class="token punctuation">\</span>Dispatchable</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Name</span> <span class="token keyword">implements</span> <span class="token class-name">ShouldQueue</span><span class="token punctuation">{</span>    <span class="token keyword">use</span> <span class="token package">Dispatchable</span><span class="token punctuation">,</span> InteractsWithQueue<span class="token punctuation">,</span> Queueable<span class="token punctuation">,</span> SerializesModels<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/**    * 任务可以尝试的最大次数。    *    * @var int    */</span>    <span class="token keyword">public</span> <span class="token variable">$tries</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**    * 任务可以执行的最大秒数 (超时时间)。    *    * @var int    */</span>    <span class="token keyword">public</span> <span class="token variable">$timeout</span> <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Create a new job instance.     *     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 可以接收传递的参数，最为初始化。</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * Execute the job.     *     * @return void     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 执行队列的业务逻辑处，当然也可以调用外部的 Controller 或是 Service Model 之类。</span>    <span class="token punctuation">}</span>     <span class="token comment" spellcheck="true">/**     * 错误的处理     * @param Exception $e     * */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">failed</span><span class="token punctuation">(</span>Exception <span class="token variable">$e</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// failed 会捕捉全局异常（不管系统还是你自己抛出的全局异常），也就是出现异常了，这里可以处理出现异常的逻辑，比如一些业务场景下，出现全局异常了，我们会给用户发一份邮件...</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>队列可以理解为缓存的 HTTP 请求处理，用户的 TCP 链接早已断开，而我们的 PHP 只所以还在跑是因为一个进程管理工具，守护管理着我们的进程。Supervisor 就是一个我们最常用的进程管理工具，通过 Supervisor  运行 PHP ，从而实现了异步的操作，功劳全部都在 Supervisor 上面，当然进程管理的工具很多选择适合公司项目而定。</p></blockquote><h3 id="调用队列"><a href="#调用队列" class="headerlink" title="调用队列"></a>调用队列</h3><p>这里只说简单的操作，其他复杂操作可以咨询阅读文档。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// 这个任务将被分发到默认队列</span>Job<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 这个任务将被分发到默认队列-使用此方法时，队列任务将不会排队，并立即在当前进程中运行</span><span class="token comment" spellcheck="true">// 同步驱动无法指定驱动和指定队列,当然队列也可以有执行的优先级，下面会说。</span>Job<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">dispatchNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 这个任务将被分发到指定的驱动当中</span>Job<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">onConnection</span><span class="token punctuation">(</span><span class="token string">'驱动'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 这个任务将被分发到指定队列当中</span>Job<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">onQueue</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 这个任务将分发到指定的驱动当中指定的队列当中</span>Job<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">onConnection</span><span class="token punctuation">(</span><span class="token string">'驱动'</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">onQueue</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 比较实用的延迟队列，如做订单的一些列操作，延迟10分钟，注意：Amazon SQS 队列服务最大延迟 15 分钟的时间。</span>Job<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addMinutes</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h3><p>Supervisor (<a href="http://supervisord.org/" target="_blank" rel="noopener">http://supervisord.org</a>) 是一个用 Python 写的进程管理工具，可以很方便的用来启动、重启、关闭进程（不仅仅是 Python 进程）。除了对单个进程的控制，还可以同时启动、关闭多个进程，比如很不幸的服务器出问题导致所有应用程序都被杀死，此时可以用 Supervisor 同时启动所有应用程序而不是一个一个地敲命令启动。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> supervisor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当安装完成之后会在 <code>/etc/supervisor</code>文件目录当中，此时不需要去修改任何的配置文件。</p><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">[</span>program<span class="token punctuation">:</span>queue<span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 程序的名字，在 Supervisor 中可以用这个名字来管理该程序。</span>process_name=%(program_name)s_%(process_num)02d <span class="token comment" spellcheck="true"># 进程的名称与进程的 ID</span>command=/usr/local/bin/php /var/www/html/artisan queue<span class="token punctuation">:</span>work redis <span class="token punctuation">-</span><span class="token punctuation">-</span>quiet <span class="token punctuation">-</span><span class="token punctuation">-</span>delay=3 <span class="token punctuation">-</span><span class="token punctuation">-</span>sleep=3 <span class="token punctuation">-</span><span class="token punctuation">-</span>tries=3 <span class="token comment" spellcheck="true"># 启动执行的命令，记住这里是命令，使用绝对路径</span>autostart=true <span class="token comment" spellcheck="true"># 启动的时候也自动启动</span>autorestart=true <span class="token comment" spellcheck="true"># 程序异常退出后自动重启</span>user=root <span class="token comment" spellcheck="true"># 那个用户来启动</span>numprocs=8 <span class="token comment" spellcheck="true"># 进程的数量</span>redirect_stderr=true <span class="token comment" spellcheck="true"># 把 stderr 重定向到 stdout，默认 false</span>stdout_logfile=/etc/supervisor/redis.log <span class="token comment" spellcheck="true"># stdout 日志文件</span>stopwaitsecs=3600 <span class="token comment" spellcheck="true"># 一个强制kill的信号。默认为 10 秒</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 先读取配置文件</span>supervisord -c /etc/supervisor/supervisord.conf<span class="token comment" spellcheck="true"># 读取有更新（增加）的配置文件，不会启动新添加的程序</span>supervisorctl reread<span class="token comment" spellcheck="true"># 重启配置文件修改过的程序</span>supervisorctl update<span class="token comment" spellcheck="true"># 启动</span>supervisorctl start all<span class="token comment" spellcheck="true"># 查看状态</span>supervisorctl status<span class="token comment" spellcheck="true"># 停止</span>supervisorctl stop all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Laravel-Queue"><a href="#Laravel-Queue" class="headerlink" title="Laravel Queue"></a>Laravel Queue</h4><p>关于 Laravel 队列的一些命令与参数的说明，另外现在不推荐使用 listen 来监听，推荐使用 work 来间提供队列。</p><p>命令：</p><table><thead><tr><th align="center">命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">queue:failed</td><td align="center">列出所有失败队列，要先保存失败队列才能使用</td></tr><tr><td align="center">queue:failed-table</td><td align="center">执行队列错误记录的迁移文件</td></tr><tr><td align="center">queue:flush</td><td align="center">刷新所有失败的队列作业</td></tr><tr><td align="center">queue:forget</td><td align="center">删除失败的队列作业</td></tr><tr><td align="center">queue:listen</td><td align="center">监听队列（本地开发可使用，线上不推荐使用）</td></tr><tr><td align="center">queue:restart</td><td align="center">重新启动队列工作程序守护程序（每次修改队列代码后必执行）</td></tr><tr><td align="center">queue:retry</td><td align="center">重试失败的队列作业</td></tr><tr><td align="center">queue:table</td><td align="center">生成队列失败记录的数据库表创建迁移文件</td></tr><tr><td align="center">queue:work</td><td align="center">监听队列（推荐使用）</td></tr></tbody></table><p>参数：</p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">–quiet</td><td align="center">不输出任何内容，就是执行成功与否都不会记录在 stdout_logfile 当中</td></tr><tr><td align="center">–delay=3</td><td align="center">任务失败后延时多久重试，单位秒</td></tr><tr><td align="center">–sleep</td><td align="center">进程休眠的时间，单位秒，这个是最重要的下面会说明为啥重要</td></tr><tr><td align="center">–queue</td><td align="center">队列执行的优先级，越前面越优先执行</td></tr><tr><td align="center">–tries</td><td align="center">队列失败最大的重试数量</td></tr><tr><td align="center">–timeout</td><td align="center">任务执行最大执行的时间（超时时间），单位秒</td></tr></tbody></table><blockquote><p>关于队列基本知道这些就够用了，但是 8.X 新增了不少特性，以后有机会在更新，现在还没使用到就先不提了。其他更多细节官方文档链接：<a href="https://learnku.com/docs/laravel/6.x/queues/5168#supervisor-configuration" target="_blank" rel="noopener">点我跳转</a>。</p></blockquote><h3 id="进程管理-1"><a href="#进程管理-1" class="headerlink" title="进程管理"></a>进程管理</h3><p>上面说过了这玩意干啥滴，下面介绍一些细节上面的东西，上面 Laravel 队列当中有个特别让人注意的地方，sleep 为啥说这个特别让人注意呢。</p><p>Supervisor 有一个必须的参数 startsecs 在启动后多少秒没有异常退出就表示正常的启动，默认为 1 秒。简单点来说，启动之后如果 1 秒都没到就退出执行了那么就表示异常，此时 Supervisor 就是报错，启动的 Supervisor 主进程就会挂逼。</p><p>在使用到了进程想一个问题，PHP 代码执行不到 1 秒就完成了退出了那么此时就是错误，还有进程它们是并行去执行 PHP 脚本，如果处理的数据并发有要求，那么肯定不可能同一时间就放所有进程去跑 PHP 脚本。Laravel 的队列也是使用到了锁，当这个进程去跑特定的一个队列时，第二个进程也进来了，此时这个进程获取不到锁，那么就进不去核心业务逻辑的代码，就马上会退出，其速度估计毫秒或者微妙之间就完成了，但是 Supervisor 的 startsecs 默认是 1 秒，1 秒都没有它就认为异常了，那么主进程就挂逼了，所以有个 sleep 的机制。这也是为啥说 sleep 非常重要了。</p><p>这也是我最近写多进程并发跑脚本发现的一个问题，如果有人也遇到这个问题了，可以看看 startsecs  这个参数的含义。多进程并发执行脚本，不依赖 PHP 的多进程扩展，依赖 Supervisor 来完成操作，<a href="https://daixianjin.github.io/2020/12/17/PHP-%E5%A4%9A%E8%BF%9B%E7%A8%8B%E4%BB%BB%E5%8A%A1/">点我跳转</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins + 码云 自动部署 PHP 项目</title>
      <link href="/2020/05/23/jenkins-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
      <url>/2020/05/23/jenkins-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>Jenkins 是一款由 <a href="https://zh.wikipedia.org/wiki/Java" target="_blank" rel="noopener">Java</a> 编写的<a href="https://zh.wikipedia.org/wiki/开源" target="_blank" rel="noopener">开源</a>的<a href="https://zh.wikipedia.org/wiki/持续集成" target="_blank" rel="noopener">持续集成</a>工具。在与 <a href="https://zh.wikipedia.org/wiki/Oracle" target="_blank" rel="noopener">Oracle</a> 发生争执后，项目从 <a href="https://zh.wikipedia.org/wiki/Hudson_(软件)" target="_blank" rel="noopener">Hudson</a> 项目<a href="https://zh.wikipedia.org/wiki/复刻_(软件工程)" target="_blank" rel="noopener">复刻</a>。这个关系就跟 MySQL 和 MariaDB 关系一样。只能说 <a href="https://zh.wikipedia.org/wiki/Oracle" target="_blank" rel="noopener">Oracle</a> 故事真多！！！</p><p>Jenkins 提供了软件开发的持续集成服务。它运行在 Servlet 容器中（例如 Apache Tomcat）。</p><p>它支持<a href="https://zh.wikipedia.org/wiki/软件配置管理" target="_blank" rel="noopener">软件配置管理</a>（SCM）工具（包括 <a href="https://zh.wikipedia.org/w/index.php?title=AccuRev_SCM&action=edit&redlink=1" target="_blank" rel="noopener">AccuRev SCM</a>、<a href="https://zh.wikipedia.org/wiki/CVS" target="_blank" rel="noopener">CVS</a>、<a href="https://zh.wikipedia.org/wiki/Subversion" target="_blank" rel="noopener">Subversion</a>、<a href="https://zh.wikipedia.org/wiki/Git" target="_blank" rel="noopener">Git</a>、<a href="https://zh.wikipedia.org/w/index.php?title=Perforce&action=edit&redlink=1" target="_blank" rel="noopener">Perforce</a>、<a href="https://zh.wikipedia.org/w/index.php?title=Clearcase&action=edit&redlink=1" target="_blank" rel="noopener">Clearcase</a> 和 <a href="https://zh.wikipedia.org/w/index.php?title=Rational_Team_Concert&action=edit&redlink=1" target="_blank" rel="noopener">RTC</a>），可以执行基于<a href="https://zh.wikipedia.org/wiki/Apache_Ant" target="_blank" rel="noopener">Apache Ant</a> 和 <a href="https://zh.wikipedia.org/wiki/Apache_Maven" target="_blank" rel="noopener">Apache Maven</a> 的项目，以及任意的 <a href="https://zh.wikipedia.org/wiki/Shell脚本" target="_blank" rel="noopener">Shell脚本</a> 和 Windows <a href="https://zh.wikipedia.org/wiki/批次檔" target="_blank" rel="noopener">批处理命令</a>。可以通过各种手段触发构建。例如提交给版本控制系统时被触发，也可以通过类似 <a href="https://zh.wikipedia.org/wiki/Cron" target="_blank" rel="noopener">Cron</a> 的机制调度，也可以在其他的构建已经完成时，还可以通过一个特定的 <a href="https://zh.wikipedia.org/wiki/URL" target="_blank" rel="noopener">URL</a> 进行请求。</p><h4 id="持续集成是什么？"><a href="#持续集成是什么？" class="headerlink" title="持续集成是什么？"></a>持续集成是什么？</h4><h5 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h5><p>互联网软件的开发和发布，已经形成了一套标准流程，最重要的组成部分就是持续集成（Continuous integration，简称 CI）。</p><p><strong>持续集成指的是，频繁地（一天多次）将代码集成到主干。</strong></p><p>它的好处主要有两个。</p><ol><li><strong>快速发现错误。</strong>每完成一点更新，就集成到主干，可以快速发现错误，定位错误也比较容易。</li><li><strong>防止分支大幅偏离主干。</strong>如果不是经常集成，主干又在不断更新，会导致以后集成的难度变大，甚至难以集成。</li></ol><p><strong>持续集成的目的，就是让产品可以快速迭代，同时还能保持高质量。</strong>它的核心措施是，代码集成到主干之前，必须通过自动化测试。只要有一个测试用例失败，就不能集成。</p><p>Martin Fowler 说过，”持续集成并不能消除 Bug，而是让它们非常容易发现和改正。”</p><p>与持续集成相关的，还有两个概念，分别是持续交付和持续部署。</p><h5 id="持续交付"><a href="#持续交付" class="headerlink" title="持续交付"></a>持续交付</h5><p><strong>持续交付（Continuous delivery）指的是，频繁地将软件的新版本，交付给质量团队或者用户，以供评审。</strong>如果评审通过，代码就进入生产阶段。</p><p>持续交付可以看作持续集成的下一步。它强调的是，不管怎么更新，软件是随时随地可以交付的。</p><h5 id="持续部署"><a href="#持续部署" class="headerlink" title="持续部署"></a>持续部署</h5><p><strong>持续部署（continuous deployment 简称 CD）是持续交付的下一步，指的是代码通过评审以后，自动部署到生产环境。</strong></p><p>持续部署的目标是，代码在任何时刻都是可部署的，可以进入生产阶段。</p><h5 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h5><h6 id="1、提交"><a href="#1、提交" class="headerlink" title="1、提交"></a>1、提交</h6><p>流程的第一步，是开发者向代码仓库提交代码。所有后面的步骤都始于本地代码的一次提交（commit）。</p><h6 id="2、测试（第一轮）"><a href="#2、测试（第一轮）" class="headerlink" title="2、测试（第一轮）"></a>2、测试（第一轮）</h6><p>代码仓库对 commit 操作配置了钩子（hook），只要提交代码或者合并进主干，就会跑自动化测试。</p><p>测试有好几种。</p><ul><li>单元测试：针对函数或模块的测试</li><li>集成测试：针对整体产品的某个功能的测试，又称功能测试</li><li>端对端测试：从用户界面直达数据库的全链路测试</li></ul><p>第一轮至少要跑单元测试。</p><h6 id="3、构建"><a href="#3、构建" class="headerlink" title="3、构建"></a>3、构建</h6><p>通过第一轮测试，代码就可以合并进主干，就算可以交付了。</p><p>交付后，就先进行构建（build），再进入第二轮测试。所谓构建，指的是将源码转换为可以运行的实际代码，比如安装依赖，配置各种资源（样式表、JS脚本、图片）等等。</p><p>常用的构建工具如下。</p><ul><li><a href="http://jenkins-ci.org/" target="_blank" rel="noopener">Jenkins</a></li><li><a href="https://travis-ci.com/" target="_blank" rel="noopener">Travis</a></li><li><a href="https://www.codeship.io/" target="_blank" rel="noopener">Codeship</a></li><li><a href="http://stridercd.com/" target="_blank" rel="noopener">Strider</a></li></ul><p>Jenkins 和 Strider 是开源软件，Travis 和 Codeship 对于开源项目可以免费使用。它们都会将构建和测试，在一次运行中执行完成。</p><h6 id="4、测试（第二轮）"><a href="#4、测试（第二轮）" class="headerlink" title="4、测试（第二轮）"></a>4、测试（第二轮）</h6><p>构建完成，就要进行第二轮测试。如果第一轮已经涵盖了所有测试内容，第二轮可以省略，当然，这时构建步骤也要移到第一轮测试前面。</p><p>第二轮是全面测试，单元测试和集成测试都会跑，有条件的话，也要做端对端测试。所有测试以自动化为主，少数无法自动化的测试用例，就要人工跑。</p><p>需要强调的是，新版本的每一个更新点都必须测试到。如果测试的覆盖率不高，进入后面的部署阶段后，很可能会出现严重的问题。</p><h6 id="5、部署"><a href="#5、部署" class="headerlink" title="5、部署"></a>5、部署</h6><p>通过了第二轮测试，当前代码就是一个可以直接部署的版本（artifact）。将这个版本的所有文件打包（ <code>tar filename.tar</code> ）存档，发到生产服务器。</p><p>生产服务器将打包文件，解包成本地的一个目录，再将运行路径的符号链接（symlink）指向这个目录，然后重新启动应用。这方面的部署工具有 <a href="http://www.ansible.com/" target="_blank" rel="noopener">Ansible</a>，<a href="https://www.chef.io/chef/" target="_blank" rel="noopener">Chef</a>，<a href="https://puppetlabs.com/" target="_blank" rel="noopener">Puppet</a> 等。</p><h6 id="6、回滚"><a href="#6、回滚" class="headerlink" title="6、回滚"></a>6、回滚</h6><p>一旦当前版本发生问题，就要回滚到上一个版本的构建结果。最简单的做法就是修改一下符号链接，指向上一个版本的目录。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="Java-JDK，是-Jenkins-必备，如已安装请忽略，当前安装都以-Centos-为标准"><a href="#Java-JDK，是-Jenkins-必备，如已安装请忽略，当前安装都以-Centos-为标准" class="headerlink" title="Java JDK，是 Jenkins 必备，如已安装请忽略，当前安装都以 Centos 为标准"></a>Java JDK，是 Jenkins 必备，如已安装请忽略，当前安装都以 Centos 为标准</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 1、查看是否已安装 </span>java -version<span class="token comment" spellcheck="true"># 2、如没有安装，安装 JDK</span>yum <span class="token function">install</span> java-1.8.0-openjdk-devel.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Jenkins-软件源"><a href="#Jenkins-软件源" class="headerlink" title="Jenkins  软件源"></a>Jenkins  软件源</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">wget</span> -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo<span class="token function">sudo</span> rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.keyyum <span class="token function">install</span> jenkins<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此 Jenkins 就算已经安装好，但是安装好了还不算完事，还需要对 Jenkins 进行一些配置，看项目需求而定。</p><h4 id="Jenkins-配置"><a href="#Jenkins-配置" class="headerlink" title="Jenkins 配置"></a>Jenkins 配置</h4><p>修改 Jenkins 当中默认的用户，修改成 root 用户，和 Jenkins 默认监听的端口，Jenkins 默认监听的 8080，如跟自己的一些软件有冲突，也可以自定义监听的端口。</p><pre class="line-numbers language-bash"><code class="language-bash">vim /etc/sysconfig/jenkins<span class="token comment" spellcheck="true">#  29  行，JENKINS_USER="jenkins"</span>JENKINS_USER<span class="token operator">=</span><span class="token string">"root"</span><span class="token comment" spellcheck="true"># 58 行，JENKINS_PORT="8080"</span>JENKINS_PORT<span class="token operator">=</span><span class="token string">"xxxx"</span><span class="token comment" spellcheck="true"># 保存，重启 Jenkins</span><span class="token function">service</span> jenkins restart<span class="token comment" spellcheck="true"># 修改权限</span><span class="token function">chown</span> -R root:root /var/log/jenkins<span class="token function">chown</span> -R root:root /var/lib/jenkins<span class="token function">chown</span> -R root:root /var/cache/jenkins<span class="token comment" spellcheck="true"># 修改 /etc/init.d/jenkins</span>candidates<span class="token operator">=</span><span class="token string">" /etc/alternatives/java /usr/lib/jvm/java-1.8.0/bin/java /usr/lib/jvm/jre-1.8.0/bin/java /usr/lib/jvm/java-1.7.0/bin/java /usr/lib/jvm/jre-1.7.0/bin/java /usr/lib/jvm/java-11.0/bin/java /usr/lib/jvm/jre-11.0/bin/java /usr/lib/jvm/java-11-openjdk-amd64 /usr/bin/java "</span><span class="token comment" spellcheck="true"># 在里面加上自己的 JDK 路径，如果是 yum 安装 那么就在 /usr/lib/jvm 当中</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Jenkins 基本的四个命令</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 查看状态</span><span class="token function">service</span> jenkins status<span class="token comment" spellcheck="true"># 启动 </span><span class="token function">service</span> jenkins start<span class="token comment" spellcheck="true"># 重启</span><span class="token function">service</span> jenkins restart<span class="token comment" spellcheck="true"># 停止</span><span class="token function">service</span> jenkins stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>正常的状态</p><pre class="line-numbers language-bash"><code class="language-bash">● jenkins.service - LSB: Jenkins Automation Server   Loaded: loaded <span class="token punctuation">(</span>/etc/rc.d/init.d/jenkins<span class="token punctuation">;</span> bad<span class="token punctuation">;</span> vendor preset: disabled<span class="token punctuation">)</span>   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Sun 2020-05-24 19:38:08 CST<span class="token punctuation">;</span> 2h 45min ago     Docs: man:systemd-sysv-generator<span class="token punctuation">(</span>8<span class="token punctuation">)</span>  Process: 11681 ExecStop<span class="token operator">=</span>/etc/rc.d/init.d/jenkins stop <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, status<span class="token operator">=</span>0/SUCCESS<span class="token punctuation">)</span>  Process: 11738 ExecStart<span class="token operator">=</span>/etc/rc.d/init.d/jenkins start <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, status<span class="token operator">=</span>0/SUCCESS<span class="token punctuation">)</span>   CGroup: /system.slice/jenkins.service           └─11759 /etc/alternatives/java -Dcom.sun.akuma.Daemon<span class="token operator">=</span>daemonized -Djava.awt.headless<span class="token operator">=</span>true -DJENKINS_HOME<span class="token operator">=</span>/var/lib/jenkins -jar /usr/lib/jenkins/<span class="token punctuation">..</span>.May 24 19:38:08 iZ8vbhj6wlgflm1cdhbzbnZ systemd<span class="token punctuation">[</span>1<span class="token punctuation">]</span>: Starting LSB: Jenkins Automation Server<span class="token punctuation">..</span>.May 24 19:38:08 iZ8vbhj6wlgflm1cdhbzbnZ runuser<span class="token punctuation">[</span>11743<span class="token punctuation">]</span>: pam_unix<span class="token punctuation">(</span>runuser:session<span class="token punctuation">)</span>: session opened <span class="token keyword">for</span> user root by <span class="token punctuation">(</span>uid<span class="token operator">=</span>0<span class="token punctuation">)</span>May 24 19:38:08 iZ8vbhj6wlgflm1cdhbzbnZ systemd<span class="token punctuation">[</span>1<span class="token punctuation">]</span>: Started LSB: Jenkins Automation Server.May 24 19:38:08 iZ8vbhj6wlgflm1cdhbzbnZ jenkins<span class="token punctuation">[</span>11738<span class="token punctuation">]</span>: Starting Jenkins <span class="token punctuation">[</span>  OK  <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Dokcer-安装"><a href="#Dokcer-安装" class="headerlink" title="Dokcer 安装"></a>Dokcer 安装</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 1、拉取 Jenkins 镜像</span>docker pull jenkins/jenkins:lts<span class="token comment" spellcheck="true"># 2、创建映射目录</span><span class="token function">mkdir</span> /opt/jenkins<span class="token function">chmod</span> -R 777 jenkins<span class="token comment" spellcheck="true"># 3、创建容器</span>docker run -p 8080:8080 -p 50000:50000 -v /opt/jenkins:/var/jenkins_home -d jenkins/jenkins:lts<span class="token comment" spellcheck="true"># 创建容器的一些命令，这里就不过多说了，有性趣可以看我那篇 Docker 文章</span><span class="token comment" spellcheck="true"># 官方 Dokcer 安装 Jenkins 教程地址：https://github.com/jenkinsci/docker/blob/master/README.md</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Web-配置"><a href="#Web-配置" class="headerlink" title="Web 配置"></a>Web 配置</h4><p>在那我们不管是 Docker 搭建好了或者原生安装，<a href="http://ip:port" target="_blank" rel="noopener">http://ip:port</a> 就可以访问 Jenkens 了，如果访问不通怎么办？</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 首先看服务器内外是否有返回内容</span>curl 127.0.0.1:prot<span class="token comment" spellcheck="true"># 出现以下说明已经搭建好了 Jenkins，如果服务器 IP 不能访问，绝大的问题在服务商的安全组规则，阿里云为例。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/%E6%88%AA%E5%9B%BE%E5%BD%95%E5%B1%8F_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200524220622.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-24_22-13.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-24_22-14.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-24_22-17.png" alt></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 原生安装获取密码</span><span class="token function">cat</span> /var/jenkins_home/secrets/initialAdminPassword<span class="token comment" spellcheck="true"># Dokcer 安装获取密码，刚才映射目录里面获取</span><span class="token function">cat</span> /opt/jenkins/secrets/initialAdminPassword<span class="token comment" spellcheck="true"># 到此安装 Jenkins 前部步骤就已完成，Dokcer 因为是打包好了的可以省去我们很多事情，原生安装就稍微麻烦一些，不过这个都看自己如何去使用了。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-25_10-03.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-25_10-04.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-25_10-07.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-25_10-08.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-25_10-13.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-25_10-13_1.png" alt></p><h4 id="设置中文"><a href="#设置中文" class="headerlink" title="设置中文"></a>设置中文</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_14-52.png" alt></p><p>在可选插件里面搜索：Localization 插件并且安装</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_15-00.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_15-01.png" alt></p><blockquote><p>如果更新了什么插件重启了，中文化又不完整了咋办？不用慌，先把 Localization 关闭重启，之后开启在重启!</p></blockquote><h3 id="构建项目"><a href="#构建项目" class="headerlink" title="构建项目"></a>构建项目</h3><h4 id="1、安装插件"><a href="#1、安装插件" class="headerlink" title="1、安装插件"></a>1、安装插件</h4><p>Git Parameter  + Gitee Plugin + Phing +Publish Over SSH，插件安装就是这样样子</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_10-22.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_10-23.png" alt></p><h4 id="2、码云配置"><a href="#2、码云配置" class="headerlink" title="2、码云配置"></a>2、码云配置</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_15-55.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-31_18-07.png" alt></p><ul><li>链接名称：随便填…</li><li>Gitee 域名 URL：<a href="https://gitee.com" target="_blank" rel="noopener">https://gitee.com</a></li><li>证书令牌：添加 -&gt; jenkins </li></ul><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_16-14.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_16-08.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_16-11.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_16-15.png" alt></p><h4 id="3、SSH-设置"><a href="#3、SSH-设置" class="headerlink" title="3、SSH 设置"></a>3、SSH 设置</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-06-01_21-12.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-06-01_21-13.png" alt></p><h4 id="4、创建一个项目"><a href="#4、创建一个项目" class="headerlink" title="4、创建一个项目"></a>4、创建一个项目</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_15-07.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-31_19-45.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_16-50.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_16-51.png" alt></p><p>触发 HOOK ，在码云项目找到 Settings -&gt; WebHooks -&gt; add</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_17-02.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-05-29_17-08.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-06-01_21-17.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-06-01_21-19.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/2020-06-01_21-25.png" alt></p><blockquote><p>参考地址：</p><p><a href="http://www.ruanyifeng.com/blog/2015/09/continuous-integration.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2015/09/continuous-integration.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 持续集成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 持续集成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用 Github + PicGo + JsDelivr 搭建免费高速图床</title>
      <link href="/2020/04/20/%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%9B%BE%E5%BA%8A/"/>
      <url>/2020/04/20/%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>以前使用的微博图床，我使用 Manjaro 18 版本的时候 Chrome 插件好好的可以使用，但是有一次重新装了一次系统后凉了，也找不到解决方法，放弃了。SM.SM 虽然免费使用，也是现在一直使用的图床，但是最近出来了收费模式，突然感觉速度上好像慢了那么点，也可能是心里作用吧。刚好也看见一篇文章利用 Github 做仓库，在配合着 PicGo 使用，感觉上有东西啊，毕竟 Github 是免费的而且不限大小，说着走起！</p><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><h4 id="1、创建一个新的仓库"><a href="#1、创建一个新的仓库" class="headerlink" title="1、创建一个新的仓库"></a>1、创建一个新的仓库</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200421144549.png" alt></p><h4 id="2、设置授权-Token"><a href="#2、设置授权-Token" class="headerlink" title="2、设置授权 Token"></a>2、设置授权 Token</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200421144732.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200421144810.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200421144831.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200421145553.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200421145658.png" alt></p><h3 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h3><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200421153900.png" alt></p><p>格式：</p><ul><li><p>设定仓库名：刚才新创建的仓库</p></li><li><p>设定分支名：一般默认使用 master 当然也可以选择别的分支</p></li><li><p>设定 Token ：第二步操作所得的授权 Token ，他是来调用 Github 接口所用</p></li><li><p>指定存储路径：可以自行在仓库下面创建文件目录，然后指定自己想储存的目录，也可以不选择存储目录</p></li><li><p>设定自定义的域名：利用 <strong>jsDelivr</strong> 来免费加速我们的访问，格式是：<a href="https://cdn.jsdelivr.net/gh/Github用户名/创建的仓库名" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/Github用户名/创建的仓库名</a></p></li></ul><blockquote><p>参考地址：<br><a href="https://www.itrhx.com/2019/08/01/A27-image-hosting/" target="_blank" rel="noopener">https://www.itrhx.com/2019/08/01/A27-image-hosting/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Manjaro 打造舒适的桌面开发环境</title>
      <link href="/2020/04/18/Manjaro/"/>
      <url>/2020/04/18/Manjaro/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>萝卜青菜各有所爱，Linux 桌面可以说常年是一个大乱斗的环境，谁都不服谁，也没有人能站出来统一天下，也不可能统一，毕竟开源自由是 Linux 的宗旨！这也算 Linux 的魅力之一吧！！！不同于 Windows 和 OS X 的软件生态，Linux 确实弱了那么[一点]，我觉得这么[一点]的范围应该是我们国人日常用些的一些生活娱乐软件，不过在我日常的开发和生活娱乐下，Linux 的软件完全够用，当然如果玩游戏的话那么 Windows 是不二的选择。</p><p><strong>Manjaro Linux</strong> 是基于 <a href="https://zh.wikipedia.org/wiki/Arch_Linux" target="_blank" rel="noopener">Arch Linux</a> 的 Linux 发行版，使用 Xfce 、KDE Plasma 、GNOME 作为默认桌面环境，当然除了这三个以外还有众多的社区版本提供选择。Manjaro 和 Arch 一样，都采用滚动更新模式。其目标是为 PC 提供易于使用的自由的操作系统。</p><p>为什么会选择 Manjaro 这个发行版本呢？</p><ol><li>滚动升级</li><li>自动硬件检测安装，最新的款电脑显卡可能无法兼容（同事最新款联想小新无法兼容）</li><li>先进的包管理、最多软件支持的 Linux 发行版本</li><li>超级高度用户自定义、桌面、主题、界面、文件、操作、显示等等，全部放权给用户自己操作</li><li>软件包版本同步快，基本发行软件版本持平</li><li>超级稳定，兼容性好</li><li>Linux 桌面系统排行榜：<a href="https://distrowatch.com/" target="_blank" rel="noopener">https://distrowatch.com/</a></li></ol><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/TWKqyaZzEUmnOR7.webp" alt></p><h3 id="切换源"><a href="#切换源" class="headerlink" title="切换源"></a>切换源</h3><h4 id="自动选择源，Manjaro-官方源"><a href="#自动选择源，Manjaro-官方源" class="headerlink" title="自动选择源，Manjaro 官方源"></a>自动选择源，Manjaro 官方源</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 自动选择源</span><span class="token function">sudo</span> pacman-mirrors -i -c China -m rank <span class="token comment" spellcheck="true"># 强制更新源</span><span class="token function">sudo</span> pacman -Syy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/eSAmPTD4g7nRCwI.webp" alt></p><h4 id="手动配置软件源，非官方源-Arch-Linux-国内源，中科大源"><a href="#手动配置软件源，非官方源-Arch-Linux-国内源，中科大源" class="headerlink" title="手动配置软件源，非官方源 Arch Linux 国内源，中科大源"></a>手动配置软件源，非官方源 Arch Linux 国内源，中科大源</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 修改配置文件，添加配置到末尾</span><span class="token function">sudo</span> vim /etc/pacman.conf<span class="token punctuation">[</span>archlinuxcn<span class="token punctuation">]</span>SigLevel <span class="token operator">=</span> Optional TrustedOnlyServer <span class="token operator">=</span> https://mirrors.ustc.edu.cn/archlinuxcn/<span class="token variable">$arch</span><span class="token comment" spellcheck="true"># 导入 GPG Key</span><span class="token function">sudo</span> pacman -Syy <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> pacman -S archlinuxcn-keyring<span class="token comment" spellcheck="true"># 强制更新包数据，同时更新软件</span><span class="token function">sudo</span> pacman -Syyu <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="常用包管理命令"><a href="#常用包管理命令" class="headerlink" title="常用包管理命令"></a>常用包管理命令</h3><table><thead><tr><th align="center">命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">pacman -Syy</td><td align="center">强制更新源</td></tr><tr><td align="center">pacman -Syyu</td><td align="center">强制更新包数据，同时更新软件</td></tr><tr><td align="center">pacman -S package</td><td align="center">安装包</td></tr><tr><td align="center">pacman -Ss package</td><td align="center">查询包</td></tr><tr><td align="center">pacman -Qs package</td><td align="center">查询已安装包</td></tr><tr><td align="center">pacman -U package</td><td align="center">安装本地包</td></tr><tr><td align="center">pacman -U package_url</td><td align="center">安装远程包</td></tr><tr><td align="center">pacman -R package</td><td align="center">删除包，不会删除依赖</td></tr><tr><td align="center">pacman -Rs package</td><td align="center">删除包，并删除依赖</td></tr><tr><td align="center">pacman -Rsc package</td><td align="center">删除包，并删除依赖这个包的所有程序（慎用）</td></tr><tr><td align="center">pacman -Sc</td><td align="center">清理未安装包</td></tr><tr><td align="center">pacman -Scc</td><td align="center">清理包缓存</td></tr><tr><td align="center">yaourt -S package</td><td align="center">安装 AUR 包</td></tr><tr><td align="center">yaourt -Ss package</td><td align="center">查看 AUR 包</td></tr></tbody></table><blockquote><p>Manjaro 包的管理提供了强大的 GUI，命令的用途其实并不大，但是也要了解一下。</p></blockquote><h3 id="成品展示"><a href="#成品展示" class="headerlink" title="成品展示"></a>成品展示</h3><p><img src="https://i.loli.net/2019/10/11/GiH5keFqWfunK8c.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_plasmashell_20200502192313.gif" alt></p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>初始化系统，其实就是安装驱动和语言包了，都是傻瓜式的一键安装，但是前提条件是必须系统为最新的状态，如有未更新需要更新后再操作。找到 <code>添加/删除软件</code>查看是否有更新。</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/2020-05-01_20-50.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/2020-05-01_20-50_1.png" alt></p><p>找到<code>系统设置-&gt;硬件设定-&gt;语言包</code>。注：就算不安装驱动和语言包，也不会影响正常使用。完成后注销一下！</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501205732.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501210030.png" alt>    </p><h3 id="美化桌面"><a href="#美化桌面" class="headerlink" title="美化桌面"></a>美化桌面</h3><h4 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501210828.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501211125.png" alt></p><h4 id="Plasma-样式"><a href="#Plasma-样式" class="headerlink" title="Plasma 样式"></a>Plasma 样式</h4><p>Plasma 就是任务栏的样式，操作跟主题安装一致，选择自己喜欢的样式来，在安装主题完成后，Plasma 样式使用的就是刚安装主题的样式，之后的一系列操作基本都是跟安装主题一样。</p><h4 id="应用程序风格"><a href="#应用程序风格" class="headerlink" title="应用程序风格"></a>应用程序风格</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501212014.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501212128.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501212711.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501212846.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501213551.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_systemsettings5_20200501214032.gif" alt></p><blockquote><p>程序的风格安装的话都选择安装 GTK 3 主题，另外注意一个问题，选择使用 GTK 主题时要和主题匹配，别主题选的黑色，GTK 选白色那么就会出问题，所以下载好以后先预览一下！</p></blockquote><h4 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h4><p>软件和主题的颜色，操作跟主题安装一致，选择自己喜欢的样式来，在安装主题完成后，使用的就是刚安装主题的颜色。</p><h4 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h4><p>软件和主题的图标，操作跟主题安装一致，选择自己喜欢的样式来，在安装主题完成后，使用的就是刚安装主题的图标。</p><h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><p>个人感觉初始化的字体已经很好，但是也可以根据自己的爱好来自定义，总之一句话，自己怎么觉得舒服怎么来！</p><h4 id="光标"><a href="#光标" class="headerlink" title="光标"></a>光标</h4><p>操作跟主题安装一致，选择自己喜欢的样式来，在安装主题完成后，使用的就是刚安装主题的图标。</p><h4 id="窗口空间行为"><a href="#窗口空间行为" class="headerlink" title="窗口空间行为"></a>窗口空间行为</h4><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_systemsettings5_20200501220724.gif" alt></p><p>效果图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_plasmashell_20200501221008.gif" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501224526.png" alt></p><p>效果图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_plasmashell_20200501224734.gif" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501224941.png" alt></p><p>效果图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_plasmashell_20200501225058.gif" alt>    </p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501230158.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501230314.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501230618.png" alt></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S kvantummanager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_kvantummanager_20200502003746.gif" alt></p><blockquote><p>基本的差不多就这这样，当然还有很多功能这就是推荐一下，空闲时可以自行研究一下！还是那句话，自己觉得怎么舒服，那么就怎么来，这里就是提供一下参考！</p></blockquote><h3 id="中文输入法"><a href="#中文输入法" class="headerlink" title="中文输入法"></a>中文输入法</h3><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/2020-05-01_20-17.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/2020-05-01_20-17_1.png" alt></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 安装搜狗输入法，以前不推荐搜狗输入法的，但是最近优麒麟打包的搜狗输入法还是不错的</span><span class="token comment" spellcheck="true"># 链接: https://pan.baidu.com/s/1b0gHa6XBvkhz_8k6iVdQgQ  密码: gvjv</span><span class="token function">sudo</span> pacman -U fcitx-sogouimebs-2.0.0.38-1-x86_64.pkg.tar.xz<span class="token comment" spellcheck="true"># 设置中文输入，注销</span><span class="token function">sudo</span> vim /etc/profile<span class="token function">export</span> GTK_IM_MODULE<span class="token operator">=</span>fcitx<span class="token function">export</span> QT_IM_MODULE<span class="token operator">=</span>fcitx<span class="token function">export</span> XMODIFIERS<span class="token operator">=</span>@im<span class="token operator">=</span>fcitx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_plasmashell_20200501203809.png" alt></p><h4 id="Plasma"><a href="#Plasma" class="headerlink" title="Plasma"></a>Plasma</h4><p>添加部件推荐：部件也可以在线安装，跟上面操作基本一致</p><ul><li>application title 可以展示软件图片与软件名称，如没有请安装</li><li>全局菜单 跟 OS X 的全局菜单一样而且原生，但有些软件不支持</li><li>数字时钟 日期时间展示</li><li>任务调度 虚拟工作桌面，不同桌面用不同的软件，视觉效果好</li><li>系统托盘 属于一个必备的部件</li><li>应用程序面板 可以查看所有程序和一些快捷的操作，非常方便</li></ul><p>全局菜单还需要安装一个扩展</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S appmenu-gtk-module<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>演示图：当选择部件后，鼠标右键点一下即可选择部件</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_plasmashell_20200501233657.gif" alt></p><p>排版及一些操作演示图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_plasmashell_20200501234328.gif" alt></p><blockquote><p>任务栏基本这几个部件我感觉完全够用了，部件太多了，选择自己喜欢自己合适的来，任务栏推荐使用窗口可以覆盖，这样看东西时自动隐藏看起来简洁一些，任务栏的什么高度、排版、位置和部件在废话一下，按照自己喜欢的来！</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S latte-dock<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>演示图：Docky 也可以添加部件，可以当任务栏使用</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_plasmashell_20200502000920.gif" alt></p><h3 id="软件推荐"><a href="#软件推荐" class="headerlink" title="软件推荐"></a>软件推荐</h3><h4 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 深度终端，真心不错</span><span class="token function">sudo</span> pamcan -S deepin-terminal<span class="token comment" spellcheck="true"># 系统自带终端 快捷键：ctrl + alt + t 呼出，ctrl + shift + t 可以新建窗口</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200502010721.gif" alt></p><h4 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yaourt 包管理，他们都要基于 git 所以系统已安装好，git 就已经安装了</span><span class="token function">sudo</span> pacman -S yaourt<span class="token comment" spellcheck="true"># yay 包管理</span><span class="token function">sudo</span> pacman -S yay<span class="token comment" spellcheck="true"># 20 版本后官方有支持了三个包管理，但是推荐还是 AUR </span><span class="token comment" spellcheck="true"># 用到 yaourt 命令安装软件现在都可以直接在软件商店搜索安装！！！</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_pamac-manager_20200502002354.gif" alt></p><h4 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 之前推荐 </span><span class="token function">sudo</span> pacman -S Sunpinyin<span class="token comment" spellcheck="true"># 现在推荐-搜狗输入法</span><span class="token comment" spellcheck="true"># 链接: https://pan.baidu.com/s/1b0gHa6XBvkhz_8k6iVdQgQ  密码: gvjv</span><span class="token function">sudo</span> pacman -U fcitx-sogouimebs-2.0.0.38-1-x86_64.pkg.tar.xz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 谷歌浏览器</span><span class="token function">sudo</span> pacman -S google-chrome<span class="token comment" spellcheck="true"># 火狐浏览器</span><span class="token function">sudo</span> pacman -S firefox<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20200502004718.gif" alt></p><h4 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 最爱</span><span class="token function">sudo</span> pacman -S fish<span class="token comment" spellcheck="true"># 设置默认，建议不要默认</span><span class="token function">sudo</span> chsh -s /usr/bin/fish<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="快速启动"><a href="#快速启动" class="headerlink" title="快速启动"></a>快速启动</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 个人超爱</span><span class="token function">sudo</span> pacman -S kupfer<span class="token comment" spellcheck="true"># 另外推荐</span><span class="token function">sudo</span> pacman -S albert<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/%E6%B7%B1%E5%BA%A6%E5%BD%95%E5%B1%8F_plasmashell_20200502005446.gif" alt></p><h4 id="Cisco-AnyConnect"><a href="#Cisco-AnyConnect" class="headerlink" title="Cisco AnyConnect"></a>Cisco AnyConnect</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yaourt 安装，但是无法安装，打包的那人没人打包下载地址，可能过段时间就可以了吧</span>yaourt -S cisco-anyconnect<span class="token comment" spellcheck="true"># 手动安装 链接: https://pan.baidu.com/s/19Pmw_FOw_TUaMyNIelpT-w 提取码: tv6i </span><span class="token comment" spellcheck="true"># 1、以下操作 root 运行，cd 到 vpn 目录下注释安装用户权限验证,43-47 行</span>vim vpn_install.sh <span class="token comment" spellcheck="true"># Make sure we are root</span><span class="token comment" spellcheck="true"># if [ `id | sed -e 's/(.*//'` != "uid=0" ]; then</span><span class="token comment" spellcheck="true">#   echo "Sorry, you need super user privileges to run this script."</span><span class="token comment" spellcheck="true">#   exit 1</span><span class="token comment" spellcheck="true"># fi</span><span class="token comment" spellcheck="true"># 创建配置目录</span><span class="token function">mkdir</span> /etc/rc.d<span class="token comment" spellcheck="true"># 安装</span>./vpn_install.sh<span class="token comment" spellcheck="true"># 4、启动服务</span><span class="token function">sudo</span> /etc/rc.d/vpnagentd start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="聊天工具"><a href="#聊天工具" class="headerlink" title="聊天工具"></a>聊天工具</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># QQ 原生,就是当前版本...</span>yaourt -s linuxqq<span class="token comment" spellcheck="true"># deepin wine 打包 MIT </span>yaourt -S deepin-wine-tim<span class="token comment" spellcheck="true"># 网页打包微信</span>yaourt -S electronic-wechat<span class="token comment" spellcheck="true"># deepin wine 打包微信</span>yaourt -S deepin-wine-wechat<span class="token comment" spellcheck="true"># 钉钉 网页打包</span>yaourt -S dingtalk-electron<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="音乐视频"><a href="#音乐视频" class="headerlink" title="音乐视频"></a>音乐视频</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 安装网易云官方</span><span class="token function">sudo</span> pacman -S netease-cloud-music<span class="token comment" spellcheck="true"># 第三方网易云音乐</span>yaourt -S iease-music<span class="token comment" spellcheck="true"># GTK 版本</span><span class="token function">sudo</span> pacman -S netease-cloud-music-gtk<span class="token comment" spellcheck="true"># 腾讯视频，不推荐安装，意义不大，好像是网页打包而成</span>yaourt -S tenvideo<span class="token comment" spellcheck="true"># 网易云音乐不能输入中文</span><span class="token comment" spellcheck="true"># 全部覆盖</span><span class="token function">sudo</span> vim /opt/netease/netease-cloud-music/netease-cloud-music.bash<span class="token comment" spellcheck="true">#!/bin/sh</span>HERE<span class="token operator">=</span><span class="token string">"$(dirname "</span><span class="token punctuation">$(</span>readlink -f <span class="token string">"<span class="token variable">${0}</span>"</span><span class="token punctuation">)</span><span class="token string">")"</span><span class="token comment" spellcheck="true">#export LD_LIBRARY_PATH="${HERE}"/libs</span><span class="token comment" spellcheck="true">#export QT_PLUGIN_PATH="${HERE}"/plugins </span><span class="token comment" spellcheck="true">#export QT_QPA_PLATFORM_PLUGIN_PATH="${HERE}"/plugins/platforms</span><span class="token function">export</span> XDG_CURRENT_DESKTOP<span class="token operator">=</span>DDE<span class="token function">export</span> LD_LIBRARY_PATH<span class="token operator">=</span>/usr/lib<span class="token function">exec</span> <span class="token string">"<span class="token variable">${HERE}</span>"</span>/netease-cloud-music <span class="token variable">$@</span><span class="token comment" spellcheck="true"># 把原来的删除或者注释</span><span class="token comment" spellcheck="true"># 安装 qcef 链接: https://pan.baidu.com/s/1UfWLQwTmocGt8NF6PLrxpw 提取码: wmws</span><span class="token function">sudo</span> pacman -U 下载的 qcef 文件<span class="token comment" spellcheck="true"># 安装 vlc，完成后注销一下</span><span class="token function">sudo</span> pacman -S vlc<span class="token comment" spellcheck="true"># 原文链接：https://blog.csdn.net/duapple/article/details/105314391</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h4><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 安装 npm nodejs</span>sudo pacman <span class="token punctuation">-</span>S npmsudo pacman <span class="token punctuation">-</span>S nodejs<span class="token comment" spellcheck="true"># 安装 hexo</span>sudo npm install <span class="token punctuation">-</span>g hexo<span class="token punctuation">-</span>cli <span class="token comment" spellcheck="true"># 如果是以前系统备份的 hexo 只需要删除 .deploy_git</span>sudo rm <span class="token punctuation">-</span>rf .deploy_git<span class="token comment" spellcheck="true"># 附上纤细安装 Hexo 文章</span>https<span class="token punctuation">:</span>//godweiyang.com/2018/04/13/hexo<span class="token punctuation">-</span>blog/https<span class="token punctuation">:</span>//github.com/blinkfox/hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>matery<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h4><pre class="line-numbers language-bash"><code class="language-bash">yaourt -S picgo-appimage<span class="token comment" spellcheck="true"># PicGo + github + JsDelivr 搭建免费高速图床</span><span class="token comment" spellcheck="true"># https://daixianjin.github.io/2020/04/20/%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%9B%BE%E5%BA%8A/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="深度全家桶"><a href="#深度全家桶" class="headerlink" title="深度全家桶"></a>深度全家桶</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 深度看图</span><span class="token function">sudo</span> pacman -S deepin-image-viewer<span class="token comment" spellcheck="true"># 深度截图</span><span class="token function">sudo</span> pacman -S deepin-screenshot<span class="token comment" spellcheck="true"># 深度录屏</span><span class="token function">sudo</span> pacman -S deepin-screen-recorder<span class="token comment" spellcheck="true"># 深度画板</span><span class="token function">sudo</span> pacman -S deepin-draw<span class="token comment" spellcheck="true"># 深度计算器</span><span class="token function">sudo</span> pacman -S deepin-calculator<span class="token comment" spellcheck="true"># 深度视频播放器</span><span class="token function">sudo</span> pacman -S deepin-movie<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="下载储存"><a href="#下载储存" class="headerlink" title="下载储存"></a>下载储存</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># qb 种子神器，拿来下电影不错，不是那种电影</span><span class="token function">sudo</span> pacman -S qbittorrent<span class="token comment" spellcheck="true"># 迅雷 deepin 打包</span>yaourt -S deepin-wine-thunderspeed<span class="token comment" spellcheck="true"># 百度网盘原生</span><span class="token function">sudo</span> pacman -S baidunetdisk<span class="token comment" spellcheck="true"># FTP 工具</span><span class="token function">sudo</span> pacman -S filezilla<span class="token comment" spellcheck="true"># oss 可视化工具</span>curl http://gosspublic.alicdn.com/oss-browser/1.10.0/oss-browser-linux-x64.zip?spm<span class="token operator">=</span>a2c4g.11186623.2.15.6e3e1144tYcTZm<span class="token operator">&amp;</span>file<span class="token operator">=</span>oss-browser-linux-x64.zip<span class="token comment" spellcheck="true"># 解压</span>unzip oss-browser-linux-x64.zip<span class="token comment" spellcheck="true"># 运行</span>./oss-browser<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="文档文本工具"><a href="#文档文本工具" class="headerlink" title="文档文本工具"></a>文档文本工具</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 这可能是 Linux 下面最好的了，可以配合这 Phpstrom 使用</span><span class="token function">sudo</span> pacman -S zeal<span class="token comment" spellcheck="true"># 安装好之后 Phpstorm 插件当中安装 dash 按住 ctrl + shift + d 即可调出文档</span><span class="token comment" spellcheck="true"># 文本对比，这也可能是 Linux 下面最好的了</span><span class="token function">sudo</span> pacman -S meld<span class="token comment" spellcheck="true"># 福星PDF 阅读，其实没太多必要，系统自带的挺好</span>yaourt -S foxit<span class="token comment" spellcheck="true"># Markdown，一直使用的非常好</span>yaourt -S typora<span class="token comment" spellcheck="true"># wps，装机必备</span><span class="token function">sudo</span> pacman -S wsp-office<span class="token function">sudo</span> pacman -S ttf-wps-fonts<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="数据库可视化工具"><a href="#数据库可视化工具" class="headerlink" title="数据库可视化工具"></a>数据库可视化工具</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 数据查看舒服，数据操作也好，但是查看字段备注不太好，而且全英文且不支持中文输入</span>yaourt -S valentina-studio<span class="token comment" spellcheck="true"># wine 打包，不太舒服</span>yaourt -S navicat<span class="token comment" spellcheck="true"># 完美的 Linux 下面数据库可视化工具</span><span class="token function">sudo</span> pacman -S dbeaver<span class="token comment" spellcheck="true"># 个人喜爱</span>yaourt -S redis-desktop-manager<span class="token comment" spellcheck="true"># 另外推荐</span>yaourt -S another-redis-desktop-manager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># PHPstorm，必备神器</span>yaourt -S phpstorm<span class="token comment" spellcheck="true"># Goland</span><span class="token function">sudo</span> pacman -S goland<span class="token comment" spellcheck="true"># vs code</span><span class="token function">sudo</span> pacman -S visual-studio-code-bin<span class="token comment" spellcheck="true"># 微信开发者工具</span><span class="token function">sudo</span> pacman -S wechat-devtools<span class="token comment" spellcheck="true"># Postman</span><span class="token function">sudo</span> pacman -S postman<span class="token comment" spellcheck="true"># 抓包</span><span class="token function">sudo</span> pacman -S wireshark-qt<span class="token comment" spellcheck="true"># docker </span><span class="token function">sudo</span> pacman -S docker<span class="token comment" spellcheck="true"># docker 搭建 PHP 开发环境</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="远程工具"><a href="#远程工具" class="headerlink" title="远程工具"></a>远程工具</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Teamviewer</span><span class="token function">sudo</span> pacman -S teamviewer<span class="token comment" spellcheck="true"># 启动服务</span><span class="token function">sudo</span> teamviewer --daemon start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 截图软件</span><span class="token function">sudo</span> pacman -S Shutter<span class="token comment" spellcheck="true"># 思维导图</span>yaourt -S xmind-electron<span class="token comment" spellcheck="true"># 视频剪辑工具</span><span class="token function">sudo</span> pacman -S blender<span class="token comment" spellcheck="true"># 系统查看</span><span class="token function">sudo</span> pacman -s screenfetch<span class="token comment" spellcheck="true"># 作图软件</span><span class="token function">sudo</span> pacman -S gimp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>更多软件请自行查询，如有好的推荐也请留言告知！有好的软件，我也会更新！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>队列和栈</title>
      <link href="/2020/04/14/%E9%98%9F%E5%88%97%E5%92%8C%E6%A0%88/"/>
      <url>/2020/04/14/%E9%98%9F%E5%88%97%E5%92%8C%E6%A0%88/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>首先大家都清楚，队列只是一种<code>运算受限</code>的<code>线性表</code>数据结构，但是队列是一种特殊的<code>线性表</code>，特殊之处在于它只允许在表的<code>队头</code>（front）进行删除操作，在表的<code>队尾</code>（rear）进行插入操作。从以上信息可以突显出队列的核心概念：<code>先进先出</code>，就跟我们现实生活当中食堂排队打饭一模一样，前提是<code>不允许</code>插队不然要挨打。</p><p>效果图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/v2-d350535401266dbb412dc2a580ec50b3_1200x500.jpg" alt></p><p>栈也是一种<code>运算受限</code>的<code>线性表</code>数据结构，限定仅在<code>表尾进行插入</code>和<code>删除</code>操作的线性表。这一端被称为<code>栈顶</code>，相对地，把另一端称为<code>栈底</code>。向一个栈插入新元素又称作<code>进栈、入栈或压栈</code>，它是把新元素放到栈顶元素的上面，使之成为新的栈顶元素；从一个栈删除元素又称作<code>出栈或退栈</code>，它是把栈顶元素删除掉，使其相邻的元素成为新的栈顶元素。从以上信息可以突显出队列的核心概念：<code>先进后出</code>，就跟我们排队进入一个只有入口没有出口的隧道一摸一样，后进的先出，前提是<code>不允许</code>插入不然也是挨打。</p><p>效果图：</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/Myimages/9wMwoevBZq_small.jpg" alt></p><p>相关名词：</p><ul><li>运算受限：这个表不能随便的删除和插入，只能按照规定删除和插入。</li><li>线性表：逻辑结构，就是对外暴露数据之间的关系，不关心底层如何实现。</li></ul><p>未完待续…</p><blockquote><p>参考地址：</p><p><a href="https://juejin.im/post/5d5386b1f265da03c8151832" target="_blank" rel="noopener">https://juejin.im/post/5d5386b1f265da03c8151832</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 简单入门</title>
      <link href="/2020/03/31/git/"/>
      <url>/2020/03/31/git/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>可以毫不夸张的来说，Git 是每个开发必备的一个技能，在团队协作开发当中，Git 的存在犹如黑暗当中的一道光照亮着我们。设想一下，如果你在一个团队开发当中，还是使用传统的 FTP 上传模式，你会多疯狂？其实很想写一段很长的话来表达，传统模式和 Git 的对比，不过一想意义不大！Git 作为当前时代下最强大的版本控制系统，强大肯定有它独特的地方！PS：个人看法，当然肯定有同僚喜爱别的工具，各有各的看法嘛！</p><h4 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h4><p>自 2002 年开始，<a href="https://zh.wikipedia.org/wiki/林纳斯·托瓦兹" target="_blank" rel="noopener">林纳斯·托瓦兹</a> 决定使用 <a href="https://zh.wikipedia.org/wiki/BitKeeper" target="_blank" rel="noopener">BitKeeper</a> 作为 <a href="https://zh.wikipedia.org/wiki/Linux內核" target="_blank" rel="noopener">Linux内核</a> 主要的版本控制系统用以维护代码。因为 BitKeeper 为商业软件（BitMover 公司免费授权给 Linux 社区使用），这个决定在社区中长期遭受质疑。在 Linux 社区中，特别是 <a href="https://zh.wikipedia.org/wiki/理查德·斯托曼" target="_blank" rel="noopener">理查德·斯托曼</a> 与 <a href="https://zh.wikipedia.org/wiki/自由軟體基金會" target="_blank" rel="noopener">自由软件基金会</a> 的成员，主张应该使用开放源代码的软件来作为 Linux 内核的版本控制系统。<a href="https://zh.wikipedia.org/wiki/林纳斯·托瓦兹" target="_blank" rel="noopener">林纳斯·托瓦兹</a> 曾考虑过采用现成软件作为版本控制系统（例如<a href="https://zh.wikipedia.org/wiki/Monotone" target="_blank" rel="noopener">Monotone</a>），但这些软件都存在一些问题，特别是性能不佳。现成的方案，如 <a href="https://zh.wikipedia.org/wiki/協作版本系統" target="_blank" rel="noopener">CVS</a> 的架构，受到 <a href="https://zh.wikipedia.org/wiki/林纳斯·托瓦兹" target="_blank" rel="noopener">林纳斯·托瓦兹</a> 的批评。</p><p>2005 年，<a href="https://zh.wikipedia.org/wiki/安德魯·垂鳩" target="_blank" rel="noopener">安德鲁·垂鸠</a>写了一个简单程序，可以连接 BitKeeper 的存储库，BitKeeper 著作权拥有者<a href="https://zh.wikipedia.org/wiki/拉里·麥沃伊" target="_blank" rel="noopener">拉里·麦沃伊</a> 认为 <a href="https://zh.wikipedia.org/wiki/安德魯·垂鳩" target="_blank" rel="noopener">安德鲁·垂鸠</a> 对 BitKeeper 内部使用的协议进行逆向工程，决定收回无偿使用 BitKeeper 的许可。Linux 内核开发团队与 BitMover 公司进行磋商，但无法解决他们之间的歧见。<a href="https://zh.wikipedia.org/wiki/林纳斯·托瓦兹" target="_blank" rel="noopener">林纳斯·托瓦兹</a> 决定自行开发版本控制系统替代 BitKeeper ，以 <code>十天</code> 的时间编写出 Git 第一个版本。</p><h4 id="Git-是什么？"><a href="#Git-是什么？" class="headerlink" title="Git 是什么？"></a>Git 是什么？</h4><p>Git 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。Git 提供代码追踪，版本回溯等等功能，其实简单一句话来说，Git 就是项目版本管理的工具！</p><h4 id="Git-与-Github-什么关系？"><a href="#Git-与-Github-什么关系？" class="headerlink" title="Git 与 Github 什么关系？"></a>Git 与 Github 什么关系？</h4><p>Git 只是一个工具，而 Github 是一个代码托管的仓库。而 Git 可以去操作仓库，二者都是配合着使用。当然 Github 是国外免费的仓库，国内的免费仓库我们用的最多的是码云。Git 要比 Github 先问世。</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><h4 id="1、设置用户名和邮箱帐号"><a href="#1、设置用户名和邮箱帐号" class="headerlink" title="1、设置用户名和邮箱帐号"></a>1、设置用户名和邮箱帐号</h4><pre><code>git config --global user.name  &quot;your user name&quot;git config --global user.email &quot;your email&quot;</code></pre><h4 id="2、克隆项目"><a href="#2、克隆项目" class="headerlink" title="2、克隆项目"></a>2、克隆项目</h4><pre><code># 克隆项目，可以选择 HTTPS 和 SSH git clone 项目地址git clone -b [分支] 项目地址SSH   一次操作永久生效,需配置密钥HTTPS 每次都需要输入账号与密码</code></pre><h4 id="3、生成密钥密钥"><a href="#3、生成密钥密钥" class="headerlink" title="3、生成密钥密钥"></a>3、生成密钥密钥</h4><pre><code># 生成密钥，连续三下空格ssh-keygen -t rsa -b 4096 -C &quot;your email&quot;# 读取公钥cat ~/.ssh/id_rsa.pub## 之后在自己仓库设置里面,SSH Key 当中填写公钥</code></pre><h4 id="4、修改-Git-连接方式"><a href="#4、修改-Git-连接方式" class="headerlink" title="4、修改 Git 连接方式"></a>4、修改 Git 连接方式</h4><pre><code># 如果开始选择的 HTTPS 连接方式，那么配置密钥后可以选择 SSH 连接，这样就可以免密操作vim .git/config## 修改前[remote &quot;origin&quot;]    url = https://gitee.com/xx/xxx.git    fetch = +refs/heads/*:refs/remotes/origin/*## 修改后[remote &quot;origin&quot;]    url = git@gitee.com:xx/xx.git    fetch = +refs/heads/*:refs/remotes/origin/*</code></pre><h3 id="Git-知识点"><a href="#Git-知识点" class="headerlink" title="Git 知识点"></a>Git 知识点</h3><p>工作区：添加、编辑、修改，删除等操作</p><p>暂存区：暂存已修改的文件、最后一起入版本库</p><p>版本库：也叫本地版本库，因为 Git 是分布式版本控制系统，大部分提交都是对本地仓库而言的，不依赖网络，最后一次会推送的到远程仓库。此时对外不可见</p><p>最终入库：确定都没问题保存到仓库、成为一个新的版本，并且外可见</p><p>个人感觉知道这四点就可以了，在深入那么就是 Git 专家了，我们平常使用不会有太深层的东西！</p><h3 id="简单流程"><a href="#简单流程" class="headerlink" title="简单流程"></a>简单流程</h3><pre><code># 查看状态，工作区git status# 提交到暂存区git add . 或 文件地址 // . 代表所有# 提交版本库，对外不可见，本地仓库git commit -m &#39;操作备注&#39; // 操作备注是个好习惯，一定要注释详细# 拉取更新，以防冲突git pull origin [分支]# 最终入库，这一步一定要确认正确无误！对外可见git push origin [分支]## 千万不要纠结前面的 origin 它没啥意义</code></pre><p><img src="https://i.loli.net/2020/04/07/Z4BECwmIMVpyuUH.png" alt="深度截图_选择区域_20200407212112.png"></p><p><img src="https://i.loli.net/2020/04/07/tXJMUNuCwcayBlk.png" alt="深度截图_选择区域_20200407212241.png"></p><h3 id="简单流程详解"><a href="#简单流程详解" class="headerlink" title="简单流程详解"></a>简单流程详解</h3><h4 id="1、查看状态，可以看见工作区的：增、删、改"><a href="#1、查看状态，可以看见工作区的：增、删、改" class="headerlink" title="1、查看状态，可以看见工作区的：增、删、改"></a>1、查看状态，可以看见工作区的：增、删、改</h4><pre><code>git status</code></pre><p><img src="https://i.loli.net/2020/04/07/uWZcGX9gKsOlJfp.png" alt="深度截图_选择区域_20200407212838.png"></p><h4 id="2、抛弃工作区：改、删"><a href="#2、抛弃工作区：改、删" class="headerlink" title="2、抛弃工作区：改、删"></a>2、抛弃工作区：改、删</h4><pre><code># 方法一 无法抛弃增加git checkout . 或 文件地址 // . 代表所有# 方法二 无法抛弃增加git restore . 或 文件地址 // . 代表所有</code></pre><p><img src="https://i.loli.net/2020/04/07/TXml5xJ37CPcukY.png" alt="深度截图_选择区域_20200407213221.png"></p><p><img src="https://i.loli.net/2020/04/07/Li5SYygn7hRdW4F.png" alt="深度截图_选择区域_20200407213402.png"></p><h4 id="3、添加到暂存区"><a href="#3、添加到暂存区" class="headerlink" title="3、添加到暂存区"></a>3、添加到暂存区</h4><pre><code>git add . 或 文件地址 // . 代表所有</code></pre><p><img src="https://i.loli.net/2020/04/07/8ISEzARQpelxdO7.png" alt="深度截图_选择区域_20200407221459.png"></p><h4 id="4、取消暂存"><a href="#4、取消暂存" class="headerlink" title="4、取消暂存"></a>4、取消暂存</h4><pre><code>git restore --staged . 或 文件地址 // . 代表所有</code></pre><p><img src="https://i.loli.net/2020/04/07/wWl1yMtPHVkF5aD.png" alt="深度截图_选择区域_20200407221936.png"></p><h4 id="5、提交版本库，对外不可见"><a href="#5、提交版本库，对外不可见" class="headerlink" title="5、提交版本库，对外不可见"></a>5、提交版本库，对外不可见</h4><pre><code>git commit -m &#39;操作备注&#39; // 操作备注是个好习惯，一定要注释详细</code></pre><p><img src="https://i.loli.net/2020/04/07/iJqodIUkE6CA7hZ.png" alt="深度截图_选择区域_20200407222339.png"></p><h4 id="6、回滚本地仓库"><a href="#6、回滚本地仓库" class="headerlink" title="6、回滚本地仓库"></a>6、回滚本地仓库</h4><pre><code># 查看日志，查看日志后按 q 才能退出日志git log     # 常用命令一，比较暴力:重置 HEAD、索引和工作区git reset --herd CommitID           // 回滚到指定的版本git reset --hard HEAD^             // 回退到上个版本git reset --hard HEAD~3           // 回退到前 3 次提交之前，以此类推，回退到 n 次提交之前# 常用命令二，稍微温柔:重置 HEADgit reset --soft CommitID# 其他命令    --mixed               重置 HEAD 和索引    --merge               重置 HEAD 索引和工作区    --keep                重置 HEAD 但保存本地变更## HEAD 就是当前分支的意思    ## 索引是工作目录和仓库之间的临时区域。 你可以使用索引来构建一组你想要一起提交的更改。 创建提交时，提交的内容是当前索引中的内容，而不是工作目录中的内容</code></pre><p><img src="https://i.loli.net/2020/04/07/VPiJlgUMyfXD547.png" alt="深度截图_选择区域_20200407223542.png"></p><p><img src="https://i.loli.net/2020/04/07/oNrseyhKltidmOa.png" alt="深度截图_选择区域_20200407224056.png"></p><h4 id="7、确认无误，拉取更新，最终入库，对外可见"><a href="#7、确认无误，拉取更新，最终入库，对外可见" class="headerlink" title="7、确认无误，拉取更新，最终入库，对外可见"></a>7、确认无误，拉取更新，最终入库，对外可见</h4><pre><code># 拉取更新，确认无冲突git pull origin [分支]# 确认无误，最终入库，对外可见git push origin [分支]</code></pre><p><img src="https://i.loli.net/2020/04/07/Uwuli13d26QhWKY.png" alt="深度截图_选择区域_20200407225246.png"></p><p><img src="https://i.loli.net/2020/04/07/jR7NOp6vUtmzK4d.png" alt="深度截图_选择区域_20200407225437.png"></p><h3 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h3><h4 id="1、查看分支"><a href="#1、查看分支" class="headerlink" title="1、查看分支"></a>1、查看分支</h4><pre><code># 查看所有分支git branch -a# 查看远程分支git branch -r# 查看本地分支git branch</code></pre><p><img src="https://i.loli.net/2020/04/08/zBbaVGur6SEvKIX.png" alt="深度截图_选择区域_20200408214000.png"></p><h4 id="2、创建本地分支"><a href="#2、创建本地分支" class="headerlink" title="2、创建本地分支"></a>2、创建本地分支</h4><pre><code>git branch [分支]</code></pre><p><img src="https://i.loli.net/2020/04/08/msFoXIx2a6CB53u.png" alt="深度截图_选择区域_20200408214154.png"></p><h4 id="3、切换本地分支"><a href="#3、切换本地分支" class="headerlink" title="3、切换本地分支"></a>3、切换本地分支</h4><pre><code>git checkout [分支]</code></pre><p><img src="https://i.loli.net/2020/04/09/Jd7uxagTpG6Km3y.png" alt="深度截图_选择区域_20200409150934.png"></p><h4 id="4、创建远程分支"><a href="#4、创建远程分支" class="headerlink" title="4、创建远程分支"></a>4、创建远程分支</h4><pre><code># 意思就是本地创建了分支，然后 push 到仓库去git push origin [分支]</code></pre><p><img src="https://i.loli.net/2020/04/08/OSuFDzJUl7MTi5Z.png" alt="深度截图_选择区域_20200408215535.png"></p><h4 id="5、改变上游信息-追踪"><a href="#5、改变上游信息-追踪" class="headerlink" title="5、改变上游信息(追踪)"></a>5、改变上游信息(追踪)</h4><pre><code>git branch -u origin [分支]## 当我们创建了分支并且切换到了这个分支，我们 push 和 pull 没有上游默认的分支，需 push origin 分支 和 push origin 分支## 当我们默认上游分支后即可直接 push 或 pull</code></pre><p><img src="https://i.loli.net/2020/04/08/GBDLzjUKkrnt2bS.png" alt="深度截图_选择区域_20200408220852.png"></p><h4 id="6、删除分支"><a href="#6、删除分支" class="headerlink" title="6、删除分支"></a>6、删除分支</h4><pre><code># 删除本地分支git branch -d [分支]# 删除远程分支，谨慎使用git push --delete origin [分支]</code></pre><p><img src="https://i.loli.net/2020/04/08/fUQSyoD1h8XMGV6.png" alt="深度截图_选择区域_20200408222113.png"></p><h4 id="7、合并分支"><a href="#7、合并分支" class="headerlink" title="7、合并分支"></a>7、合并分支</h4><pre><code># 切换到主分支git checkout [分支]# 合并分支git merge orgin/[分支]git pullgit push</code></pre><p><img src="https://i.loli.net/2020/04/08/oWNAg21pnlEhFXw.png" alt="深度截图_选择区域_20200408222736.png"></p><h4 id="8、远程分支"><a href="#8、远程分支" class="headerlink" title="8、远程分支"></a>8、远程分支</h4><p>当我们 Git 不存在远程分支时，我们操作就会受阻，此时就需要 remote 命令来帮我们解决!</p><p><img src="https://i.loli.net/2020/04/09/OocNkM26qmIxaXQ.png" alt="深度截图_选择区域_20200409221753.png"></p><pre><code># 查看这个仓库git remote # 查看详情git remote -v</code></pre><p><img src="https://i.loli.net/2020/04/09/p2ZNYbvDUGiOJtg.png" alt="深度截图_选择区域_20200409222132.png"></p><pre><code># 添加远程分支git remote add [分支] [地址]# 更新远程跟踪分支git fetch [分支]# 改变上游git branch -u [分支]</code></pre><p><img src="https://i.loli.net/2020/04/09/RNgS4EicVfyjtaZ.png" alt="深度截图_选择区域_20200409223333.png"></p><pre><code># 重命名远程追踪分支git remote rename [原始分支] [新分支]</code></pre><p><img src="https://i.loli.net/2020/04/09/7L8DQzHY1jduJ5A.png" alt="深度截图_选择区域_20200409223659.png"></p><pre><code># 删除远程追踪分支，删除之后追踪无效git remote remove [分支]</code></pre><p><img src="https://i.loli.net/2020/04/09/BbQAXdD6LGrsSjl.png" alt="深度截图_选择区域_20200409223855.png"></p><h3 id="仓库操作"><a href="#仓库操作" class="headerlink" title="仓库操作"></a>仓库操作</h3><h4 id="1、忽略文件"><a href="#1、忽略文件" class="headerlink" title="1、忽略文件"></a>1、忽略文件</h4><pre><code># 在本地项目里面当中添加 .gitignore 文件touch .gitignore</code></pre><p><img src="https://i.loli.net/2020/04/09/kHQ7v4sVx2BizIg.png" alt="深度截图_选择区域_20200409224803.png"></p><pre><code># 把要忽略的文件或目录写到 .gitignore 里面vim .gitignore.gitignore</code></pre><p><code>当然这里只是效果演示，.gitignore 肯定是需要上传仓库，这样才能同步，不然团队开发当中，你忽略了这个文件，同时没有，那么这就尴尬了！</code></p><p><img src="https://i.loli.net/2020/04/09/Z4oRxNSOUkKVHpu.png" alt="深度截图_选择区域_20200409225037.png"></p><h4 id="2、删除远程仓库文件"><a href="#2、删除远程仓库文件" class="headerlink" title="2、删除远程仓库文件"></a>2、删除远程仓库文件</h4><pre><code># 比如项目 vendor 目录传了上去（我同事就经常这样）git rm -r --cached [文件或目录]git commit -m &#39;备注&#39;git push# 修改 .gitignore 忽略文件/vendor/*.*git add . git commit -m &#39;备注&#39;git push</code></pre><p><img src="https://i.loli.net/2020/04/09/DO6XNdfMwPy4Rkv.png" alt="深度截图_选择区域_20200409231340.png"></p><p>Git 日常使用这些命令，个人感觉完全够了。当然 Git 肯定不止这么一点点操作命令，这些命令也就算刚刚入门 Git，Git 是一个非常强大非常牛逼的版本管理工具，想深入 Git 可以继续查询资料学习！日常使用还有什么不足的地方，欢迎留言补充！</p><blockquote><p>参考地址：</p><p><a href="https://zh.wikipedia.org/wiki/Git" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/Git</a></p><p><a href="https://kb.kutu66.com/git/post_486783" target="_blank" rel="noopener">https://kb.kutu66.com/git/post_486783</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-读写分离</title>
      <link href="/2020/02/18/Mysql-%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
      <url>/2020/02/18/Mysql-%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>binlog 是 Mysql Sever 层维护的一种二进制日志，与 innodb 引擎中的 redo/undo log 是完全不同的日志；其主要是用来记录对 Mysql 数据更新或潜在发生更新的 SQL 语句，记录了所有的 DDL 和 DML (除了数据查询语句)语句，并以<code>事务</code>的形式保存在磁盘中，还包含语句所执行的消耗的时间，Mysql 的二进制日志是事务安全型的。</p><p>一般来说开启二进制日志大概会有 1% 的性能损耗(参见 MySQL 官方中文手册 5.1.24 版)。</p><p>作用主要有：</p><ul><li>复制：MySQL Replication在 Maste r端开启 binlog，Master 把它的二进制日志传递给 slaves 并回放来达到 master-slave 数据一致的目的 </li><li>数据恢复：通过 mysqlbinlog 工具恢复数据</li><li>增量备份</li></ul><p>二进制日志包括两类文件：二进制日志索引文件（文件名后缀为.index）用于记录所有的二进制文件，二进制日志文件（文件名后缀为.00000*）记录数据库所有的 DDL 和 DML (除了数据查询语句)语句事件。</p><h3 id="主数据库"><a href="#主数据库" class="headerlink" title="主数据库"></a>主数据库</h3><pre><code>1、修改 Mysql 配置文件  注：Mysql 5.7.2 以后没有默认配置了，一切配置需要自行配置vim /etc/mysql/my.cnfserver-id=1           # 服务器唯一IDlog-bin=mysql-bin     # mysql-bin日志前缀，可自定义binlog-do-db=db1,db2  # 需要同步的库binlog-ignore-db=db1,db2 # 忽略不同步的库binlog 两参数2选1 都不写全部同步2、查询 bin-log 是否开启show variables like &#39;%log_bin%&#39;;+---------------------------------+--------------------------------+| Variable_name                   | Value                          |+---------------------------------+--------------------------------+| log_bin                         | ON                             || log_bin_basename                | /var/lib/mysql/mysql-bin       || log_bin_index                   | /var/lib/mysql/mysql-bin.index || log_bin_trust_function_creators | OFF                            || log_bin_use_v1_row_events       | OFF                            || sql_log_bin                     | ON                             |+---------------------------------+--------------------------------+6 rows in set (0.01 sec)3、在主服务器上建立帐户并授权# 以下为 5.x 版本 创建用户并且授权grant  replication slave  on *.*  to &#39;daofaziran&#39;@&#39;%&#39; identified by &#39;654321&#39;;# 以下为 8 版本 创建用户并且授权create user ‘daofaziran’@‘%’ identified by ‘123456’;grant all privileges on *.* to ‘daofaziran’@’%’ with grant option; flush privileges;4、查看状态show master status;# File 和 Position 要记录好+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000001 |      155 | wangzhuan    |                  |                   |+------------------+----------+--------------+------------------+-------------------+1 row in set (0.00 sec)</code></pre><h3 id="从数据库"><a href="#从数据库" class="headerlink" title="从数据库"></a>从数据库</h3><pre><code>1、修改 Mysql 配置文件 vim /etc/mysql/my.cnfserver-id=2           # 服务器唯一IDlog-bin=mysql-bin     # mysql-bin日志前缀以下可选参数：replicate-do-db=db1,db2replicate-ignore-db=db1,db22、进入mysqlstop slave; CHANGE MASTER TO  # 主服务器地址  MASTER_HOST=&#39;192.168.1.6&#39;,  # 主服务器账号  MASTER_USER=&#39;daofaziran&#39;,  # 主服务器密码  MASTER_PASSWORD=&#39;123456&#39;,  # 主服务器端口  MASTER_PORT=3306,  # 主服务器 binlog 日志文件名,对应的 show master status 的 File  MASTER_LOG_FILE=&#39;mysql-bin.000002&#39;,  # 主服务器日志记录起点位置，对应的  show master status 的 Position  MASTER_LOG_POS=155,  # 连接重试次数  MASTER_CONNECT_RETRY=10;start slave;# 查看是否配置成功show slave status;Slave_IO_Running:Yes 此进程负责从服务器从主服务器上读取binlog 日志，并写入从服务器上的中继日志。 Slave_SQL_Running:Yes 此进程负责读取并且执行中继日志中的binlog日志， 注：以上两个都为yes则表明成功</code></pre><p>binlog 日志操作的常用命令</p><pre><code># 执行该命令，就会产生一个新的 log-bin 日志flush logs;# 清空所有的log-bin日志，并产生一个新的 log-bin 日志reset master;#查看最后（新）的一个 log-bin 日志show master status;</code></pre><h3 id="Laravel-读写分离"><a href="#Laravel-读写分离" class="headerlink" title="Laravel 读写分离"></a>Laravel 读写分离</h3><pre><code>        &#39;mysql&#39; =&gt; [            &#39;driver&#39; =&gt; &#39;mysql&#39;,            &#39;read&#39; =&gt; [                &#39;host&#39; =&gt; &#39;192.168.1.6&#39;,                &#39;port&#39; =&gt; &#39;3307&#39;,                &#39;password&#39; =&gt; &#39;root&#39;            ],            &#39;write&#39; =&gt; [                &#39;host&#39; =&gt; &#39;192.168.1.6&#39;,                &#39;port&#39; =&gt; &#39;3306&#39;,                &#39;password&#39; =&gt; &#39;root&#39;            ],            &#39;url&#39; =&gt; env(&#39;DATABASE_URL&#39;),//            &#39;host&#39; =&gt; env(&#39;DB_HOST&#39;, &#39;127.0.0.1&#39;),//            &#39;port&#39; =&gt; env(&#39;DB_PORT&#39;, &#39;3306&#39;),            &#39;database&#39; =&gt; env(&#39;DB_DATABASE&#39;, &#39;forge&#39;),            &#39;username&#39; =&gt; env(&#39;DB_USERNAME&#39;, &#39;forge&#39;),//            &#39;password&#39; =&gt; env(&#39;DB_PASSWORD&#39;, &#39;&#39;),            &#39;unix_socket&#39; =&gt; env(&#39;DB_SOCKET&#39;, &#39;&#39;),            &#39;charset&#39; =&gt; &#39;utf8mb4&#39;,            &#39;collation&#39; =&gt; &#39;utf8mb4_unicode_ci&#39;,            &#39;prefix&#39; =&gt; &#39;&#39;,            &#39;prefix_indexes&#39; =&gt; true,            &#39;strict&#39; =&gt; true,            &#39;engine&#39; =&gt; null,            &#39;options&#39; =&gt; extension_loaded(&#39;pdo_mysql&#39;) ? array_filter([                PDO::MYSQL_ATTR_SSL_CA =&gt; env(&#39;MYSQL_ATTR_SSL_CA&#39;),            ]) : [],        ],</code></pre><blockquote><p>参考地址：</p><p><a href="https://blog.51cto.com/zhongliang/2152917" target="_blank" rel="noopener">https://blog.51cto.com/zhongliang/2152917</a></p><p><a href="https://www.cnblogs.com/chenhaoyu/p/10773988.html" target="_blank" rel="noopener">https://www.cnblogs.com/chenhaoyu/p/10773988.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-OSS</title>
      <link href="/2020/01/16/Laravel-OSS/"/>
      <url>/2020/01/16/Laravel-OSS/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>在项目当中，我们一般不会选择本地服务器存储访问资源，这样对于服务器来说的话也比较消耗资源。而第三方的存储服务器就可以帮我们解决这个问题。阿里云对象存储服务，简称 OSS，是一种面向海量数据规模的分布式存储服务，具有稳定、可靠、安全、低成本的特点，能够提供十一个九的数据可靠性。 OSS 提供与平台无关的 RESTful API 接口，您可以在互联网任何位置存储和访问。 OSS 的容量和处理能力弹性扩展，并提供多种存储类型供您选择，全面优化存储成本。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p> aliyuncs/<a href="https://packagist.org/packages/aliyuncs/oss-sdk-php" target="_blank" rel="noopener">oss-sdk-php</a></p><pre><code>$ composer require aliyuncs/oss-sdk-php</code></pre><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>上传文件</p><pre><code>use OSS\OssClient;use OSS\Core\OssException;ry{     $oss = new OssClient(id,key,endpoint)    $result = $oss-&gt;uploadFile(bucket, 保存到 oss 的路径,上传文件的路径);} catch(OssException $e) {    ApiExceptionError(&#39;上传失败,请重新上传&#39;);}</code></pre><blockquote><p>未完代续</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel-扩展包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-阿里云短信</title>
      <link href="/2020/01/16/Laravel-%E9%98%BF%E9%87%8C%E4%BA%91%E7%9F%AD%E4%BF%A1/"/>
      <url>/2020/01/16/Laravel-%E9%98%BF%E9%87%8C%E4%BA%91%E7%9F%AD%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>在我们大多数项目当中，短信服务属于必不可少的一种功能。接口平台也是多如牛毛。今天要介绍的这个包，包含了大多知名平台的短信服务接入，也是我目前使用过最好的一个短信服务扩展包。开发者也是 Learnku 知名人物 “超哥”开发，在这里也安利一下超哥的 PHP 扩展包开发实战教程：<a href="https://learnku.com/courses/creating-package" target="_blank" rel="noopener">点我跳转</a></p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ol><li>支持目前市面多家服务商</li><li>一套写法兼容所有平台</li><li>简单配置即可灵活增减服务商</li><li>内置多种服务商轮询策略、支持自定义轮询策略</li><li>统一的返回值格式，便于日志与监控</li><li>自动轮询选择可用的服务商</li><li>更多等你去发现与改进…</li></ol><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a href="https://packagist.org/packages/overtrue/easy-sms" target="_blank" rel="noopener">EasySms</a> </p><pre><code>$ composer require overtrue/easy-sms</code></pre><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>以下以阿里云为例子，我们可以在 config 目录当中新建一个 aliyun.php 配置文件，当然也可以直接使用。</p><pre><code>return [    &#39;aliyun&#39; =&gt; [        // HTTP 请求的超时时间（秒）        &#39;timeout&#39; =&gt; 5.0,        // 默认发送配置        &#39;default&#39; =&gt; [            // 网关调用策略，默认：顺序调用            &#39;strategy&#39; =&gt; \Overtrue\EasySms\Strategies\OrderStrategy::class,            // 默认可用的发送网关            &#39;gateways&#39; =&gt; [                &#39;aliyun&#39;,            ],        ],        // 可用的网关配置        &#39;gateways&#39; =&gt; [            &#39;errorlog&#39; =&gt; [                &#39;file&#39; =&gt; &#39;/tmp/easy-sms.log&#39;,            ],            &#39;aliyun&#39; =&gt; [                &#39;access_key_id&#39; =&gt; env(&#39;ACCESS_KEY_ID&#39;),                &#39;access_key_secret&#39; =&gt; env(&#39;ACCESS_KEY_SECRET&#39;),                &#39;sign_name&#39; =&gt; env(&#39;SIGN_NAME&#39;),// 阿里云的签名            ],        ],    ],    &#39;template&#39; =&gt; env(&#39;ALIYUN_TEMPLATE&#39;),// 阿里云的模板 ID];</code></pre><pre><code>use Overtrue\EasySms\EasySms;$easySms = new EasySms(config(&#39;aliyun.aliyun&#39;));$code = str_pad(random_int(1, 999999), 6, 0, STR_PAD_LEFT);try{    $result = $easySms-&gt;send(‘手机号码’, [        &#39;template&#39; =&gt; config(&#39;aliyun.template&#39;), // 模板 ID        &#39;data&#39; =&gt; [            &#39;number&#39; =&gt; $code // data 里面传递的就是你的模板变量，        ],    ],[&#39;aliyun&#39;]);     }catch (\GuzzleHttp\Exception\ClientException $exception){         $response = $exception-&gt;getResponse();         $result = json_decode($response-&gt;getBody()-&gt;getContents(), true);         return $this-&gt;response-&gt;errorInternal($result[&#39;msg&#39;]??&#39;短信发送异常&#39;);     }</code></pre><p>正常的流程情况下如果出现发送失败或者别的错误，可以找到包 overtrue/easy-sms/src/Gateways  下面，因为我目前使用的 阿里云那么我的就是 AliyunGateway.php 找到 send 在 result 返回之前打印一下就可以看到错误。这里的错误也是阿里云服务错误，而不是程序的错误。</p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel-扩展包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019年年度总结</title>
      <link href="/2020/01/14/2019%E5%B9%B4%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
      <url>/2020/01/14/2019%E5%B9%B4%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>回顾 2019 展望 2020，时间总是在转眼即逝！当我们站在时间线前面的时候，总是对时间线后面的所有事情抱有很大的期望与规划，或者这的 ‘我们’ 应该用 ‘我’ 比较合适！我特别喜欢一句话，做过别后悔，错过别回头！然而真实的我总是实在跟别人述说我的 “后悔的事情”，也许是心智未成熟吧，但是我还是喜欢有什么就说出来憋着难受！每过一段时间，我总是喜欢停下来整理一下所有前面的事情，写项目也是如此总是希望自己的代码能够达到心中理想的样子，但是事与愿违比较多那么一些，总体上来说还算及格。我也喜欢总是想把自己知识整理完善，但总是发现时间不够用（当然这也是自己说给自己的借口，时间挤挤还是有的 ）希望 2020 能自我改变一哈吧，实现自我的进化！</p><p><img src="https://i.loli.net/2020/01/15/QwPnoZreAbYaV7K.jpg" alt="timg.jpeg"></p><h3 id="宁波篇"><a href="#宁波篇" class="headerlink" title="宁波篇"></a>宁波篇</h3><p>19 年离开宁波公司回到成都，最开始我老汉和我妈特别不愿意。首先说一哈，我不是妈宝男，只是我从小就去的宁波读书生活，朋友亲戚基本都在宁波，一直跟着他们重来没有离开过他们，所以对于我不在去宁波跟他们一起特别不放心。最后我放出了终极大招他们才愿意我回来，我说回来后一定找到个女朋友，他们才愿意。（然而事实确是连个女的微信都没，在此我要强行甩一下锅，不是不想找是圈子太小没办法呀！）</p><p>希韵一个做钢琴教育类 App 软件开发的团队，一个非常不错的一个团队，公司的组织架构完整，团队气氛也是非常的好。以下是 2019 年年度团队动漫自画像。</p><p><img src="https://i.loli.net/2020/01/16/f45yHsDKAhJzRia.jpg" alt="img.jpeg"></p><p>我还依稀记得刚去面试，主管大哥很看好我，在面试完成后送我离开时跟我也分享了一些他的经历（可能公司基本都是宁波本地人，而他是贵州人而我是四川人的原因吧），可惜最后让他失望了。年轻嘛，总是有些时候犯混。也感谢当初辉哥和主管大哥选择了我，工作之后我问过辉哥为啥选我，我已经记不清他当时怎么说的了，我想估计是我的诚实吧。我入希韵时简历完全真实，没有任何参假，没工作经验，没项目经验，唯一有的是我离开学校那天起就一直从事计算机这块，转开发前就从事运维这块（当然是最低级的运维或者简单说修电脑的只是负责厂区）在现今的大环境下敢写真实的简历也是需要一定的勇气的，又没学历又没项目经验。</p><p>人生总是这样，生命当中总是会有那么几个站，你会在哪里停留，但是最终还是会重新扬帆启航！</p><p>告别了成长的第一站，我驶向了我的第二站，成都，成都篇启航！</p><p><img src="https://i.loli.net/2019/09/03/RWBTwtkD2MjPavh.jpg" alt></p><h3 id="成都篇-一"><a href="#成都篇-一" class="headerlink" title="成都篇 一"></a>成都篇 一</h3><p>四川玄通科技有限公司，面试我的是罗哥，应该算不上面试而是算讲解知识。没记错的话大概面试了一个多小时，很多问题不知道，罗哥跟大多数面试管不一样，不会因为你不会而有点别的样子(具体啥样子感觉就是有点看不起吧)，不知道或者认知错误的他都会一一的给你讲解。通过那一次面试我还学到了不少东西，影像最深的是他把 MySQL 索引这个东西给我讲解的大概明白了，以前基本都是模糊的认知。这样的面试才有意义，有收获！不像一些眼睛在天上的人上来就问（处理过千万级数据没有啊，高并发处理过吗）不怕您笑，现在做过三个项目别说千万级别了 10 W都没处理过。这样问的往往是那种几个人的公司，有时候真忍不住想问贵公司都这样牛逼了，团队咋这点人呢？没办法呀，本人眼界知识面太低，见笑见笑。</p><p>面试结束后，就说等待通知，我一想肯定没戏啊。回答的也不好，基本没了，就去下一家公司面试了。结果下一家公司给我气的呀，是个培训结构，为了约好的时间不迟到我还专门 打车过去的，结果是个培训机构。最后想了想压根没投递他们公司简历，我是手机收到短信就去了也没太注意，我好奇的是手机号码是如何被他们知道的，都是套路呀。</p><p>过了二天还是三天，收到了行政的通知可以入职玄通了。当时很高兴，因为这哈有大佬带了，特别高兴。</p><p>玄通呢，做的项目就是区块链的东西，说是区块链具体有没有上链我也没搞清楚，用的也就是火币的接口。从入职开始，有啥不懂的就问罗哥，反正他也不会烦你不懂问他，相反罗哥是一个特别喜欢帮助人的人，只要不懂的问他都会耐心的解答。从代码的语法，到一些东西使用和原理都会一一讲解，反正我非常喜欢跟着罗哥，成长快呀！</p><p>在玄通的日子每天就这样工作着，学习着，没事情的时候大家就一起吹吹壳子，开开车。好不欢乐！</p><p>可惜好景不长，在项目第二个版本开始的时候，8 月份的某一天清晨。老板先是把行政，罗哥和前端叫进办公室，我一哈就觉得不对了。因为那段时间罗哥一直挂嘴边的就是公司快倒闭了，结果真的倒闭了！！！他们先单独聊了后，老板叫所有人进去了，公司正式宣布倒闭！可气的是到现在还有一点工钱没给，搞得我没事给老板发几朵花。不舍玄通，无奈告别！开启第二篇章！</p><p><img src="https://i.loli.net/2020/01/16/s2EHUQRVcNAgMx1.jpg" alt="96c6035bd38a43c3bc532447a7292ee2.jpeg"></p><h3 id="成都篇-二"><a href="#成都篇-二" class="headerlink" title="成都篇 二"></a>成都篇 二</h3><p>我易网络科技有限公司，面试我的是公司负责项目的人。面试不算太久吧，好像 10 分钟的样子，也是等待通知。心想肯定没了，才那么几分钟。结果在我第二天去铂涛面试的路上收到了入职通知，面试铂涛是二个人一起面试，那次面试把我搞得紧张死了。大概面试了 30 多分钟吧，也是等待通知。面试完成后，就回家准备第二天入职我易了。</p><p>入职我易当天也收到了铂涛的入职邀请，出于已经入职我易和不会 YII 谢绝了铂涛正式开始了，我易的旅途。</p><p>我易跟玄通基本一样，也是做虚拟币交易的公司，也是没有上链都是自我数据处理（不过目前的是版本一，后期估计是会上链操作）。刚开始都是老套路，熟悉公司先目前的项目代码。前面基本也没什么事情，基本上都在原先的项目上面各种修改。其实我是拒绝二开的，比较每个人的风格不一，而且还需要去读懂原有的代码就更难受了。在修改过程中，我们也经常喷方维写的代码垃圾（结果自己写后发现自己的根本没法跟方维的比），终于在 11 月份，项目开始了重构。我们整个团队开启了奋战模式，几乎这几个月来每一天都在加班奋战赶项目。1月10号在连续奋战30多个小时后，第一个版本正式上线。虽然存在很多问题，但也正式上线了。到此三篇结束，2019 年的也即将结束。</p><p><img src="https://i.loli.net/2020/01/16/4dSzbiC5YmOa7jg.jpg" alt="center.jpeg"></p><h3 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h3><p>1、PHP 深入学习</p><p>2、研究 Larave 框架</p><p>3、学习 Go</p><p>4、学习 Flutter</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>1、拖延症比较严重</p><p>2、执行能力，有待提高</p><p>3、心性有待提高</p><blockquote><p>祝愿 2020 更好，道别 2019 。2020 加油吧！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 2019年年度总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2019年年度总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-XSS 攻击过滤</title>
      <link href="/2019/12/16/Laravel-Xss-%E6%94%BB%E5%87%BB%E8%BF%87%E6%BB%A4/"/>
      <url>/2019/12/16/Laravel-Xss-%E6%94%BB%E5%87%BB%E8%BF%87%E6%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>XSS 攻击，XSS 是跨站脚本攻击(Cross Site Scripting)，为不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS。恶意攻击者往 Web 页面里插入恶意 Script 代码，当用户浏览该页之时，嵌入其中 Web 里面的 Script 代码会被执行，从而达到恶意攻击用户的目的。它总是让我们头痛，目前还不是很了解，毕竟前端的知识欠缺，看过一篇文章说“越了解 XSS 越不知道该如何去防范”。目前来说所认知的 XSS 就是前端的 JS 搞事情，那么好在数据处理时候我们过滤掉黑名单的前端标记。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a href="https://packagist.org/packages/mews/purifier" target="_blank" rel="noopener">mews/purifier</a></p><pre><code>composer require mews/purifier</code></pre><p>再次提示一次，在 Laravel 5.5 版本之后不需要在添加服务提供者，都是自动发现。</p><h3 id="发布配置"><a href="#发布配置" class="headerlink" title="发布配置"></a>发布配置</h3><pre><code>$ php artisan vendor:publish --provider=&quot;Mews\Purifier\PurifierServiceProvider&quot;</code></pre><p>此时 <code>config/purifier.php</code> 就会出现在你的 config 目录当中。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>使用 purifier 非常的简单</p><pre><code>clean(request()-&gt;input(&#39;content&#39;))</code></pre><p>注意：我们可以使用的标记在 <code>config/purifier.php</code> HTML.Allowed 配置当中</p><pre><code># 以下是默认的允许的标记&#39;HTML.Allowed&#39;             =&gt; &#39;div,b,strong,i,em,u,a[href|title],ul,ol,li,p[style],br,span[style],img[width|height|alt|src]&#39;,</code></pre><p>在我们使用 clean 过滤我们的参数之后，默认自动段落的也就是说数据会自动加上 “ P “  标记</p><p><img src="https://i.loli.net/2019/12/16/S1ZVk3yHJfFig9E.png" alt></p><p>如果不需要加上 “ P “  标记，那么我们需要把配置文件当中的 AutoFormat.AutoParagraph 改为 false</p><pre><code>&#39;AutoFormat.AutoParagraph&#39; =&gt; false,</code></pre><p><img src="https://i.loli.net/2019/12/16/bGkTYjigILOsC4d.png" alt></p><p>回到最开始，我们在 HTML.Allowed 允许的情况下，那么我们 HTML 标记就不会被过滤掉</p><p><img src="https://i.loli.net/2019/12/16/oK68RCm3THeYdAS.png" alt></p><h3 id="使用中间件全局过滤"><a href="#使用中间件全局过滤" class="headerlink" title="使用中间件全局过滤"></a>使用中间件全局过滤</h3><pre><code># 创建中间件php artisan make:middleware ApiXssCleanpublic function handle($request, Closure $next){    $input = $request-&gt;all();    array_walk_recursive($input,function(&amp;$input) {        $input = is_string($input) ? trim(clean($input)) : $input;    });    $request-&gt;merge($input);    return $next($request);}</code></pre><p><img src="https://i.loli.net/2019/12/16/QXW8ULvFlen7MOx.png" alt></p><h3 id="使用-PHP-函数-暴力过滤"><a href="#使用-PHP-函数-暴力过滤" class="headerlink" title="使用 PHP 函数 暴力过滤"></a>使用 PHP 函数 暴力过滤</h3><p>strip_tags — 从字符串中去除 HTML 和 PHP 标记</p><pre><code># 效果与上面一致$input = $request-&gt;all();array_walk_recursive($input,function(&amp;$input) {    $input = strip_tags($input);});$request-&gt;merge($input);</code></pre>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel-扩展包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-Google 验证</title>
      <link href="/2019/11/18/Laravel-Goog%E9%AA%8C%E8%AF%81/"/>
      <url>/2019/11/18/Laravel-Goog%E9%AA%8C%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>对于一些项目敏感操作来说验证用户都是属于必备的一个环节，当然验证的方式很多，确实很多！Google 验证，在我看来是验证当中的一种不错的选择，毕竟一次操作终身可行，而且 Google 自身就帮我们处理好了验证码有效期。（每30秒刷新一次），签名算法安全可靠！Laravel 做为 PHP 目前使用率最高的框架，当然也有他的 Google 验证扩展包。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a href="https://packagist.org/packages/pragmarx/" target="_blank" rel="noopener">pragmarx/</a>google2fa-laravel</p><pre><code># 扩展 Imagick 开启composer require pragmarx/google2fa-laravel</code></pre><p><a href="https://packagist.org/packages/bacon/" target="_blank" rel="noopener">bacon/</a>bacon-qr-code</p><pre><code># 扩展 iconv 开启# dasprid/enumcomposer require bacon/bacon-qr-code</code></pre><h4 id="安装-Imagick-扩展"><a href="#安装-Imagick-扩展" class="headerlink" title="安装 Imagick 扩展"></a>安装 Imagick 扩展</h4><pre><code>apt-get install imagemagickconvert -version 使用这个命令检测是否安装成功，如果成功的话会有imagemagick版本号。apt-get install libmagickwand-dev</code></pre><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>生成 Google2FA 配置文件，文件存在位置 config/google2fa.php，命令如下：</p><pre><code>php artisan vendor:publish --provider=&quot;PragmaRX\Google2FALaravel\ServiceProvider&quot;</code></pre><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>生成 Secret Key</p><pre><code>use PragmaRX\Google2FA\Google2FA;$google2fa = new Google2FA();$secretKey = $google2fa-&gt;generateSecretKey(64);# 这里的 Key 就是我们需要验证的 Key</code></pre><p>获取二维码地址</p><pre><code>$company = &#39;&#39;; // 公司名称$holder = &#39;&#39;; // 用户标示，可以是邮箱或者名称等$qrcodeUrl = $google2fa-&gt;getQRCodeUrl($company, $holder, $secretKey);</code></pre><p>生成二维码图片</p><pre><code>// 图片路径$filePath = sha1($secretKey) .&#39;.png&#39;;// 生成图片$renderer = new ImageRenderer(   new RendererStyle(200),   new ImagickImageBackEnd());$writer = new Writer($renderer);$writer-&gt;writeFile($qrcodeUrl, $filePath);</code></pre><p><img src="https://i.loli.net/2019/11/18/hTlsNIDrVp5qmFz.png" alt></p><p>最后，通过使用 Google Authenticator 应用程序来扫描二维码，扫描完毕之后，就会生成一组 6 位的数字密码。</p><h3 id="身份验证"><a href="#身份验证" class="headerlink" title="身份验证"></a>身份验证</h3><pre><code>$google2fa = new Google2FA();$verify = $google2fa-&gt;verifyKey($secretKey, $request-&gt;input(&#39;code&#39;));if ($verify) {    return true;  // 验证成功}return false;</code></pre><blockquote><p>参考地址：</p><p><a href="https://www.raymondwu.net/2018/05/14/Laravel-利用Google2FA实现双因子认证/" target="_blank" rel="noopener">https://www.raymondwu.net/2018/05/14/Laravel-%E5%88%A9%E7%94%A8Google2FA%E5%AE%9E%E7%8E%B0%E5%8F%8C%E5%9B%A0%E5%AD%90%E8%AE%A4%E8%AF%81/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel-扩展包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP-RSA加密解密</title>
      <link href="/2019/11/14/PHP-RSA%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/"/>
      <url>/2019/11/14/PHP-RSA%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>RSA 加密是一种非对称加密。可以在不直接传递密钥的情况下，完成解密。这能够确保信息的安全性，避免了直接传递密钥所造成的被破解的风险。是由一对密钥来进行加解密的过程，分别称为公钥和私钥。两者之间有数学相关，该加密算法的原理就是对一极大整数做因数分解的困难性来保证安全性。通常个人保存私钥，公钥是公开的（可能同时多人持有）。</p><h3 id="生成公钥私钥"><a href="#生成公钥私钥" class="headerlink" title="生成公钥私钥"></a>生成公钥私钥</h3><p>Linux 系统都自带了openssl，windows 可能需要安装 openssl 生成工具</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 第一步：生成私钥，这里我们指定私钥的长度为1024, 长度越长，加解密消耗的时间越长</span>openssl genrsa -out rsa_private_key.pem 1024<span class="token comment" spellcheck="true"># 第二步：根据私钥生成对应的公钥</span>openssl rsa -in rsa_private_key.pem -pubout -out rsa_public_key.pub<span class="token comment" spellcheck="true"># 第三步：私钥转化成pkcs8格式，【这一步非必须，只是程序解析起来方便】</span>openssl pkcs8 -topk8 -inform PEM -in rsa_private_key.pem -outform PEM -nocrypt -out rsa_private_key_pkcs8.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>RSA 只能加密最长 117 位的数据。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Services</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">SignService</span><span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token variable">$publicKey</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$privateKey</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 初始化     * */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">publicKey</span>  <span class="token operator">=</span> <span class="token function">openssl_get_publickey</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string">'../rsa_public_key.pub'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">privateKey</span> <span class="token operator">=</span> <span class="token function">openssl_get_privatekey</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string">'../rsa_private_key_pkcs8.pem'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 公钥加密     * @param mixed $data     *     * @return string     */</span>    <span class="token keyword">function</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$encrypt</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">str_split</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$item</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>            <span class="token function">openssl_public_encrypt</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">,</span> <span class="token variable">$encrypt</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">publicKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$encrypt</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">openssl_free_key</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">publicKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$encrypt</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 私钥解密     * @param mixed $data     *     * @return string     */</span>    <span class="token keyword">function</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$data</span>    <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$decrypt</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">str_split</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$item</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>            <span class="token function">openssl_private_decrypt</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">,</span> <span class="token variable">$temp</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">privateKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$decrypt</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">openssl_free_key</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">privateKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$decrypt</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 私钥生成签名     * @param mixed $data     *     * @return string     */</span>    <span class="token keyword">function</span> <span class="token function">sign</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$signature</span> <span class="token operator">=</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string">'app.signature'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">openssl_sign</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$signature</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">privateKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">openssl_free_key</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">privateKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$signature</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 公钥验证     * @param mixed $data     * @param mixed $sign     *     * @return bool     */</span>    <span class="token keyword">function</span> <span class="token function">veritySign</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token variable">$sign</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">openssl_verify</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$sign</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">publicKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">openssl_free_key</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">publicKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token variable">$result</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-定时任务</title>
      <link href="/2019/10/24/Laravel-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
      <url>/2019/10/24/Laravel-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>在我们项目当中，有时候需要定时去处理一些特定的业务。过去，你可能需要在服务器上为每一个调度任务去创建 Cron 入口。但是这种方式很快会变得不友好，因为这些任务调度不在源代码中，并且你每次都需要通过 SSH 链接登录到服务器中才能增加 Cron 入口。</p><p>Laravel 命令行调度器允许你在 Laravel 中对命令调度进行清晰流畅的定义。且使用这个任务调度器时，你只需要在你的服务器上创建单个 Cron 入口。你的任务调度在 <code>app/Console/Kernel.php</code> 的 <code>schedule</code> 方法中进行定义。</p><h3 id="Kernel-php"><a href="#Kernel-php" class="headerlink" title="Kernel.php"></a>Kernel.php</h3><p>不管我们是使用定时任务或者其他需要终端执行的程序，在 Laravel 当中都要在 <code>app\console\kernel.php</code>当中的 commands 引入我们自定义的 artisan 命令类，schedule 执行我们的定时任务。</p><pre><code># 加载 artisan 自定义命令类protected $commands = [        // 引入自定义的终端命令类    ];    # 执行 定时任务    protected function schedule(Schedule $schedule){    # 简单使用    $schedule-&gt;call(function(){        Log::info(&#39;记录的日志&#39;,[&#39;ip&#39; =&gt; request()-&gt;path()]);    })-&gt;daily();    $schedule-&gt;call(&#39;App\Services\xxxService@index&#39;)-&gt;everyMinute();    # 执行 command    $schedule-&gt;command(&#39;order:start&#39;)              -&gt;hourly();}# 注册 artisan 执行的命令，对应的也就是我们 routes 下面的 console.phpprotected function commands(){    $this-&gt;load(__DIR__.&#39;/Commands&#39;);    require base_path(&#39;routes/console.php&#39;);}</code></pre><blockquote><p>在 Laravel 5.5 版本以后，无需在 commands 引入。</p></blockquote><h3 id="创建-Command"><a href="#创建-Command" class="headerlink" title="创建 Command"></a>创建 Command</h3><pre><code>php artisan make:command AddOrderCount</code></pre><p>当创建完成 command 之后，按自己需求修改 command</p><pre><code>class OrderCount extends Command{    // 执行的 artisan 命令    protected $signature = &#39;order:start&#39;;    // artisan 命令的描述    protected $description = &#39;day order count data&#39;;    public function __construct()    {        parent::__construct();    }    // 这里即可执行 业务逻辑的处理    public function handle()    {        // 要执行的 处理业务逻辑    }}</code></pre><h3 id="执行-Crontab"><a href="#执行-Crontab" class="headerlink" title="执行 Crontab"></a>执行 Crontab</h3><pre><code>1、创建 crontab 执行的文件echo &quot;* * * * * /usr/local/bin/php /var/www/html/vpay/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1&quot; &gt; order.txt2、添加到 crontab 当中crontab order.txt3、开启 crontabcrontabl -l 4、关闭 crontab 全部清除crontabl -r</code></pre><blockquote><p>在 Linux 创建一个 Crontab 执行文件时，所有的执行命令加上绝对路径！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-本地语言包</title>
      <link href="/2019/10/11/Laravel-%E6%9C%AC%E5%9C%B0%E8%AF%AD%E8%A8%80%E5%8C%85/"/>
      <url>/2019/10/11/Laravel-%E6%9C%AC%E5%9C%B0%E8%AF%AD%E8%A8%80%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>Laravel 自身的语言包为英文，我们本地化开发都希望为中文，当然也有不需要中文的这个看自己项目的选择行来说，我做的项目一般都是本地化。所以本地化是不可缺少的一块。今天的主角就是 [<a href="https://packagist.org/packages/caouecs/" target="_blank" rel="noopener">caouecs/</a><a href="https://packagist.org/packages/caouecs/laravel-lang#dev-master" target="_blank" rel="noopener">laravel-lang</a>] ,支持 N 多国家语言包。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre><code>$ composer require caouecs/laravel-lang</code></pre><blockquote><p>请根据自己项目使用的 Laravel 版本选择分支，不同的分支对应 Laravel 不同的版本。</p></blockquote><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>laravel-lang 使用非常简单，在我们 Composer 安装好这个扩展包以后，在 verdor 依赖包目录当中找到 <code>caouecs/laravel-lang</code>把里面的 zh-CN 复制到 <code>resources/lang</code>下面。修改 <code>config/app.php</code></p><pre><code>&#39;locale&#39; =&gt; &#39;zh-CN&#39;,</code></pre><p>到此完成了 Laravel 语言包的替换，现在使用就是本地化了（如：表单验证），当然有无法替换的地方可以自行去修改语言包。</p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel-扩展包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-Fractal</title>
      <link href="/2019/09/26/Laravel-Fractal/"/>
      <url>/2019/09/26/Laravel-Fractal/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>我们想返回的数据做格式化一般情况下我们就在逻辑层当中操作，这样复用性很差基本就是复制粘贴。使用了  Fractal 之后我们就可以统一一些数据返回的规范，复用性非常高。</p><p><img src="https://i.loli.net/2019/09/26/Dy7bAWSHLeExzot.png" alt></p><p><strong>PHP 领域广受欢迎的 API 数据输出格式转换器</strong></p><ul><li>支持 <code>单个对象</code> 或者 <code>集合对象</code> 的格式化</li><li>通过 Fractal Transformer 显式修饰对象的数据输出，将复杂数据转为 ajax/restful</li><li>额外特性<ul><li>关联数据的<code>Include</code>动态加载</li><li>数据载荷转换到各种协议格式：<code>JSON</code>、<code>DataArray</code>、<code>HAL</code>等等</li></ul></li><li>友好的和<code>DingoApi</code>无缝结合</li></ul><p><strong>对于 WEB 站来说</strong></p><ul><li>不建议过多进行数据格式化，直接输出完整对象，尽量用对象来替代数组</li><li>特别的字段值计算可以封装为对象的方法</li></ul><h3 id="原生使用"><a href="#原生使用" class="headerlink" title="原生使用"></a><strong>原生使用</strong></h3><pre><code>class MyTransformer extends League\Fractal\TransformerAbstract{    # normalize主逻辑    public function transform($object){        return [            &#39;id&#39; =&gt; $object-&gt;id,            &#39;name&#39; =&gt; $object-&gt;name,        ];    }    ## include特性 ##    ## 使用前需要检测include参数：$manager-&gt;parseIncludes($_GET[&#39;include&#39;]);    protected $defaultIncludes = []; #声明需要默认include的资源    protected $availableIncludes = [tag]; #声明可选include资源    public function includeTag($object){        $tag = $object-&gt;tag;        return $this-&gt;item($tag, new TagTransformer);  #包含单对象        #return $this-&gt;collection($tags, new TagTransformer); #包含集合对象    }}$itemResource = new \Fractal\Resource\Item(    $object,    League\Fractal\TransformerAbstract $myTransformer);$collectionResource = new \Fractal\Resource\Collection(    $objects,    League\Fractal\TransformerAbstract $myTransformer);$manager = new League\Fractal\Manager();$manager = $manager-&gt;createData($itemResource|$collectionResource)-&gt;toArray|toJson(); #transformer转换数据# 可以进一步使用serializer在toArray()输出前调整数据结构</code></pre><h3 id="Laravel-下-Fractal-使用"><a href="#Laravel-下-Fractal-使用" class="headerlink" title="Laravel 下 Fractal 使用"></a>Laravel 下 Fractal 使用</h3><p>1、Composer 引入</p><pre><code>composer require league/fractal</code></pre><p>2、创建自定义数据处理文件</p><pre><code>&lt;?phpnamespace App\Http\DataResponse;use App\Http\Model\User;use League\Fractal\TransformerAbstract;class UserDataResponse extends TransformerAbstract{   public function transform(User $user)   {       return [           &#39;id&#39; =&gt; $user-&gt;id,           &#39;mobile&#39; =&gt; $user-&gt;mobile,           &#39;nickname&#39; =&gt; $user-&gt;nickname,           &#39;avatar&#39; =&gt; $user-&gt;avatar,           &#39;updated_at&#39; =&gt; (string)$user-&gt;updated_at,           &#39;created_at&#39; =&gt; (string)$user-&gt;created_at,       ];   }}</code></pre><p>3、集合对象序列化</p><pre><code> # 需要 use  use App\Http\DataResponse\UserDataResponse; use League\Fractal\Manager; use League\Fractal\Resource\Collection; # 正常使用 $fractal = new Manager(); $users = new collection(User::all(), new UserDataResponse()); $users = $fractal-&gt;createData($users)-&gt;toArray(); return $users;</code></pre><p>4、单个对象序列化</p><pre><code> # 需要 use  use App\Http\DataResponse\UserDataResponse; use League\Fractal\Manager; use League\Fractal\Resource\Item; # 正常使用 $fractal = new Manager(); $users = new Item(auth()-&gt;user(), new UserDataResponse()); $users = $fractal-&gt;createData($users)-&gt;toArray(); return $users;</code></pre><blockquote><p>参考地址：</p><p><a href="https://my.oschina.net/u/2400083/blog/988715" target="_blank" rel="noopener">https://my.oschina.net/u/2400083/blog/988715</a></p><p><a href="https://zhuanlan.zhihu.com/p/25554084" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25554084</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel-扩展包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-JWT</title>
      <link href="/2019/09/18/Laravel-JWT/"/>
      <url>/2019/09/18/Laravel-JWT/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><blockquote><p><a href="https://jwt.io/" target="_blank" rel="noopener">JWT</a> 是 JSON Web Token 的缩写，是一个非常轻巧的规范，这个规范允许我们使用 JWT 在用户和服务器之间传递安全可靠的信息。</p></blockquote><p>JWT 由头部（header）、载荷（payload）与签名（signature）组成，一个 JWT 类似下面这样：</p><pre class="line-numbers language-‘"><code class="language-‘">{    "typ":"JWT",    "alg":"HS256"}{    "iss":"http://larabbs.test",签发人    "iat":1515733500,签发时间    "exp":1515737100,过期时间    "nbf":1515733500,生效时间，在此之前是无效的    "jti":"c3U4VevxG2ZA1qhT",编号    "sub":1,主题    "prv":"23bd5c8949f600adb39e701c400872db7a5976f7"}signature<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>头部申明了加密算法；</li><li>载荷中有两个比较重要的数据，<code>exp</code> 是过期时间，<code>sub</code> 是 JWT 的主体，<strong>这里就是用户的 id</strong>；</li><li>最后的 signature 是由服务器进行的签名，保证了 token 不被篡改。</li></ul><p>用户 id，过期时间等数据都保存在 Token 中了，所以并不需要将 Token 保存在服务器中，客户端请求的时候在 Header 中携带 Token，服务器获取 Token 后，进行 <code>base64_decode</code> 即可获取数据进行校验，由于已经有了签名，所以不用担心数据被篡改。</p><p><strong>加密 Token 解密</strong></p><p><img src="https://i.loli.net/2019/11/17/jXCUve2W8xqMGpO.png" alt></p><blockquote><p>JWT 最后是通过 Base64 编码的，也就是说，它可以被翻译回原来的样子来的。所以不要在 JWT 中存放一些敏感信息。</p></blockquote><h3 id="安装-jwt-auth"><a href="#安装-jwt-auth" class="headerlink" title="安装 jwt-auth"></a>安装 jwt-auth</h3><pre><code>$ composer require tymon/jwt-auth</code></pre><p>安装完成后，我们需要设置一下 JWT 的 secret，这个 secret 很重要，用于最后的签名，更换这个 secret 会导致之前生成的所有 token 无效。</p><pre><code>$ php artisan jwt:secret</code></pre><p>可以看到在 .env 文件中，增加了一行 <code>JWT_SECRET</code>。</p><p><strong>Laravel 5.5 版本以上不需要在添加服务提供者。</strong></p><h3 id="发布配置"><a href="#发布配置" class="headerlink" title="发布配置"></a>发布配置</h3><pre><code>php artisan vendor:publish --provider=&quot;Tymon\JWTAuth\Providers\LaravelServiceProvider&quot;</code></pre><p>您现在应该有一个<code>config/jwt.php</code>文件，允许您配置此程序包的基础知识。</p><p>修改 <code>config/auth.php</code>，将 <code>api guard</code> 的 <code>driver</code> 改为 <code>jwt</code>。</p><p><em>config/auth.php</em></p><pre><code>&#39;guards&#39; =&gt; [    &#39;web&#39; =&gt; [        &#39;driver&#39; =&gt; &#39;session&#39;,        &#39;provider&#39; =&gt; &#39;users&#39;,    ],    &#39;api&#39; =&gt; [        &#39;driver&#39; =&gt; &#39;jwt&#39;,        &#39;provider&#39; =&gt; &#39;users&#39;,    ],],# 注意一下模型的服务提供者，默认使用的 app\user &#39;providers&#39; =&gt; [    &#39;users&#39; =&gt; [        &#39;driver&#39; =&gt; &#39;eloquent&#39;,        &#39;model&#39; =&gt; App\Http\Model\User::class,    ],</code></pre><p>如果使用了 Dingo API 修改 <code>config/api.php</code>，auth 中增加 JWT 相关的配置</p><p><em>config/api.php</em></p><pre><code>&#39;auth&#39; =&gt; [    &#39;jwt&#39; =&gt; &#39;Dingo\Api\Auth\Provider\JWT&#39;,],</code></pre><p>user 模型需要继承 <code>Tymon\JWTAuth\Contracts\JWTSubject</code> 接口，并实现接口的两个方法 getJWTIdentifier () 和 getJWTCustomClaims ()。</p><p><em>app\Models\User.php</em></p><pre><code>&lt;?phpnamespace App\Models;use Tymon\JWTAuth\Contracts\JWTSubject;use Illuminate\Notifications\Notifiable;use Illuminate\Foundation\Auth\User as Authenticatable;class User extends Authenticatable implements JWTSubject{    use Notifiable;    public function getJWTIdentifier()    {        return $this-&gt;getKey();    }    public function getJWTCustomClaims()    {        return [];    }}</code></pre><p>getJWTIdentifier 返回了 User 的 id，getJWTCustomClaims 是我们需要额外再 JWT 载荷中增加的自定义内容，这里返回空数组。</p><p><code>jwt-auth</code> 有两个重要的参数，可以在 <code>config/jwt.php</code> 中进行设置</p><ul><li>JWT_TTL 生成的 token 在多少分钟后过期，默认 60 分钟</li><li>JWT_REFRESH_TTL 生成的 token，在多少分钟内，可以刷新获取一个新 token，默认 20160 分钟，14 天。</li></ul><p>这里需要理解一下 JWT 的过期和刷新机制，过期很好理解，超过了这个时间，token 就无效了。刷新时间一般比过期时间长，只要在这个刷新时间内，即使 token 过期了， 依然可以换取一个新的 token，以达到应用长期可用，不需要重新登录的目的。</p><h3 id="助手函数"><a href="#助手函数" class="headerlink" title="助手函数"></a>助手函数</h3><pre><code>// 尝试通过某些凭据对用户进行身份验证$token = auth()-&gt;attempt($request);// 获取当前经过身份验证的用户。$result = auth()-&gt;user();// 注销用户-这将使当前令牌无效并取消验证用户的身份auth()-&gt;logout(); Token 可以继续使用直到 exp 过期auth()-&gt;logout(true);  马上把当前的 Token 永久性的加入黑名单// 刷新令牌，这会使当前令牌无效auth()-&gt;resfresh();auth()-&gt;resfresh(true,true); 将 true 作为第一个参数传递，以强制将令牌永久性列入黑名单。第二个参数将重置新令牌的声明// 使令牌无效（将其添加到黑名单）auth()-&gt;invalidate();auth()-&gt;invalidate(true); 马上把当前的 Token 永久性的加入黑名单// 判断当前用户是否登录auth()-&gt;check();</code></pre><h3 id="多用户验证"><a href="#多用户验证" class="headerlink" title="多用户验证"></a>多用户验证</h3><p>1、创建 Admin 模型，其他操作与 User 一致</p><pre><code>php artisan make:model Admin</code></pre><p>2、修改<code>config\auth.php</code>配置</p><pre><code> &#39;guards&#39; =&gt; [        &#39;admin&#39; =&gt; [            &#39;driver&#39; =&gt; &#39;jwt&#39;,            &#39;provider&#39; =&gt; &#39;admins&#39;,        ],        &#39;api&#39; =&gt; [            &#39;driver&#39; =&gt; &#39;jwt&#39;,            &#39;provider&#39; =&gt; &#39;users&#39;,            &#39;hash&#39; =&gt; false,        ],    ], &#39;providers&#39; =&gt; [        &#39;users&#39; =&gt; [            &#39;driver&#39; =&gt; &#39;eloquent&#39;,            &#39;model&#39; =&gt; App\Http\Model\User::class,        ],        &#39;admins&#39; =&gt; [            &#39;driver&#39; =&gt; &#39;eloquent&#39;,            &#39;model&#39; =&gt; App\Http\Model\Admin::class,        ],    ],    </code></pre><blockquote><p>JWT 超级详细的讲解博文：<a href="https://learnku.com/articles/10885/full-use-of-jwt#d08bfb" target="_blank" rel="noopener">https://learnku.com/articles/10885/full-use-of-jwt#d08bfb</a></p><p>JWT 官方使用手册：<a href="https://jwt-auth.readthedocs.io/en/develop/" target="_blank" rel="noopener">https://jwt-auth.readthedocs.io/en/develop/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel-扩展包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-第三方登录</title>
      <link href="/2019/09/09/Laravel-%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95/"/>
      <url>/2019/09/09/Laravel-%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>所谓的第三方登录，就是利用用户在第三方平台上已有的账号来快速完成自己应用的登录或者注册的功能，常用的协议为 OAuth 2.0，基本上每个 APP，都会集成微信，微博等第三方登录，方便用户快速的登录并开始使用。当然需要看一下 <a href>Socialite 社会化登录</a>能更好的使用第三方包。</p><h3 id="微信登录"><a href="#微信登录" class="headerlink" title="微信登录"></a>微信登录</h3><p>登录登录的流程图：</p><p><img src="https://i.loli.net/2019/09/12/DkGyJ3gdxB8r7vC.png" alt></p><h4 id="1、获取临时票据-CODE"><a href="#1、获取临时票据-CODE" class="headerlink" title="1、获取临时票据 CODE"></a>1、获取临时票据 CODE</h4><pre><code>https://open.weixin.qq.com/connect/oauth2/authorize?appid=自己的APPID&amp;redirect_uri=自己的网址&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirect</code></pre><p><img src="https://i.loli.net/2019/09/12/coS8U54QW6FBkn7.png" alt></p><h4 id="2、获取-access-token-与-open-id"><a href="#2、获取-access-token-与-open-id" class="headerlink" title="2、获取 access_token 与 open_id"></a>2、获取 access_token 与 open_id</h4><pre><code>https://api.weixin.qq.com/sns/oauth2/access_token?appid=自己的APPID&amp;secret=自己的AppSecret&amp;code=获取的CODE&amp;grant_type=authorization_code</code></pre><p><img src="https://i.loli.net/2019/09/12/vMzCp2Nq5BDiX6k.png" alt></p><h4 id="3、获取个人信息"><a href="#3、获取个人信息" class="headerlink" title="3、获取个人信息"></a>3、获取个人信息</h4><pre><code>https://api.weixin.qq.com/sns/userinfo?access_token=自己的access_token&amp;openid=OPENID&amp;lang=zh_CN</code></pre><pre><code>{    &quot;openid&quot;: &quot;xxxxxxxxxxx&quot;,    &quot;nickname&quot;: &quot;哪吒大战假老练&quot;,    &quot;sex&quot;: 1,    &quot;language&quot;: &quot;zh_CN&quot;,    &quot;city&quot;: &quot;资阳&quot;,    &quot;province&quot;: &quot;四川&quot;,    &quot;country&quot;: &quot;中国&quot;,    &quot;headimgurl&quot;: &quot;&quot;,    &quot;privilege&quot;: []}</code></pre><h3 id="扩展包"><a href="#扩展包" class="headerlink" title="扩展包"></a>扩展包</h3><p><a href="https://socialiteproviders.netlify.com/" target="_blank" rel="noopener">Socialite Providers</a> 超级多的第三方开箱就用包。只要使用的 OAuth 2.0 协议的第三方登录，都可以用同样的方法去实现登录。</p><h4 id="1、install"><a href="#1、install" class="headerlink" title="1、install"></a>1、install</h4><pre><code>$ composer require socialiteproviders/weixin</code></pre><p>Laravel 5.5 版本以上不需要在<code>confi/app.php</code>添加服务提供者，Laravel 会自动发现包</p><h4 id="2、事件监听器"><a href="#2、事件监听器" class="headerlink" title="2、事件监听器"></a>2、事件监听器</h4><p>在<code>app/Providers/EventServiceProvider</code>当中的 <code>listen[]</code>添加</p><pre><code>/** * The event handler mappings for the application. * * @var array */protected $listen = [    \SocialiteProviders\Manager\SocialiteWasCalled::class =&gt; [        // add your listeners (aka providers) here        &#39;SocialiteProviders\\Weixin\\WeixinExtendSocialite@handle&#39;,    ],];</code></pre><h4 id="3、配置设置"><a href="#3、配置设置" class="headerlink" title="3、配置设置"></a>3、配置设置</h4><p>添加到<code>config/services.php</code></p><pre><code>&#39;weixin&#39; =&gt; [    &#39;client_id&#39; =&gt; env(&#39;WEIXIN_KEY&#39;),    &#39;client_secret&#39; =&gt; env(&#39;WEIXIN_SECRET&#39;),    &#39;redirect&#39; =&gt; env(&#39;WEIXIN_REDIRECT_URI&#39;)],</code></pre><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><pre><code>$user = Socialite::driver(&#39;Weixin&#39;)-&gt;user();$accessTokenResponseBody = $user-&gt;accessTokenResponseBody;</code></pre><p>简单的使用</p><pre><code>        # 加载驱动        $driver = Socialite::driver($type);        if ($request-&gt;code)        {            # 获得 access_token 和 open_id            $token = $driver-&gt;getAccessTokenResponse($request-&gt;code)[&#39;access_token&#39;];        }else{            $token = $request-&gt;access_token;            # 设置 open_id            $driver-&gt;setOpenId($request-&gt;open_id);        }        # 获取用户信息        $result = $driver-&gt;userFromToken($token);        # 获取 unionid 只有在用户将公众号绑定到微信开放平台帐号后，才会出现 unionid 字段        $unionid = $result-&gt;offsetExists(&#39;unionid&#39;) ? $result-&gt;offsetGet(&#39;unionid&#39;) : null;</code></pre><p>核心源码在于<code>vendor/socialiteproviders/weixin/Provider.php</code></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel-扩展包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-DingoApi</title>
      <link href="/2019/09/08/Laravel-DingoApi/"/>
      <url>/2019/09/08/Laravel-DingoApi/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p><a href="https://github.com/dingo/api/" target="_blank" rel="noopener">dingo/api</a> 是一个 Lumen 和 Laravel 都可用的 RestFul 工具包，帮助我们快速的开始构建 RestFul Api。我们的目的是教会大家如何快速的搭建并使用这个包，更多的功能，还需要你仔细阅读 DingoApi 的 <a href="https://github.com/dingo/api/wiki" target="_blank" rel="noopener">文档</a> 来深入的学习和理解，<a href="https://github.com/liyu001989/dingo-api-wiki-zh" target="_blank" rel="noopener">这里</a>有一份中英对照的翻译，或许能帮到你。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre><code>$ composer require dingo/api</code></pre><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>先将 dingo 的配置文件发布出来</p><pre><code>$ php artisan vendor:publish --provider=&quot;Dingo\Api\Provider\LaravelServiceProvider&quot;</code></pre><p>执行成功后，我们会在 <code>config</code> 目录先看到 <code>api.php</code> 文件，打开文件我们可以看到所有的配置都是可以在 <code>.env</code> 中修改，下面我们主要讲解一下我们需要用到的配置。</p><p>1、API_STANDARDS_TREE 有是三个值可选</p><ul><li><code>x</code> 本地开发的或私有环境的</li><li><code>prs</code> 未对外发布的，提供给公司 app，单页应用，桌面应用等</li><li><code>vnd</code> 对外发布的，开放给所有用户</li></ul><pre><code>API_STANDARDS_TREE=prs</code></pre><p>2、API_SUBTYPE 一般情况下是我们项目的简称</p><pre><code>API_SUBTYPE=make</code></pre><p>3、API_PREFIX 和 API_DOMAIN<br>对于一个项目，通过前缀或者子域名的方式来区分开 API 与 Web 等页面访问地址是十分有必要的。假如正式上线的项目地址为 <code>www.make.com</code>，我们可以为 API 添加一个前缀</p><pre><code>API_PREFIX=api</code></pre><p>通过 <code>www.make.com/api</code> 来访问 API。<br>或者有可能单独配置一个子域名 <code>api.make.com</code></p><pre><code>API_DOMAIN=api.make.com</code></pre><p>通过 api.make.com 来访问 API。</p><p>特别要注意的是：<strong>前缀和子域名，两者有且只有一个</strong></p><p>4、API_VERSION<br>默认的 API 版本，当我们没有传 <code>Accept</code> 头的时候，默认访问该版本的 API。一般情况下配置 v1 即可。</p><pre><code>API_VERSION=v1# 请求头当中添加，选择版本Accept Accept: application/prs.make.v1+jsonAccept Accept: application/prs.make.v2+json</code></pre><p>5、API_STRICT<br>是否开启严格模式，如果开启，则必须使用 <code>Accept</code> 头才可以访问 API，也就是说直接通过浏览器，访问某个 GET 调用的接口，如 <code>https://api.larabbs.com/users</code>，将会报错。必须使用 Postman 之类的调试工具，设置 <code>Accept</code> 后才可访问。可以根据需求开启，默认情况下为 false。</p><p>6、API_DEBUG<br>测试环境，打开 debug，方便我们看到错误信息，定位错误。<br>最后我们的配置如下</p><pre><code>API_DEBUG=true</code></pre><p>7、配置 <code>.env</code></p><pre><code>API_STANDARDS_TREE=prsAPI_SUBTYPE=makeAPI_DOMAIN=api.make.comAPI_VERSION=v1API_DEBUG=true</code></pre><p>8、使用 dingo</p><pre><code># 依然是在 route/api.php 当中使用$api = app(&#39;Dingo\Api\Routing\Router&#39;);$api-&gt;version(&#39;v1&#39;, function($api) {    $api-&gt;get(&#39;version&#39;, function() {        return view(&#39;welcome&#39;);    });});$api-&gt;version(&#39;v2&#39;, function($api) {    $api-&gt;get(&#39;version&#39;, function() {        return response(&#39;this is version v2&#39;);    });});# 创建一个 Controller 类&lt;?phpnamespace App\Http\Controllers\v1;use Illuminate\Http\Request;use App\Http\Controllers\Controller as BaseController;use Dingo\Api\Routing\Helpers;class Controller extends BaseController{    use Helpers;}</code></pre><blockquote><p>注意如果是有 laravel-debugbar 那么就需要在 config/debugbar.php 把配置修改以下</p></blockquote><pre><code>&#39;enabled&#39; =&gt; env(&#39;APP_DEBUG&#39;, false)# 修改为&#39;enabled&#39; =&gt; env(&#39;DEBUGBAR_ENABLE&#39;, false)# 如果需要就在 .env 当中开启DEBUGBAR_ENABLE=true</code></pre><blockquote><p>提示：由于路由被 DingoApi 接管了，如果将来部署上线后你需要缓存路由，可以使用 <code>php artisan api:cache</code> 代替 <code>php artisan route:cache</code> ，本地测试请<strong>不要执行这个命令</strong>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel-扩展包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-日志操作</title>
      <link href="/2019/09/07/Laravel-%E6%97%A5%E5%BF%97%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/09/07/Laravel-%E6%97%A5%E5%BF%97%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>为了帮助你更多的了解应用程序中到底发生了什么，Laravel 提供了强大的日志服务，允许你将日志消息、系统错误日志记录到文件，甚至使用 Slack 通知到你的整个团队。</p><p>在 Laravel 框架中，Laravel 使用 <a href="https://github.com/Seldaek/monolog" target="_blank" rel="noopener">Monolog</a> 库，它为各种强大的日志处理提供支持。Laravel 使配置这些处理程序变得简单，允许你混合并匹配它们自定义的应用程序日志处理。</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>所有的应用程序日志系统配置都位于 <code>config/logging.php</code> 配置文件中。默认使用大概配置如下：</p><pre><code># 默认使用的 stack 通道&#39;default&#39; =&gt; env(&#39;LOG_CHANNEL&#39;, &#39;stack&#39;),# 注意真正在使用的是 .env 文件当中的 LOG_CHANNEL=stack，修改这里即可修改默认通道&#39;channels&#39; =&gt; [         # 默认使用的通道        &#39;stack&#39; =&gt; [            &#39;driver&#39; =&gt; &#39;stack&#39;,# 驱动            &#39;channels&#39; =&gt; [&#39;daily&#39;], # 聚合，支持多通道            &#39;ignore_exceptions&#39; =&gt; false, # 默认忽略异常        ],         # stack 又聚合了 daily 通道，它每天的日志信息都会输出到 storage/log 文件下        &#39;daily&#39; =&gt; [            &#39;driver&#39; =&gt; &#39;daily&#39;, # 驱动            &#39;path&#39; =&gt; storage_path(&#39;logs/laravel.log&#39;),# 日志文件存储路径            &#39;level&#39; =&gt; &#39;debug&#39;, # 八大错误级别            &#39;days&#39; =&gt; 14, # 日志分片周期，多少天一个文件        ],    ]</code></pre><h3 id="配置-Single-和-Daily-通道"><a href="#配置-Single-和-Daily-通道" class="headerlink" title="配置 Single 和 Daily 通道"></a>配置 Single 和 Daily 通道</h3><p><code>single</code> 和 <code>daily</code> 通道包含三个可选配置项：<code>bubble</code> 、<code>permission</code> 和 <code>locking</code></p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>名称</td><td>描述</td><td>默认值</td></tr><tr><td><code>bubble</code></td><td>消息处理后，指示消息是否推送到其他通道</td><td><code>true</code></td></tr><tr><td><code>permission</code></td><td>日志文件权限</td><td><code>0644</code></td></tr><tr><td><code>locking</code></td><td>写入之前尝试锁定日志文件</td><td></td></tr></tbody></table><h3 id="日志写入的八大级别"><a href="#日志写入的八大级别" class="headerlink" title="日志写入的八大级别"></a>日志写入的八大级别</h3><table><thead><tr><th align="left">错误等级</th><th align="left">描述</th><th align="left">整型值</th><th align="left">应用场景</th></tr></thead><tbody><tr><td align="left">debug</td><td align="left">代码引用为 “MonologLogger::DEBUG”</td><td align="left">100</td><td align="left">紧急，如系统挂掉</td></tr><tr><td align="left">info</td><td align="left">代码引用为 “MonologLogger::INFO”</td><td align="left">200</td><td align="left">需要立即采取行动，如数据库异常等</td></tr><tr><td align="left">notice</td><td align="left">代码引用为 “MonologLogger::NOTICE”</td><td align="left">250</td><td align="left">严重问题，如异常</td></tr><tr><td align="left">warning</td><td align="left">代码引用为 “MonologLogger::WARNING”</td><td align="left">300</td><td align="left">运行时错误，不需要立即处理但需要被记录和监控</td></tr><tr><td align="left">error</td><td align="left">代码引用为 “MonologLogger::ERROR”</td><td align="left">400</td><td align="left">警告但不是错误，比如使用了被废弃的API</td></tr><tr><td align="left">critical</td><td align="left">代码引用为 “MonologLogger::CRITICAL”</td><td align="left">500</td><td align="left">普通但值得注意的事件</td></tr><tr><td align="left">alert</td><td align="left">代码引用为 “MonologLogger::ALERT”</td><td align="left">550</td><td align="left">感兴趣的事件，比如登录、退出</td></tr><tr><td align="left">emergency</td><td align="left">代码引用为 “MonologLogger::EMERGENCY”</td><td align="left">600</td><td align="left">详细的调试信息</td></tr></tbody></table><h3 id="简单的使用"><a href="#简单的使用" class="headerlink" title="简单的使用"></a>简单的使用</h3><pre><code>&lt;?phpnamespace App\Http\Controllers;use Illuminate\Http\Request;# 引入 Loguse Illuminate\Support\Facades\Log;class UsersController extends Controller{    public function get()    {        # 写入日志，第二次参数为数组在日志文件当中转换为 JSON 默认使用配置文件中默认的通道        Log::info(&#39;记录的日志&#39;,[&#39;ip&#39; =&gt; \request()-&gt;ip()]);        # 以上是写入默认配置文件当中的通道，除此之外还可以指定写入的通道        Log::channel(&#39;single&#39;)-&gt;info(&#39;记录的日志&#39;,[&#39;ip&#39; =&gt; \request()-&gt;ip()]);        # 如果想要创建一个由多通道构成的按需记录的堆栈，可以使用 stack 方法：        Log::stack([&#39;single&#39;, &#39;slack&#39;])-&gt;info(&#39;Something happened!&#39;);    }}</code></pre><p>日志文件的结果：</p><pre><code># 注意虽然他们在日志文件里面的结果都是一样，但是他们存储的日志文件是不一样的一个单一、一个日常[2019-09-07 13:58:05] local.INFO: 记录的日志 {&quot;ip&quot;:&quot;xxxxxxxxxxx&quot;} </code></pre><h3 id="自定义-Monolog-通道"><a href="#自定义-Monolog-通道" class="headerlink" title="自定义 Monolog 通道"></a>自定义 Monolog 通道</h3><p>首先我们需要在<code>config/logging.php</code>中添加一个 tap 数组。</p><pre><code># 自定义 monolog 通道&#39;monolog&#39; =&gt; [    &#39;driver&#39; =&gt; &#39;daily&#39;, # 使用的 daily 每日记录    &#39;tap&#39; =&gt; [App\Logging\CustomizeFormatter::class],# 接口    &#39;permission&#39;=&gt; 0777, # 权限    &#39;path&#39; =&gt; storage_path(&#39;logs/laravel.log&#39;), # 存储的路径    &#39;level&#39; =&gt; &#39;debug&#39;, # 八大错误级别    &#39;days&#39; =&gt; 1, # 日志分片],</code></pre><p>创建 CustomizeFormatter.php</p><pre><code>&lt;?phpnamespace App\Logging;# 引入自定义的 Formatteruse App\Logging\JsonFormatter;class CustomizeFormatter{    /**     * 自定义给定的日志实例。     *     * @param  \Illuminate\Log\Logger  $logger     * @return void     */    public function __invoke($logger)    {        foreach ($logger-&gt;getHandlers() as $handler) {            $handler-&gt;setFormatter(new JsonFormatter());        }    }}</code></pre><p>创建 JsonFormatter.php</p><pre><code>&lt;?phpnamespace App\Logging;use Monolog\Formatter\JsonFormatter as BaseJsonFormatter;class JsonFormatter extends BaseJsonFormatter{    public function format(array $record) ：string　    {        // 这个就是最终要记录的数组，最后转成Json并记录进日志        $newRecord = [            &#39;time&#39; =&gt; $record[&#39;datetime&#39;]-&gt;format(&#39;Y-m-d H:i:s&#39;),            &#39;message&#39; =&gt; $record[&#39;message&#39;],        ];        if (!empty($record[&#39;context&#39;])) {            $newRecord = array_merge($newRecord, $record[&#39;context&#39;]);        }        //$json = &#39;aaa,bbb,ccc&#39;;  // 这是最终返回的记录串，可以按自己的需求改        $json = $this-&gt;toJson($this-&gt;normalize($newRecord), true) . ($this-&gt;appendNewline ? &quot;\n&quot; : &#39;&#39;);        return $json;    }}</code></pre><p>使用自定义的通道</p><pre><code>Log::channel(&#39;monolog&#39;)-&gt;info(&#39;记录的日志&#39;,[&#39;ip&#39; =&gt; \request()-&gt;ip()]);# 结果{&quot;time&quot;:&quot;2019-09-07 16:37:52&quot;,&quot;message&quot;:&quot;记录的日志&quot;,&quot;ip&quot;:&quot;xxxxxx&quot;}</code></pre><blockquote><p>重写父类的时候，一定要注意，如果父类有返回值限制的话，那么也必须跟父类一个类型不然就会报错。这的 format 在父类的时候限制返回的 string ，所以我们也需要在返回值限定那 string</p></blockquote><blockquote><p>参考地址：</p><p><a href="https://www.jianshu.com/p/b8e0ef4ef249" target="_blank" rel="noopener">https://www.jianshu.com/p/b8e0ef4ef249</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Composer</title>
      <link href="/2019/09/06/Composer/"/>
      <url>/2019/09/06/Composer/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>先了解一下历史，从拷贝第三方代码到项目中(1994)，到 PEAR 安装依赖包(1999)，再到 Composer 兴起(2012)，PHP 社区经历了将近 20 年的探索。PHP 这门古老的语言，也在不断的发展更新，在 Web 领域一直发光发热。 Composer 作为目前 PHP 包依赖管理的最佳工具，值得每一位 PHP 开发人员掌握。</p><h3 id="中文官网"><a href="#中文官网" class="headerlink" title="中文官网"></a>中文官网</h3><p><a href="https://www.phpcomposer.com/" target="_blank" rel="noopener">https://www.phpcomposer.com/</a></p><h3 id="什么是-Composer-？"><a href="#什么是-Composer-？" class="headerlink" title="什么是 Composer ？"></a>什么是 Composer ？</h3><p>是 PHP 用来管理依赖（dependency）关系的工具。你可以在自己的项目中声明所依赖的外部工具库（libraries），Composer 会自动帮你安装这些依赖的库文件。</p><h3 id="扩展和包"><a href="#扩展和包" class="headerlink" title="扩展和包"></a>扩展和包</h3><p>拓展和包是两个非常相近的概念。在 PHP 世界里，一般可以这样理解和区分两者：拓展（extension）和模块（module）等价，是用 C 语言写的功能合集。</p><p>包（package）和库（library）等价，主要是用 PHP 实现的功能合集；拓展以动态链接库（.dll或.so）的形式加载，包则是通过 require/include 方式加载。绝大部分时候，两者混用不会造成理解上的困难。</p><p>常见的拓展：GD、ZIP 、Memcached 、MySQLi 、 Redis 等 </p><p>常见的包：PHPMailer 、PHPOffice 、HTMLPurifier 等</p><h3 id="PEAR-与-PECL"><a href="#PEAR-与-PECL" class="headerlink" title="PEAR 与 PECL"></a>PEAR 与 PECL</h3><p>在 Composer 流行之前，PEAR 和 PECL 是更为 PHP 开发者所知的两个工具（社区）。PEAR 是 PHP 拓展和应用仓库（PHP Extension and Application Repository）的缩写，官网<a href="http://pear.php.net/" target="_blank" rel="noopener">http://pear.php.net</a>；PECL 是 PHP 拓展社区库（PHP Extension Community Library）的缩写，官网<a href="http://pecl.php.net/" target="_blank" rel="noopener">http://pecl.php.net</a>。</p><p>两者的区别可用拓展和包来区分：PECL 托管拓展，源代码多为 C 文件，例如 APC、AMPQ 等；PEAR 托管包，功能用 PHP 实现，如 PHP CodeSniffer、HTTP Request 等；PEAR 对应 pear 命令， PECL 对应 pecl 命令，可用这两个命令安装和管理拓展和包（ pear 的 build/pickle 子命令也可以编译 PECL 中的拓展）。两者互为补充，官网以姐妹（sisters）形容两者的关系。</p><p>PECL 是官方拓展的补充，目前仍处于活跃状态，一些优秀的拓展有成为官方拓展的潜质。韩天峰大神的 swoole 拓展也托管在 PECL 中，国内名气非常高。相比之下 PEAR 已是明日黄花。PEAR2 和 Pyrus（下一代的PEAR 包安装工具，基于 PHP5.3+ 构建，官网<a href="http://pear2.php.net/" target="_blank" rel="noopener">http://pear2.php.net</a>）的出现也未能挽救 PEAR 。PEAR 没落伴随着本文主角 Composer 的兴起。</p><p>PEAR 的定位是“提供可复用的 PHP 组件”，以中心化的方式为开发者提供功能包。中心化发布的方式保证了代码的质量，同时带来维护上的不便：通过评审的包才能发布，包过时现象严重。PEAR 安装的包是全局的，不能为单独项目安装依赖包，非特权用户不能自行安装依赖包。其他缺点还包括糟糕的依赖管理。随着 Github 的流行和 Composer 的出现，包管理进入 Composer 时代。PEAR 已经完成其历史使命，可以安心的去了。</p><h3 id="Composer"><a href="#Composer" class="headerlink" title="Composer"></a>Composer</h3><p>严格来说，Composer 的定位是依赖管理工具而非包管理器。Composer 中文网对 Composer 工作介绍如下。Composer 将这样为你解决问题：</p><p>a) 你有一个项目依赖于若干个库。</p><p>b) 其中一些库依赖于其他库。</p><p>c) 你声明你所依赖的东西。</p><p>d) Composer 会找出哪个版本的包需要安装，并安装它们（将它们下载到你的项目中）。</p><p>PEAR 能做的事情，Composer 都能做（包括安装 PECL 拓展），部分还能做得更好。Composer 默认把包安装在项目目录下，普通用户就能正常使用（ Composer 官方建议不要以 root 身份执行 Composer 命令）；鼓励遵循最佳实践（即大名鼎鼎的 PSR 规范，详情见 PHP-FIG 官网<a href="https://www.php-fig.org/" target="_blank" rel="noopener">https://www.php-fig.org</a>），极大的推动 PHP 社区编码风格的规范化；Composer 是去中心化的平台，任何人均可发布代码包；发布包无需评审，包的质量由用户投票决定…作为 PEAR 的继任者，Composer 的表现经受住了社区的考验，并成为事实上的依赖管理标准工具。</p><p>Composer 目前已经形成庞大的生态，在数量上，Composer 的包远超 PEAR 。由于任何人均可自由发布包且无需评审，Composer 生态中的包可能存在代码质量参差不齐、代码风格各异、后门漏洞等隐忧。另外 Composer 的依赖管理以项目为单位，一台机器上可能多次安装同一个包。但瑕不掩瑜，总体而言，Composer 极大的改变了 PHP 的开发生态，促进了代码交流和社区发展。</p><h3 id="Composer-用法"><a href="#Composer-用法" class="headerlink" title="Composer 用法"></a>Composer 用法</h3><p>Composer 为管理的项目的依赖而生，项目中的 composer.json 文件是其工作的依据。该文件中最重要的部分是 require 部分，该部分告诉 Composer 期望安装的<strong>包及其版本</strong>，例如：</p><pre><code>{    &quot;name&quot;: &quot;tinywan/easy-live&quot;,    &quot;description&quot;: &quot;nginx live module&quot;,    &quot;type&quot;: &quot;library&quot;,    &quot;license&quot;: &quot;MIT&quot;,    &quot;authors&quot;: [        {            &quot;name&quot;: &quot;Tinywan&quot;,            &quot;email&quot;: &quot;756684177@qq.com&quot;        }    ],    &quot;require&quot;: {        &quot;php&quot;: &quot;&gt;=7.0&quot;    },    &quot;autoload&quot;: {        &quot;psr-4&quot;: {            &quot;live\\&quot;: &quot;src&quot;        }    }}</code></pre><p>用 Lravel 的 composer.json  演示：</p><p><img src="https://i.loli.net/2020/02/16/7aY8NL5EqGxQ3yh.png" alt="2020-02-16_13-43.png"></p><p> 然后运行 composer install 命令，Composer 会自动分析依赖，安装最合适的包到 vendor 目录下。加 -v (-vv, -vvv)选项会打印命令执行过程中的详细信息。安装完毕后，vendor 目录下会生成 autoload.php 文件。在项目的入口文件中包含此文件： <strong>require DIR . “/vendor/autoload.php”</strong>;，接下来便可在项目的任何地方引用依赖包中的接口和类。</p><p>除 install 命令，Composer 提供了许多其他命令管理依赖。常用的命令场景包括：查找依赖、引入依赖、安装依赖、更新依赖。分别对应的命令是：</p><table><thead><tr><th align="center">命令</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">composer search</td><td align="center">根据关键字查找依赖包</td></tr><tr><td align="center">composer request</td><td align="center">引入依赖，声明项目或者全局( global，用户名全局，非系统全局)依赖某个包</td></tr><tr><td align="center">composer install</td><td align="center">安装 composer.json 声明的依赖包，最终安装的依赖包版本可能取决于有无 composer.lock 文件</td></tr><tr><td align="center">composer update</td><td align="center">更新依赖到最新版本，相当于删除 composer.lock 文件后执行 composer install</td></tr><tr><td align="center">composer info</td><td align="center">查看安装的依赖包信息，与 composer show 等价</td></tr><tr><td align="center">composer dumpautoload</td><td align="center">加 -o 选项可导出优化的加载器</td></tr><tr><td align="center">composer why(-not)</td><td align="center">查看（不）安装某个包的原因</td></tr></tbody></table><h3 id="Composer-加速"><a href="#Composer-加速" class="headerlink" title="Composer 加速"></a>Composer 加速</h3><p>有的时候会因为各种原因，我们使用 Composer 的时候回感觉安装的特别慢，网络问题是一个方面，我们可以使用一些国内的镜像来解决网络的问题，但是依然有些慢，因为 Composer 是单进程方式下载的，也就是说 Composer 安装完一个依赖，才回去下载并安装另一个依赖，任何网络问题都会让这个进程卡主。那么有没有一种方法让 Composer 并发下载所有依赖呢，这样整体安装速度不就会快很多吗？</p><p><a href="https://github.com/hirak/prestissimo" target="_blank" rel="noopener">hirak/prestissimo</a> 就是利用这个思路来加速 Composer 的，看一下这个包的描述 ——composer parallel install plugin （Composer 并行安装插件）。</p><pre><code>composer global require hirak/prestissimo</code></pre><p>切换国内阿里云镜像</p><p><a href="https://developer.aliyun.com/composer" target="_blank" rel="noopener">https://developer.aliyun.com/composer</a></p><pre><code>composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</code></pre><h3 id="Composer-加载机制"><a href="#Composer-加载机制" class="headerlink" title="Composer 加载机制"></a>Composer 加载机制</h3><p>使用 Composer 最大的好处是只需最开始 require 一个 autoload.php 文件，就可以 new 你所需要的类了，不再需要传统的方式 A 文件内各种 include 跳到 B 文件又各种 include，非常头疼。</p><p>Composer 的核心就是二个函数：spl_autoload_register 与 require_once</p><p>spl_autoload_register — 注册给定的函数作为 __autoload 的实现</p><p><strong>说明</strong></p><pre><code>spl_autoload_register ([ callable $autoload_function [, bool $throw = true [, bool $prepend = false ]]] ) : bool</code></pre><p>将函数注册到 SPL __autoload 函数队列中。如果该队列中的函数尚未激活，则激活它们。</p><p>如果在你的程序中已经实现了<a href="https://www.php.net/manual/zh/function.autoload.php" target="_blank" rel="noopener">__autoload()</a> 函数，它必须显式注册到<a href="https://www.php.net/manual/zh/function.autoload.php" target="_blank" rel="noopener">__autoload()</a> 队列中。因为  <strong>spl_autoload_register()</strong> 函数会将 Zend Engine 中的<a href="https://www.php.net/manual/zh/function.autoload.php" target="_blank" rel="noopener">__autoload()</a> 函数取代为 <a href="https://www.php.net/manual/zh/function.spl-autoload.php" target="_blank" rel="noopener">spl_autoload()</a> 或<a href="https://www.php.net/manual/zh/function.spl-autoload-call.php" target="_blank" rel="noopener">spl_autoload_call()</a>。</p><p>如果需要多条 autoload 函数，<strong>spl_autoload_register()</strong> 满足了此类需求。 它实际上创建了 autoload 函数的队列，按定义时的顺序逐个执行。相比之下， <a href="https://www.php.net/manual/zh/function.autoload.php" target="_blank" rel="noopener">__autoload()</a> 只可以定义一次。</p><p>注意：__autoload() 函数在 PHP7.2 以后就不支持了。综合起来该用那个明白来吧。</p><p>一个简单的自动加载：</p><pre><code>// loadclass函数不具备自动加载类的功能function loadclass($classname){    $filename = &quot;./class/&quot;.$classname.&quot;.class.php&quot;;    if(is_file($filename)){        include $filename;    }}// spl_autoload_register()函数让这个 loadclass 具备了自动加载类的功能spl_autoload_register(&quot;loadclass&quot;);</code></pre><p>不使用 Composer 的代码执行会比使用 Composer 的代码执行更快，Composer 是自动加载，尽管是不用的库。这个效率毕竟大概是在几十ms的差距。我们可以优化自动加载，做一个项目 Composer 优化提速。</p><pre class="line-numbers language-php"><code class="language-php">composer dumpautoload <span class="token operator">-</span>o<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此命令不止针对于 Laravel 程序，适用于所有使用 <code>composer</code> 来构建的程序。此命令会把 <code>PSR-0</code> 和 <code>PSR-4</code> 转换为一个类映射表，来提高类的加载速度。</p><p>当然作为 艺术家的框架，Laravel 也为我们提供了 Composer 的优化处理</p><pre class="line-numbers language-php"><code class="language-php"><span class="token shell-comment comment"># 官方解释：缓存框架引导文件</span>php artisan optimize<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>参考地址</p><p><a href="https://www.cnblogs.com/tinywan/p/8855236.html" target="_blank" rel="noopener">https://www.cnblogs.com/tinywan/p/8855236.html</a></p><p><a href="https://learnku.com/courses/laravel-package/2019/hirakprestissimo/1695" target="_blank" rel="noopener">https://learnku.com/courses/laravel-package/2019/hirakprestissimo/1695</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Composer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Composer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL-存储引擎</title>
      <link href="/2019/08/21/MySQL-%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/"/>
      <url>/2019/08/21/MySQL-%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><blockquote><p>MySQL 当中最最常用的存储引擎- Myisam 和 Innodb，他们二兄弟是 MySQL 当中最最常用的二个存储引擎了。当然 MySQL 的存储引擎不止他们二兄弟还有别的一些存储引擎，本着<strong>既存在即合理的原则</strong>，我们不能单方面的去评价谁好谁不好，只能说他们在不同的场景当中发挥的功力不同。那什么是存储引擎呢？</p></blockquote><p>首先我们要晓得 MySQL 的数据属于持久化存储的，表里面的数据最终都是存储在磁盘当中的，具体如何存储的，这个无需我们关心，但是要清楚存储的方式有很多种；好比一部电影，在硬盘上可以有不同的存储格式（比如：MP4、wmv、avi、rmvb、flv），它们所占的空间与清晰程度都是不一样的。</p><p>存储引擎说白了就是如何存储数据、如何为存储的数据建立索引、如何更新查询数据、如何删除数据等等技术的实现方法。引擎不同，组织处理数据的方式就不同，在关系型数据库中数据的存储是以表的形式存储的，所以存储引擎也可以称为表类型（即存储和操作此表的类型）注意：表有引擎，而库是没有引擎。</p><blockquote><p>在 Oracle 和 SQL Server 等数据库中只有一种存储引擎，所有数据存储管理机制都是一样的而 MySQL 数据库提供了多种存储引擎。用户可以根据不同的需求为数据表选择不同的存储引擎，用户也可以根据自己的需要编写自己的存储引擎。</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/e73160eegy1g6ay8oo1rdj21fo0u0gsd.jpg" alt></p><h2 id="Myisam"><a href="#Myisam" class="headerlink" title="Myisam"></a>Myisam</h2><blockquote><p>5.5之前的版本默认的存储引擎就是 Myisam  ， Myisam 应用是以读操作和插入操作为主，只有很少的更新和删除操作，并且对事务的完整性、并发性要求不是很高。只考虑性能方面上来说 Innodb 完全比不上 Myisam 。</p><p>特点：不支持事务，不支持外键，并非处理稍差，支持压缩机制，支持表锁。</p></blockquote><h3 id="存储方式"><a href="#存储方式" class="headerlink" title="存储方式"></a>存储方式</h3><p>Myisam 表是独立于操作系统的，这说明可以轻松地将其从 Windows 服务器移植到 Linux 服务器；每当我们建立一个 Myisam 引擎的表时，就会在本地磁盘上建立三个文件，详见</p><ul><li>*.FRM，存储表结构；</li><li>*.MYD，存储数据；</li><li>*.MYI，存储索引。</li></ul><p><img src="http://ww1.sinaimg.cn/large/e73160eegy1g69qbeiumtj20zw0lljw9.jpg" alt></p><p>① 静态 MyISAM ：<br>如果数据表中的各数据列的长度都是预先固定好的，即定长字段 char int float double ，服务器将自动选择这种表类型。因为数据表中每一条记录所占用的空间都是一样的，所以这种表存取和更新的效率非常高，并且容易缓存。当数据受损时，恢复工作也比较容易做</p><p>缺点是占用的空间通常比动态表多。静态表在数据存储时会根据列定义的宽度补足空格，但在访问的时候并不会得到这些空格，这些空格在返回给应用之前就已经去掉了。如果你需要返回字段后的空格，这种表类型就不可取</p><p>② 动态 MyISAM ：<br>如果数据表中出现 varchar、text 或 blob decimal  等变长字段时，服务器将自动选择这种表类型。相对于静态 MyISAM，这种表存储所占的空间比较小，但由于每条记录的长度不一，所以多次修改数据后，数据表中的数据就可能离散的存储在内存中，进而导致执行效率下降。同时，内存中也可能会出现很多碎片。因此，这种类型的表要经常用 optimize table 命令或优化工具来进行碎片整理，并且出现故障的时候恢复相对比较困难</p><p>③ 压缩 MyISAM ：<br>以上说到的两种类型的表都可以用 myisamchk 工具压缩。这种类型的表进一步减小了占用的存储空间，因为每条记录都是被单独压缩的，所以只有非常小的访问开支但是这种表压缩之后不能再被修改。另外，因为是压缩数据，所以这种表在读取的时候要先进行解压缩</p><h3 id="排列顺序"><a href="#排列顺序" class="headerlink" title="排列顺序"></a>排列顺序</h3><blockquote><p>Myisam  存储数据时不会按照主键 ID 值进行排序存储。该特点导致 Myisam 写入特别的快。</p></blockquote><h3 id="并发处理"><a href="#并发处理" class="headerlink" title="并发处理"></a>并发处理</h3><blockquote><p>Myisam 如果进行并发写入时，MySQL 会自动加锁保证数据的一致性，而 Myisam 加的是表锁。表锁会影响到整个数据表的操作。并发性稍微逊色。</p></blockquote><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>MyISAM 表无法处理事务，这就意味着有事务处理需求的表，不能使用 MyISAM 存储引擎。<br>MyISAM 存储引擎特别适合在以下几种情况使用：</p><ul><li>选择密集型的表：MyISAM 存储引擎在筛选大量数据时非常迅速，这是它最突出的优点。</li><li>插入密集型的表：MyISAM 的并发插入特性允许同时选择和插入数据。例如：MyISAM 存储引擎很适合管理邮件或 Web 服务器日志数据。</li><li>对事务完整性没有要求或者以 SELECT、INSERT 为主的应用基本都可以使用这个引擎来创建表。</li></ul><h2 id="Innodb"><a href="#Innodb" class="headerlink" title="Innodb"></a>Innodb</h2><blockquote><p>在 MySQL 5.5 之后官方默认的存储引擎就是 Innodb， Innodb 提供事务和崩溃修复能力和支持外键。 Innodb 支持行锁还支持表锁。Innodb 不保持表的具体行数，他要扫描全表来计算行数，但是使用了 where 之后呢就跟 Myisam 一样。Innodb 文件格式不支持跨平台。表主键如果没有设定主键或者非空唯一索引，就会自动生成一个 6 字节的主键(用户不可见)，数据是主索引的一部分，附加索引保存的是主索引的值。只要不是批量插入与查询其实与 Myisam 性能上差距不是很大。而且 Innodb 安全性上更优支持很多高级功能。</p><p>特点：支持事务，支持行锁，支持外键</p></blockquote><h3 id="存储方式-1"><a href="#存储方式-1" class="headerlink" title="存储方式"></a>存储方式</h3><p> Innodb 在 5.6 版本之前使用的共享存储，所有的表的数据和索引都存储在一个文件当中，文件名为 Inbdata1 。这样的共享存储的缺点就是所有表存储的索引和数据都存放在一个文件当中，表删除了，空间还没有及时释放掉，空间尺寸越大，带来的影响就是查询和添加速度变慢，因为都存在放一个文件中。另外如果此文件有所损坏，则 MySQL 中的所有的库数据都会不存在了。在 5.6 之后采用的独立空间存储，每个表的都是独立的存在。独立存储的好处每个 Innodb 引擎存储的索引与数据都存在每个独立的文件，因为每个表都是独立存储，插入语查询数据的压力小于共享存储，且如果不小心删除了存储文件那么顶多也就是一个表会受到影响。注意：<strong>在备份数据的时候不能直接复制可能会出现很多问题，备份数据的时候应当 mysqldump 注意如果数据量很大的话导出真的太费劲了</strong></p><p><img src="http://ww1.sinaimg.cn/large/e73160eegy1g6b16cawn8j21fo0u0qf3.jpg" alt></p><h3 id="排序顺序"><a href="#排序顺序" class="headerlink" title="排序顺序"></a>排序顺序</h3><blockquote><p> Innodb <strong>数据的写入顺序与数据存储顺序不一致</strong>，Innodb 会把数据按<strong>主键顺序排列</strong>，速度会比Myisam 慢一些。 Myisam 是数据怎么写入那么数据就怎么存储排列。</p></blockquote><h3 id="并发处理-1"><a href="#并发处理-1" class="headerlink" title="并发处理"></a>并发处理</h3><blockquote><p> Innodb 擅长处理并发，<strong>行级锁定</strong>，实现了行级锁定，在一定情况下可以选择行级锁定来提升并发性，也<strong>支持表级锁定</strong>，根据操作选择，<strong>只有通过索引条件检索数据，InnoDB 才使用行级锁，否则，InnoDB 将使用表锁！</strong></p></blockquote><h3 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h3><p>更新密集的表：InnoDB 存储引擎特别适合处理多重并发的更新请求</p><p>事务：InnoDB 存储引擎是支持事务的标准 MySQL 存储引擎</p><p>自动灾难恢复：与其它存储引擎不同，InnoDB 表能够自动从灾难中恢复</p><p>外键约束：MySQL 支持外键的存储引擎只有 InnoDB</p><h2 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h2><blockquote><p>锁是计算机协调多个进程或线程并发访问某一资源的机制。锁保证数据并发访问的一致性、有效性；锁冲突也是影响数据库并发访问性能的一个重要因素。锁是 MySQL 在服务器层和存储引擎层的的并发控制。</p><p>加锁是消耗资源的，锁的各种操作，包括获得锁、检测锁是否已解除、释放锁等。</p></blockquote><p>锁只支持一种特性，而事务支持四中。</p><p>一般来说，事务是必须满足4个条件（ACID）：：原子性（Atomicity，或称不可分割性）、一致性（Consistency）、隔离性（Isolation，又称独立性）、持久性（Durability）。</p><pre><code>原子性：一个事务（transaction）中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。一致性：在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设规则，这包含资料的精确度、串联性以及后续数据库可以自发性地完成预定的工作。隔离性：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）。持久性：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</code></pre><h3 id="共享锁与排他锁"><a href="#共享锁与排他锁" class="headerlink" title="共享锁与排他锁"></a>共享锁与排他锁</h3><p>共享锁(读锁)：其他事务可以读，但是不能写。</p><p>排他锁(写锁)：其他事务不可以读，也不可以写。</p><h3 id="颗粒锁"><a href="#颗粒锁" class="headerlink" title="颗粒锁"></a>颗粒锁</h3><p>Mysql 不同的存储引擎支持不同的锁机制，所有的存储引擎都以自己的方式显示了锁机制，服务器层完全不了解存储引擎中的锁实现：</p><ul><li>MyISAM 和 MEMORY 存储引擎采用的是表级锁（table-level locking）</li><li>BDB 存储引擎采用的是页面锁（page-level locking），但也支持表级锁</li><li>InnoDB 存储引擎既支持行级锁（row-level locking），也支持表级锁，但默认情况下是采用行级锁。</li></ul><table><thead><tr><th align="center">锁</th><th align="center">加锁效率</th><th align="center">是否会死锁</th><th align="center">颗粒</th><th align="center">冲突</th><th align="center">并发</th></tr></thead><tbody><tr><td align="center">表级锁</td><td align="center">开销小，加锁快</td><td align="center">不会出现死锁</td><td align="center">锁定粒度大</td><td align="center">发生锁冲突的概率最高</td><td align="center">并发度最低</td></tr><tr><td align="center">行级锁</td><td align="center">开销大，加锁慢</td><td align="center">会出现死锁</td><td align="center">锁定颗粒最小</td><td align="center">发送锁冲突的概率最低</td><td align="center">并发度最高</td></tr><tr><td align="center">页面锁</td><td align="center">开销和加锁时间界于表锁和行锁之间</td><td align="center">会出现死锁</td><td align="center">锁定粒度界于表锁和行锁之间</td><td align="center">发送锁冲突的概率一般</td><td align="center">并发度一般</td></tr></tbody></table><p>默认情况下，表锁和行锁都是自动获得的， 不需要额外的命令。</p><p>但是在有的情况下， 用户需要明确地进行锁表或者进行事务的控制， 以便确保整个事务的完整性，这样就需要使用事务控制和锁定语句来完成。</p><h3 id="不同颗粒锁的比较"><a href="#不同颗粒锁的比较" class="headerlink" title="不同颗粒锁的比较"></a>不同颗粒锁的比较</h3><ul><li>表锁<ul><li>这些存储引擎通过总是一次性同时获取所有需要的锁以及总是按相同的顺序获取表锁来避免死锁</li><li>表级锁更适合于以查询为主，并发用户少，只有少量按索引条件更新数据的应用，如 Web 应用</li></ul></li><li>行锁<ul><li>最大程度的支持并发，同时也带来了最大的锁开销。</li><li>在 InnoDB 中，除单个 SQL 组成的事务外，锁是逐步获得的，这就决定了在 InnoDB 中发生死锁是可能的。</li><li>行级锁只在存储引擎层实现，而 MySQL 服务器层没有实现。 行级锁更适合于有大量按索引条件并发更新少量不同数据，同时又有并发查询的应用，如一些在线事务处理（OLTP）系统</li></ul></li></ul><h3 id="Myisam-表级锁模式"><a href="#Myisam-表级锁模式" class="headerlink" title="Myisam 表级锁模式"></a>Myisam 表级锁模式</h3><ul><li>表共享读锁 （Table Read Lock）：不会阻塞其他用户对同一表的读请求，但会阻塞对同一表的写请求；</li><li>表独占写锁 （Table Write Lock）：会阻塞其他用户对同一表的读和写操作；</li></ul><p>Myisam 表的读操作与写操作之间，以及写操作之间是串联的。<strong>当一个线程获得对一个表写锁后，只有持有锁的线程可以进行表的更新操作。其他线程的读、写都会等待，直到锁被释放为止。</strong></p><p>默认情况下，写锁比读锁具有更高的优先级。当一个锁释放的时候，这个锁会优先给写锁队列中等候的获取锁请求，然后才会给读锁队列中等候的获取锁请求。这也正是 Myisam 表不太适合有大量更新操作的和查询操作应用的原因。因为大量的更新操作会导致查询操作很难获得读锁，从而可能导致永远阻塞。同时一些需要长时间运行的查询操作，也会使写线程“饿死”应用当中应当避免长时间的查询操作（在可能的情况下可以通过使用中间表等措施对SQL 语句做一定的“分解” ，使每一步查询都能在较短时间完成，从而减少锁冲突。如果复杂查询不可避免，应尽量安排在数据库空闲时段执行，比如一些定期统计可以安排在夜间执行）。</p><p>可以设置改变读锁和写锁的优先级：</p><ul><li>通过指定启动参数 low-priority-updates，使 MyISAM 引擎默认给予读请求以优先的权利。</li><li>通过执行命令 SET LOW_PRIORITY_UPDATES=1，使该连接发出的更新请求优先级降低。</li><li>通过指定 INSERT、UPDATE 、DELETE 语句的 LOW_PRIORITY 属性，降低该语句的优先级。<br>给系统参数 max_write_lock_count 设置一个合适的值，当一个表的读锁达到这个值后，MySQL 就暂时将写请求的优先级降低，给读进程一定获得锁的机会。</li></ul><h3 id="Myisam加表锁方法"><a href="#Myisam加表锁方法" class="headerlink" title="Myisam加表锁方法"></a>Myisam加表锁方法</h3><p>Myisam 在执行查询语句 select 前，会自动给涉及的表加读锁。</p><p>Myisam 在执行更新操作 update dalete insert 前，会自动给涉及的表加写锁。</p><blockquote><p>这个过程并不需要用户干预，因此，用户一般不需要直接用 LOCK TABLE 命令给 Myisam 表显式加锁。</p><p>在自动加锁的情况下，MyISAM 总是一次获得 SQL 语句所需要的全部锁，这也正是 MyISAM 表不会出现死锁（Deadlock Free）的原因。</p></blockquote><p>MyISAM 存储引擎支持并发插入，以减少给定表的读和写操作之间的争用：</p><p>如果 MyISAM 表在数据文件中间没有空闲块，则行始终插入数据文件的末尾。 在这种情况下，你可以自由混合并发使用 MyISAM 表的 INSERT 和 SELECT 语句而不需要加锁——你可以在其他线程进行读操作的时候，同时将行插入到 MyISAM 表中。 文件中间的空闲块可能是从表格中间删除或更新的行而产生的。 如果文件中间有空闲快，则并发插入会被禁用，但是当所有空闲块都填充有新数据时，它又会自动重新启用。 要控制此行为，可以使用 MySQL 的 concurrent_insert 系统变量。</p><p>如果你使用 LOCK TABLES 显式获取表锁，则可以请求 READ LOCAL 锁而不是 READ 锁，以便在锁定表时，其他会话可以使用并发插入。</p><ul><li>当 concurrent_insert 设置为0时，不允许并发插入。</li><li>当 concurrent_insert 设置为1时，如果MyISAM表中没有空洞（即表的中间没有被删除的行），MyISAM 允许在一个线程读表的同时，另一个线程从表尾插入记录。这也是 MySQL 的默认设置。</li><li>当 concurrent_insert 设置为2时，无论 MyISAM 表中有没有空洞，都允许在表尾并发插入记录。</li></ul><h3 id="查询表级锁争用情况"><a href="#查询表级锁争用情况" class="headerlink" title="查询表级锁争用情况"></a>查询表级锁争用情况</h3><p>可以通过检查 table_locks_waited 和 table_locks_immediate 状态变量来分析系统上的表锁的争夺，如果 Table_locks_waited 的值比较高，则说明存在着较严重的表级锁争用情况：</p><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> SHOW STATUS LIKE 'Table%';+-----------------------+---------+| Variable_name | Value |+-----------------------+---------+| Table_locks_immediate | 1151552 || Table_locks_waited | 15324 |+-----------------------+---------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Innodb行级锁和表级锁"><a href="#Innodb行级锁和表级锁" class="headerlink" title="Innodb行级锁和表级锁"></a>Innodb行级锁和表级锁</h3><p>InnoDB 实现了以下两种类型的<strong>行锁</strong>：</p><ul><li>共享锁（S）：允许一个事务去读一行，阻止其他事务获得相同数据集的排他锁。</li><li>排他锁（X）：允许获得排他锁的事务更新数据，阻止其他事务取得相同数据集的共享读锁和排他写锁。</li></ul><blockquote><p>为了允许行锁和表锁共存，实现多粒度锁机制，InnoDB 还有两种内部使用的意向锁（Intention Locks），这两种意向锁都是<strong>表锁</strong>：</p></blockquote><ul><li>意向共享锁（IS）：事务打算给数据行加行共享锁，事务在给一个数据行加共享锁前必须先取得该表的 IS 锁。</li><li>意向排他锁（IX）：事务打算给数据行加行排他锁，事务在给一个数据行加排他锁前必须先取得该表的 IX 锁。</li></ul><p><strong>锁模式的兼容情况</strong></p><p><img src="http://ww1.sinaimg.cn/large/e73160eegy1g6dfpsdoulj20k006qwep.jpg" alt></p><blockquote><p>如果一个事务请求的锁模式与当前的锁兼容， InnoDB 就将请求的锁授予该事务； 反之， 如果两者不兼容，该事务就要等待锁释放。</p></blockquote><h3 id="Innodb加锁方法"><a href="#Innodb加锁方法" class="headerlink" title="Innodb加锁方法"></a>Innodb加锁方法</h3><ul><li><p>意向锁是 Innodb自 动加的，不需要用户干预。</p></li><li><p>对于对于 update insert delete 语句， innodb 会自动给涉及数据集加排他锁（X)；</p></li><li><p>对于普通 select 语句 innodb 不会加任何锁。</p></li><li><p>事务可以通过以下语句显式给记录集加共享锁或排他锁：</p><ul><li>共享锁（S）：SELECT * FROM table_name WHERE … LOCK IN SHARE MODE。 其他 session 仍然可以查询记录，并也可以对该记录加 share mode 的共享锁。但是如果当前事务需要对该记录进行更新操作，则很有可能造成死锁。</li><li>排他锁（X)：SELECT * FROM table_name WHERE … FOR UPDATE。其他 session 可以查询该记录，但是不能对该记录加共享锁或排他锁，而是等待获得锁</li></ul></li></ul><h3 id="InnoDB-行锁实现方式"><a href="#InnoDB-行锁实现方式" class="headerlink" title="InnoDB 行锁实现方式"></a>InnoDB 行锁实现方式</h3><ul><li>InnoDB 行锁是通过给索引上的索引项加锁来实现的，这一点 MySQL 与 Oracle 不同，后者是通过在数据块中对相应数据行加锁来实现的。InnoDB 这种行锁实现特点意味着：只有通过索引条件检索数据，InnoDB 才使用行级锁，否则，InnoDB 将使用表锁！</li><li>不论是使用主键索引、唯一索引或普通索引，InnoDB 都会使用行锁来对数据加锁。</li><li>只有执行计划真正使用了索引，才能使用行锁：即便在条件中使用了索引字段，但是否使用索引来检索数据是由 MySQL 通过判断不同执行计划的代价来决定的，如果 MySQL 认为全表扫描效率更高，比如对一些很小的表，它就不会使用索引，这种情况下 InnoDB 将使用表锁，而不是行锁。因此，在分析锁冲突时，<br>别忘了检查 SQL 的执行计划（可以通过 explain 检查 SQL 的执行计划），以确认是否真正使用了索引。（更多阅读：<a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s/h4B84UmzAUJ81iBY_FXNOg" target="_blank" rel="noopener">MySQL索引总结</a>）</li><li>由于 MySQL 的行锁是针对索引加的锁，不是针对记录加的锁，所以虽然多个 session 是访问不同行的记录， 但是如果是使用相同的索引键， 是会出现锁冲突的（后使用这些索引的 session 需要等待先使用索引的session 释放锁后，才能获取锁）。 应用设计的时候要注意这一点。</li></ul><h3 id="悲观锁与乐观锁"><a href="#悲观锁与乐观锁" class="headerlink" title="悲观锁与乐观锁"></a>悲观锁与乐观锁</h3><ul><li><p><strong>乐观锁(Optimistic Lock)</strong>：假设不会发生并发冲突，只在提交操作时检查是否违反数据完整性。 乐观锁不能解决脏读的问题。</p><ul><li>乐观锁, 顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在更新的时候会判断一下在此期间别人有没有去更新这个数据，可以使用版本号等机制。乐观锁适用于多读的应用类型，这样可以提高吞吐量，像数据库如果提供类似于 write_condition 机制的其实都是提供的乐观锁。</li></ul></li><li><p><strong>悲观锁(Pessimistic Lock)</strong>：假定会发生并发冲突，屏蔽一切可能违反数据完整性的操作。</p><ul><li>悲观锁，顾名思义，就是很悲观，每次去拿数据的时候都认为别人会修改，所以每次在拿数据的时候都会上锁，这样别人想拿这个数据就会 block 直到它拿到锁。传统的关系型数据库里边就用到了很多这种锁机制，比如行锁，表锁等，读锁，写锁等，都是在做操作之前先上锁。</li></ul></li></ul><h3 id="一些优化锁性能的建议"><a href="#一些优化锁性能的建议" class="headerlink" title="一些优化锁性能的建议"></a>一些优化锁性能的建议</h3><ul><li>尽量使用较低的隔离级别；</li><li>精心设计索引， 并尽量使用索引访问数据， 使加锁更精确， 从而减少锁冲突的机会</li><li>选择合理的事务大小，小事务发生锁冲突的几率也更小</li><li>给记录集显示加锁时，最好一次性请求足够级别的锁。比如要修改数据的话，最好直接申请排他锁，而不是先申请共享锁，修改时再请求排他锁，这样容易产生死锁</li><li>不同的程序访问一组表时，应尽量约定以相同的顺序访问各表，对一个表而言，尽可能以固定的顺序存取表中的行。这样可以大大减少死锁的机会</li><li>尽量用相等条件访问数据，这样可以避免间隙锁对并发插入的影响</li><li>不要申请超过实际需要的锁级别</li><li>除非必须，查询时不要显示加锁。 MySQL 的 MVCC 可以实现事务中的查询不用加锁，优化事务性能； MVCC 只在 COMMITTED READ（读提交）和 REPEATABLE READ（可重复读）两种隔离级别下工作</li><li>对于一些特定的事务，可以使用表锁来提高处理速度或减少死锁的可能</li></ul><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><blockquote><p>索引是存储引擎用于快速找到记录的一种数据结构。如果说没有索引的话，数据库就必须重第一条记录开始进行全表扫描，直到找出相关的行。数据越多，检索的代价就越高，检索时如果表的列存在索引，那么 MySQL 就能快速到达指定位置去搜索数据文件，而不必查看所有数据。注意有些情况下，MySQL 如果觉得全表扫描来的好，那么也不会去走索引。</p><p><strong>索引是一种以空间换取时间的方式，牺牲了写的速度，提高查询速度，创建完毕索引后，写慢读快</strong></p></blockquote><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><blockquote><p>索引依托于存储引擎的实现，因此，每种存储引擎的索引都不一定完全的相同，并且每种存储引擎也不一定支持所有的索引类型。所有存储引擎支持每个表至少16个索引，总索引长度至少为256字节。大多数存储引擎有更高的额限制。</p></blockquote><p>MySQL 中索引的存储类型有两种： BTREE 和 HASH ，具体和表的存储引擎相关；</p><p>为什么我们添加完索引后查询速度为变快？</p><p>传统的查询方法，是按照表的顺序遍历的，不论查询几条数据，MySQL 需要将表的数据从头到尾遍历一遍，在我们添加完索引之后， MySQL 一般通过 BTREE 算法生成一个索引文件，在查询数据库时，找到索引文件进行遍历(折半查找大幅查询效率)，找到相应的键从而获取数据。</p><h3 id="索引类型"><a href="#索引类型" class="headerlink" title="索引类型"></a>索引类型</h3><p>在 MySQL 索引默认有 btree 和 hash 两种类型，Myisam ,Innodb 中,默认用 btree 索引类型。</p><p>两者的区别：</p><ul><li>hash 函数计算后的结果,是随机的,如果是在磁盘上放置数据,添加的数据行在磁盘上随机放置,点对点的查询速度最快。  select name from id=1;</li><li>hash 类型不能对范围查询进行优化</li><li>无法利用前缀索引，比如 在 btree 中, 字段值 “zhangsan” ,查询 字段=“zhang”,可以利用索引,而 hash 类型则不行</li><li>排序也无法优化</li><li>通过索引拿到数据位置,必须回到表中取数据</li></ul><p>优点：</p><ul><li>加快数据的查询速度</li><li>唯一索引，可以保证数据库表中每一行数据的唯一性</li><li>在实现数据的参考完整性方面，可以加速表和表之间的连接</li><li>在使用分组和排序子句进行数据查询时，也可以显著减少查询中分组和排序的时间</li></ul><p>缺点：</p><ul><li>占用磁盘空间，除了数据表占数据空间之外，每一个索引还要占一定的物理空间，如果有大量的索引，索引文件可能比数据文件更快达到最大文件尺寸（<strong>合理运用，问题不大</strong>）</li><li>损耗性能（<strong>添加、修改、删除</strong>） 索引需要动态地维护</li></ul><h3 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h3><p><strong>普通索引，组合索引</strong>：<strong>对关键字没有要求</strong>。</p><pre class="line-numbers language-mysql"><code class="language-mysql">alter table 表名 add index 索引名称 (`创建索引的字段`); # 普通索引alter table 表名 add index 索引名称 (`创建索引的字段`,`创建索引的字段`); # 组合索引<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>唯一索引</strong>：<strong>要求关键字不能重复，同时增加唯一约束</strong>。</p><pre class="line-numbers language-mysql"><code class="language-mysql">alter table 表名 add unique index 索引名称 (`创建索引的字段`);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>主键索引</strong>：<strong>要求关键字不能重复，也不能为 NULL 。同时增加主键约束</strong>。</p><pre class="line-numbers language-mysql"><code class="language-mysql">alter table 表名 add primary key 索引名称 (`创建索引的字段`);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>全文索引</strong>：<strong>关键字的来源不是所有字段的数据，而是从字段中提取的特别关键词</strong>。</p><pre class="line-numbers language-mysql"><code class="language-mysql">alter table 表名 add fulltext (`创建索引的内容`);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>查看索引</strong></p><pre class="line-numbers language-mysql"><code class="language-mysql">show index from 表名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>删除索引</strong></p><pre class="line-numbers language-mysql"><code class="language-mysql">alter table 表名 drop index 索引名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h3><blockquote><p>索引设计不合理或者缺少索引都会对数据库和应用程序的性能造成障碍，高效的索引对于获得良好的性能非常重要。</p></blockquote><ol><li><p>索引并非越多越好，一个表当中如果有大量的索引，那么他还会影响到更新操作（insert、update、delete）的性能，因为当表的数据更改的同时，索引也会进行调整和更新。</p></li><li><p>避免对<strong>经常更新的表</strong>设计过多的索引，并且索引中的列尽可能要少，而对经常用于查询的字段应该创建索引，但要避免添加不必要的字段</p></li><li><p>数据量小的表最好不要使用索引，由于数据较少，查询花费的时间可能比遍历索引时间还要短，索引可能不会产生优化效果</p></li><li><p>在条件表达式中经常用到的不同值较多的列上建立索引，在不同值较少的列上不要建立索引，比如性别字段只有男和女，就没必要建立索引。如果建立索引不但不会提高查询效率，反而会严重降低更新速度</p></li><li><p>当唯一性是某种数据本身的特征时，指定唯一索引。使用唯一索引需能确保定义的列的数据完整性，以提高查询速度</p></li><li><p>在频繁排序或分组（即 group by 或 order by 操作）的列上建立索引，如果待排序的列有多个，可以在这些列上建立组合索引 </p></li></ol><p>总结：<br>    较频繁的作为查询条件字段应该创建索引<br>    唯一性太差的字段不适合创建索引，尽管频繁作为查询条件，例如 gender 性别字段<br>    更新非常频繁的字段不适合作为索引<br>    不会出现在 where 子句中的字段不该创建索引</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>1、 存储结构</strong></p><p>MyISAM：每个MyISAM在磁盘上存储成三个文件。第一个文件的名字以表的名字开始，扩展名指出文件类型。.frm文件存储表定义。数据文件的扩展名为.MYD (MYData)。索引文件的扩展名是.MYI (MYIndex)。<br>InnoDB：所有的表都保存在同一个数据文件中（也可能是多个文件，或者是独立的表空间文件），InnoDB表的大小只受限于操作系统文件的大小，一般为2GB。</p><p><strong>2、 存储空间</strong></p><p>MyISAM：可被压缩，存储空间较小。支持三种不同的存储格式：静态表(默认，但是注意数据末尾不能有空格，会被去掉)、动态表、压缩表。<br>InnoDB：需要更多的内存和存储，它会在主内存中建立其专用的缓冲池用于高速缓冲数据和索引。</p><p><strong>3、 可移植性、备份及恢复</strong></p><p>MyISAM：数据是以文件的形式存储，所以在跨平台的数据转移中会很方便。在备份和恢复时可单独针对某个表进行操作。<br>InnoDB：免费的方案可以是拷贝数据文件、备份 binlog，或者用 mysqldump，在数据量达到几十G的时候就相对痛苦了。</p><p><strong>4、 事务支持</strong></p><p>MyISAM：强调的是性能，每次查询具有原子性,其执行数度比InnoDB类型更快，但是不提供事务支持。<br>InnoDB：提供事务支持事务，外部键等高级数据库功能。 具有事务(commit)、回滚(rollback)和崩溃修复能力(crash recovery capabilities)的事务安全(transaction-safe (ACID compliant))型表。</p><p><strong>5、 AUTO_INCREMENT</strong></p><p>MyISAM：可以和其他字段一起建立联合索引。引擎的自动增长列必须是索引，如果是组合索引，自动增长可以不是第一列，他可以根据前面几列进行排序后递增。<br>InnoDB：InnoDB中必须包含只有该字段的索引。引擎的自动增长列必须是索引，如果是组合索引也必须是组合索引的第一列。</p><p><strong>6、 表锁差异</strong></p><p>MyISAM：只支持表级锁，用户在操作myisam表时，select，update，delete，insert语句都会给表自动加锁，如果加锁以后的表满足insert并发的情况下，可以在表的尾部插入新的数据。<br>InnoDB：支持事务和行级锁，是innodb的最大特色。行锁大幅度提高了多用户并发操作的新能。但是InnoDB的行锁，只是在WHERE的主键是有效的，非主键的WHERE都会锁全表的。</p><p><strong>7、 表主键</strong></p><p>MyISAM：允许没有任何索引和主键的表存在，索引都是保存行的地址。<br>InnoDB：如果没有设定主键或者非空唯一索引，就会自动生成一个6字节的主键(用户不可见)，数据是主索引的一部分，附加索引保存的是主索引的值。</p><p><strong>8、 表的具体行数</strong></p><p>MyISAM：保存有表的总行数，如果select count(<em>) from table;会直接取出出该值。<br>InnoDB：没有保存表的总行数，如果使用select count(</em>) from table；就会遍历整个表，消耗相当大，但是在加了wehre条件后，myisam和innodb处理的方式都一样。</p><p><strong>9、 CURD操作</strong></p><p>MyISAM：如果执行大量的SELECT，MyISAM是更好的选择。<br>InnoDB：如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表。DELETE 从性能上InnoDB更优，但DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除，在innodb上如果要清空保存有大量数据的表，最好使用truncate table这个命令。</p><p><strong>10、 外键</strong></p><p>MyISAM：不支持<br>InnoDB：支持<br>通过上述的分析，基本上可以考虑使用InnoDB来替代MyISAM引擎了，原因是InnoDB自身很多良好的特点，比如事务支持、存储 过程、视图、行级锁定等等，在并发很多的情况下，相信InnoDB的表现肯定要比MyISAM强很多。另外，任何一种表都不是万能的，只用恰当的针对业务类型来选择合适的表类型，才能最大的发挥MySQL的性能优势。如果不是很复杂的Web应用，非关键应用，还是可以继续考虑MyISAM的，这个具体情况可以自己斟酌。</p><p>表锁，行锁，行锁副作用（update 多时候变慢），在 select 和 update 混合的情况下，行锁巧妙解决了读写互斥的问题；</p><p>而 Innodb 由于支持行锁，所以在数据修改方面更胜一筹</p><blockquote><p>参考地址：</p><p><a href="https://zhuanlan.zhihu.com/p/29150809" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/29150809</a></p><p><a href="https://blog.csdn.net/qq_19865749/article/details/79309387" target="_blank" rel="noopener">https://blog.csdn.net/qq_19865749/article/details/79309387</a></p><p><a href="https://juejin.im/entry/5a448726f265da43062b10f1" target="_blank" rel="noopener">https://juejin.im/entry/5a448726f265da43062b10f1</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP+Nginx执行请求的原理</title>
      <link href="/2019/08/18/PHP-Nginx%E6%89%A7%E8%A1%8C%E8%AF%B7%E6%B1%82%E7%9A%84%E5%8E%9F%E7%90%86/"/>
      <url>/2019/08/18/PHP-Nginx%E6%89%A7%E8%A1%8C%E8%AF%B7%E6%B1%82%E7%9A%84%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><blockquote><p>当我们访问一个 Web 站点，PHP 和 Nginx 是怎么去执行的呢？</p><p>浏览器发起请求 -&gt;  web_server(nginx)  分发处理-&gt;  PHP 执行代码返回结果</p></blockquote><h3 id="CGI"><a href="#CGI" class="headerlink" title="CGI"></a>CGI</h3><ul><li><p>CGI<br>CGI 是 Web 服务器运行外部程序的规范。意思就是通过 CGI 可以与你的程序通信，通过 CGI 标准格式。你的程序可以和浏览器交互。</p><blockquote><p>简单理解 CGI 就是一个协议，规定了一些东西该怎么传，你的程序这边怎么接受处理等规范。</p></blockquote></li><li><p>PHP-CGI<br>PHP-CGI 就是 CGI 协议 PHP 的一个实现版。PHP-CGI 会为每个请求 fork 一个进程处理，处理完成后退出。(这个模式叫做 fork-and-execute)。这样的模式不符合现在动不动大规模的流量，所以已退出历史舞台。</p></li><li><p>FastCGI<br>FastCGI 是 CGI 的升级版，他会预先启动一个 master 进程读取配置文件，然后 fork 多个 work 进程等待连接。监听到请求，分配给 work 进程做具体的处理。这样大大提高了程序的性能。</p><blockquote><p>FastCGi 会管理进程，处理完成后不会轻易销毁。而 CGI 会为每一个请求，创建进程，销毁进程。</p></blockquote></li><li><p>PHPFPM<br>作为世界上最好的语言，当然要跟上潮流。当发现 PHP-CGI 性能不佳时，又恰好出现了 FastCGI 协议。所以 PHP 实现了一个 PHP 版本的 FastCGI，名字叫做 PHPFPM（FastCGI Process Manager）。 PHPFPM 启动时会开启 一个 master 进程和若干个 work 进程。master 进程监听请求，并转发给 work 进程处理，每一个 work 进程都有一个 PHP 解释器，你的代码在每一个 work 进程中都有一份，work 进程是真正执行代码的地方。</p></li></ul><h3 id="一次完整的流程"><a href="#一次完整的流程" class="headerlink" title="一次完整的流程"></a>一次完整的流程</h3><p>首先用户访问 Web 站点</p><p>域名进行 DNS 解析</p><p>DNS 解析完成之后，发起 TCP 协议的三次捂手</p><p>HTTP 请求对应 IP 服务器和端口</p><p>Nginx 监听到对应的端口请求之后</p><p>Nginx 会对 URL 做一个 Location 的正则匹配</p><p>如果是静态资源则返回文件，Nginx 响应 HTTP 请求</p><p>如果是动态资源，通过正则匹配到请求 PHP 脚本，那么他会通过 Nginx 的模块 ngx_http_fastcgi_module 把请求分发给 PHPFPM 处理，也就是 Nginx 配置文件当中的 fastcgi_pass=127.0.0.1:9000 这种属于网络模式</p><p>PHPFPM master 进程监听到请求之后，分配给 work 处理（每一个 work 进程中都有一个 PHP 解释器），PHPFPM 在启动的时候已经 work 进程已经加载了配置，加载了你写的代码。所以说 work 进程接收到请求后立马执行，然后 work 进程执行返回的结果给 Nginx，Nginx 响应 HTTP 请求。</p><h3 id="ngx-http-fastcgi-module-模块"><a href="#ngx-http-fastcgi-module-模块" class="headerlink" title="ngx_http_fastcgi_module 模块"></a>ngx_http_fastcgi_module 模块</h3><p>在浏览器请求 web_server 是 HTTP 协议 或者 HTTPS 协议，但是 PHPFPM 不懂怎么办了？这里 Nginx 提供了一个 ngx_http_fastcgi_module ，ngx_http_fastcgi_module 把 HTTP 或者 HTTPS 请求 映射成 FastCGI 请求。这样 PHP 程序就能和用户互动了。</p><h3 id="PHP-平滑重启原理"><a href="#PHP-平滑重启原理" class="headerlink" title="PHP 平滑重启原理"></a>PHP 平滑重启原理</h3><p>每次修改完 PHP.ini 配置并重启后，会启动新的 worker 进程加载新的配置，而之前已经存在的进程会在工作完成之后销毁，因此实现平滑重启</p><h3 id="进程与线程"><a href="#进程与线程" class="headerlink" title="进程与线程"></a>进程与线程</h3><p>进程：是并发执行的程序在执行过程中分配和管理资源的基本单位，是一个动态概念，竞争计算机系统资源的基本单位。</p><p>线程：是进程的一个执行单元，是进程内科调度实体。比进程更小的独立运行的基本单位。线程也被称为轻量级进程。一个程序至少一个进程，一个进程至少一个线程。</p><p><strong>进程线程的区别：</strong></p><ul><li>地址空间：同一进程的线程共享本进程的地址空间，而进程之间则是独立的地址空间。</li><li>资源拥有：同一进程内的线程共享本进程的资源如内存、I/O、cpu等，但是进程之间的资源是独立的。</li></ul><p>　　　　　一个进程崩溃后，在保护模式下不会对其他进程产生影响，但是一个线程崩溃整个进程都死掉。所以多进程要比多线程健壮。</p><p>　　　　　进程切换时，消耗的资源大，效率高。所以涉及到频繁的切换时，使用线程要好于进程。同样如果要求同时进行并且又要共享某些变量的并发操作，只能用线程不能用进程</p><ul><li>执行过程：每个独立的进程程有一个程序运行的入口、顺序执行序列和程序入口。但是线程不能独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。</li><li>线程是处理器调度的基本单位，但是进程不是。</li><li>两者均可并发执行。</li></ul><p><strong>优缺点：</strong></p><p>　　线程执行开销小，但是不利于资源的管理和保护。线程适合在SMP机器（双CPU系统）上运行。</p><p>　　进程执行开销大，但是能够很好的进行资源管理和保护。进程可以跨机器前移。</p><p>  <strong>何时使用多进程，何时使用多线程？</strong></p><p>对资源的管理和保护要求高，不限制开销和效率时，使用多进程。</p><p>要求效率高，频繁切换时，资源的保护管理要求不是很高时，使用多线程。</p><blockquote><p>参考地址：</p><p><a href="https://learnku.com/articles/32318#reply104413" target="_blank" rel="noopener">https://learnku.com/articles/32318#reply104413</a></p><p><a href="https://www.cnblogs.com/zhuzhu2016/p/5804875.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhuzhu2016/p/5804875.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker</title>
      <link href="/2019/08/17/Dokcer/"/>
      <url>/2019/08/17/Dokcer/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>2010 年，几个搞 IT 的年轻人，在美国旧金山成立了一家名叫 “dotCloud” 的公司。</p><p>这家公司主要提供基于 PaaS 的云计算技术服务。具体来说，是和 LXC 有关的容器技术。</p><p>LXC 也就是 Linux 容器虚拟化技术。</p><p>后来，dotCloud 公司将自己的容器技术进行了简化和标准化，并命名为——<strong>Docker</strong>。</p><p>Docker 技术诞生之后，并没有引起行业的关注。而 dotCloud 公司，作为一家小型创业企业，在激烈的竞争之下，也步履维艰。</p><p>正当他们快要坚持不下去的时候，脑子里蹦出了 “开源” 的想法。</p><p>什么是 “开源” ？开源，就是开放源代码。也就是将原来内部保密的程序源代码开放给所有人，然后让大家一起参与进来，贡献代码和意见。</p><p>有的软件是一开始就开源的。也有的软件，是混不下去，创造者又不想放弃，所以选择开源。自己养不活，就吃“百家饭”嘛。</p><p>2013 年 3 月，dotCloud 公司的创始人之一，Docker 之父，28 岁的 *<em>Solomon Hykes *</em>正式决定，将 Docker 项目开源。</p><p>不开则已，一开惊人。</p><p>越来越多的 IT 工程师发现了 Docker 的优点，然后蜂拥而至，加入 Docker 开源社区。</p><p>Docker 的人气迅速攀升，速度之快，令人瞠目结舌。</p><p>开源当月，Docker 0.1 版本发布。此后的每一个月，Docker 都会发布一个版本。到 2014 年 6 月 9 日，Docker 1.0 版本正式发布。</p><p>此时的 Docker，已经成为行业里人气最火爆的开源技术，没有之一。甚至像 Google、微软、Amazon、VMware 这样的巨头，都对它青睐有加，表示将全力支持。</p><p>Docker 火了之后，dotCloud 公司干脆把公司名字也改成了 Docker Inc. 。</p><p>Docker 和容器技术为什么会这么火爆？说白了，就是因为它“轻”。</p><p>在容器技术之前，业界的网红是<strong>虚拟机</strong>。虚拟机技术的代表，是 VMWare 和 OpenStack。</p><p>相信很多人都用过虚拟机。虚拟机，就是在你的操作系统里面，装一个软件，然后通过这个软件，再模拟一台甚至多台“子电脑”出来。</p><p>在“子电脑”里，你可以和正常电脑一样运行程序，例如开 QQ。如果你愿意，你可以变出好几个“子电脑”，里面都开上 QQ。“子电脑”和“子电脑”之间，是<strong>相互隔离</strong>的，互不影响。</p><p>虚拟机属于虚拟化技术。而 Docker 这样的容器技术，也是虚拟化技术，属于<strong>轻量级的虚拟化</strong>。</p><p>虚拟机虽然可以隔离出很多“子电脑”，但占用空间更大，启动更慢，虚拟机软件可能还要花钱（例如 VMWare ）。</p><p>而容器技术恰好没有这些缺点。它不需要虚拟出整个操作系统，只需要虚拟一个小规模的环境（类似“沙箱”）。</p><p>它启动时间很快，几秒钟就能完成。而且，它对资源的利用率很高（一台主机可以同时运行几千个 Docker 容器）。此外，它占的空间很小，虚拟机一般要几 GB 到几十 GB 的空间，而容器只需要 MB 级甚至 KB 级。</p><p><img src="https://i.loli.net/2020/01/15/cz6OW7Kum9NXCZH.png" alt="2020-01-15_12-03.png"></p><p>正因为如此，容器技术受到了热烈的欢迎和追捧，发展迅速。</p><p>Docker 技术的三大核心概念，分别是：</p><ul><li><strong>镜像（Image）</strong></li><li><strong>容器（Container）</strong></li><li><strong>仓库（Repository）</strong></li></ul><p>其实在简单点来说 Docker 的好处，“在我的机器上可正常工作”的问题。 运维人员利用 Docker 可以在隔离容器中并行运行和管理应用，获得更好的计算密度。 企业利用 Docker 可以构建敏捷的软件交付管道，以更快的速度、更高的安全性和可靠的信誉为 Linux 和 Windows Server 应用发布新功能。</p><p>总结为一句话：简单，快捷，方便，一次构建，到处运行。解决了我们环境的问题（本地开发好好的，上线又乱七八糟的了）</p><p><strong>转折点</strong>：</p><p>就在 Docker 容器技术被炒得热火朝天之时，大家发现，如果想要将 Docker 应用于具体的业务实现，是存在困难的——编排、管理和调度等各个方面，都不容易。于是，人们迫切需要一套管理系统，对 Docker 及容器进行更高级更灵活的管理。K8s，诞生了！</p><h3 id="熟悉几个命令"><a href="#熟悉几个命令" class="headerlink" title="熟悉几个命令"></a>熟悉几个命令</h3><table><thead><tr><th align="center">命令</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">systemctl start docker</td><td align="center">启动 docker</td></tr><tr><td align="center">systemctl restart docker</td><td align="center">重启 docker</td></tr><tr><td align="center">docker images</td><td align="center">查看所有镜像</td></tr><tr><td align="center">docker pull 镜像</td><td align="center">在 dockerhub 当中拉取镜像</td></tr><tr><td align="center">docker rmi 镜像</td><td align="center">删除镜像</td></tr><tr><td align="center">docker ps</td><td align="center">查看所有运行容器</td></tr><tr><td align="center">docker ps -a</td><td align="center">查看所有容器</td></tr><tr><td align="center">docker exec -it 容器 bash</td><td align="center">进入容器</td></tr><tr><td align="center">docker rm 容器</td><td align="center">删除容器，要先关闭容器才能删</td></tr><tr><td align="center">docker stop 容器</td><td align="center">停止容器</td></tr><tr><td align="center">docker start 容器</td><td align="center">启动容器</td></tr><tr><td align="center">docker restart 容器</td><td align="center">重启容器</td></tr><tr><td align="center">docker cp 宿主机目录 容器名称:/容器里文件</td><td align="center">复制宿主机文件，到容器</td></tr><tr><td align="center">docker cp 容器名称:/容器文件  宿主机目录</td><td align="center">复制容器文件，到宿主机</td></tr><tr><td align="center">docker -v 本地文件:/容器文件</td><td align="center">映射文件，宿主机容器文件同步</td></tr></tbody></table><h3 id="安装-Docker-ce"><a href="#安装-Docker-ce" class="headerlink" title="安装 Docker-ce"></a>安装 Docker-ce</h3><h4 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h4><pre><code>1、若安装过先删除，若无忽略sudo apt-get remove docker docker-engine docker.io2、安装扩展sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common3、信任 GPGcurl -fsSL https://mirrors.huaweicloud.com/docker-ce/linux/debian/gpg | sudo apt-key add -4、添加仓库sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.huaweicloud.com/docker-ce/linux/debian $(lsb_release -cs) stable&quot;5、安装apt install docker-ce6、以上还没安装好，那肯定要这样了wget https://mirrors.huaweicloud.com/docker-ce/linux/centos/7/x86_64/edge/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpmapt install containerd.io-1.2.6-3.3.el7.x86_64.rpmapt install docker-ce</code></pre><h4 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h4><pre><code>1、若安装过先删除，若无忽略sudo yum remove docker docker-common docker-selinux docker-engine2、安装扩展sudo yum install -y yum-utils device-mapper-persistent-data lvm23、下载 repo 文件wget -O /etc/yum.repos.d/docker-ce.repo https://mirrors.huaweicloud.com/docker-ce/linux/centos/docker-ce.repo4、软件仓库地址替换为：sudo sed -i &#39;s+download.docker.com+mirrors.huaweicloud.com/docker-ce+&#39; /etc/yum.repos.d/docker-ce.repo5、更新索引文件并安装sudo yum makecache fastsudo yum install docker-ce6、以上还没安装好，那肯定要这样了wget https://mirrors.huaweicloud.com/docker-ce/linux/centos/7/x86_64/edge/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpmyum install containerd.io-1.2.6-3.3.el7.x86_64.rpmyum install docker-ce</code></pre><h4 id="dockerhub-国内源"><a href="#dockerhub-国内源" class="headerlink" title="dockerhub 国内源"></a>dockerhub 国内源</h4><pre><code>1、编辑配置文件vim /etc/docker/daemon.json2、添加中科大源{  &quot;registry-mirrors&quot;: [&quot;https://docker.mirrors.ustc.edu.cn/&quot;]}# 如果 etc/docker 下不存在 daemon.json，新建一个即可3、重启 dockersystemctl restart docker</code></pre><h3 id="容器互联"><a href="#容器互联" class="headerlink" title="容器互联"></a>容器互联</h3><p>最开始使用容器，容器之间的互联都是使用 <code>--link</code>现在不在推荐使用。随着 Docker 网络的完善，强烈建议大家将容器加入自定义的 Docker 网络来连接多个容器，而不是使用 <code>--link</code> 参数。</p><p>查看网络：</p><pre class="line-numbers language-bash"><code class="language-bash">docker network <span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>bridge 网络表示所有 Docker 安装中都存在的 docker0 网络。除非使用 <strong>docker run –net=<network></network></strong>选项另行指定，否则 Docker 守护进程默认情况下会将容器连接到此网络。在主机上使用 <strong>ifconfig</strong> 命令，可以看到此网桥是主机的网络堆栈的一部分。</li><li>none 网络在一个特定于容器的网络堆栈上添加了一个容器。该容器缺少网络接口。</li><li>host 网络在主机网络堆栈上添加一个容器。您可以发现，容器中的网络配置与主机相同。</li></ul><p>创建新网络：</p><pre class="line-numbers language-bash"><code class="language-bash">docker network create -d bridge name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="MySQL-安装"><a href="#MySQL-安装" class="headerlink" title="MySQL 安装"></a>MySQL 安装</h3><h4 id="1、从-Dockerhub-拉取-MySQL-镜像"><a href="#1、从-Dockerhub-拉取-MySQL-镜像" class="headerlink" title="1、从 Dockerhub 拉取 MySQL 镜像"></a>1、从 Dockerhub 拉取 MySQL 镜像</h4><pre><code>docker pull mysql</code></pre><h4 id="2、创建容器"><a href="#2、创建容器" class="headerlink" title="2、创建容器"></a>2、创建容器</h4><pre><code>docker run -p 3306:3306 --name mysql --network name -v /xxx:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=root -d --privileged=true mysql</code></pre><table><thead><tr><th align="center">命令</th><th align="center">命令详解</th></tr></thead><tbody><tr><td align="center">run</td><td align="center">创建一个容器</td></tr><tr><td align="center">–name</td><td align="center">指定容器名称，为空 docker 自动分配名称</td></tr><tr><td align="center">-v</td><td align="center">映射文件，宿主机容器文件同步</td></tr><tr><td align="center">-p</td><td align="center">端口映射，将容器的 3306 端口映射到主机的 3306 端口</td></tr><tr><td align="center">-e</td><td align="center">设置环境变量，初始化 Mysql 密码</td></tr><tr><td align="center">-d</td><td align="center">后台运行容器</td></tr><tr><td align="center">–privileged=true</td><td align="center">可能会碰到权限问题，需要加参数</td></tr></tbody></table><h4 id="3、基本配置"><a href="#3、基本配置" class="headerlink" title="3、基本配置"></a>3、基本配置</h4><pre><code># 进入容器docker exec -it mysql bash # 更换软件源，中科大源sed -i &#39;s/deb.debian.org/mirrors.ustc.edu.cn/g&#39; /etc/apt/sources.listapt update# 修改密码认证 mysql 8 加密方式改变了mysql&gt;ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;root&#39;;mysql&gt;flush privileges;# 如果需要创建一个帐号，并且赋予权限，不需要忽略mysql&gt;create user &#39;用户名&#39;@&#39;访问主机&#39; identified by &#39;密码&#39;;mysql&gt;grant 权限 on *.* to &#39;帐号&#39;@&#39;%&#39; WITH GRANT OPTION;# 修改 /etc/mysql/conf.d 下面的 mysql.cnf 添加以下配置，没有就创建 mysql.cnf[mysqld]port=3306default_authentication_plugin=mysql_native_password# 重启容器docker restart mysql</code></pre><h3 id="PHP-FPM-安装"><a href="#PHP-FPM-安装" class="headerlink" title="PHP-FPM 安装"></a>PHP-FPM 安装</h3><h4 id="1、从-Dockerhub-拉取-PHP-镜像"><a href="#1、从-Dockerhub-拉取-PHP-镜像" class="headerlink" title="1、从 Dockerhub 拉取 PHP 镜像"></a>1、从 Dockerhub 拉取 PHP 镜像</h4><pre><code>docker pull php:fpm</code></pre><h4 id="2、创建容器-1"><a href="#2、创建容器-1" class="headerlink" title="2、创建容器"></a>2、创建容器</h4><pre><code>docker run --name php -p 9000:9000 --network name -v /宿主机存放代码的目录:/var/www/html -it -d php:fpm</code></pre><table><thead><tr><th align="center">命令</th><th align="center">命令详解</th></tr></thead><tbody><tr><td align="center">run</td><td align="center">创建一个容器</td></tr><tr><td align="center">–name</td><td align="center">指定容器名称，为空 docker 自动分配名称</td></tr><tr><td align="center">-p</td><td align="center">端口映射，将容器的 9000 端口映射到主机的 9000 端口</td></tr><tr><td align="center">–network</td><td align="center">选择网络</td></tr><tr><td align="center">-v</td><td align="center">映射文件，宿主机容器文件同步</td></tr><tr><td align="center">-it</td><td align="center">表示让容器的标准输入打开,并且分配一个伪终端</td></tr><tr><td align="center">-d</td><td align="center">后台运行容器</td></tr></tbody></table><h4 id="3、基本配置-1"><a href="#3、基本配置-1" class="headerlink" title="3、基本配置"></a>3、基本配置</h4><pre><code># 进入容器docker exec -it php bash# 中科大源,然后下载需要的软件sed -i &#39;s/deb.debian.org/mirrors.ustc.edu.cn/g&#39; /etc/apt/sources.listapt update# Composer 安装1、curl -sS https://getcomposer.org/installer | php2、mv composer.phar /usr/local/bin/composer3、composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/# 修改 /usr/local/etc/php-fpm.conf include 路径include=/usr/local/etc/php-fpm.d/*.conf# 开启扩展命令/usr/local/bin/docker-php-ext-install mysqli# 常见的一些扩展可以这样安装了，没有的就得自己下载安装了。下载扩展到 /usr/src/php/ext 目录当中,注意：如果没有 /usr/src/php/ext 别慌执行一下 /usr/local/bin/docker-php-ext-install 一个没有的扩展，然后文件夹就会有了，每次安装好扩展之后 php 自动删除！# 关闭扩展命令docker-php-ext-enable mysqli# php.ini这个镜像给我们打包的配置文件，分开发和生产二个配置文件，在 /usr/local/etc/php 当中# 重启容器docker restart php</code></pre><h3 id="Nginx-安装"><a href="#Nginx-安装" class="headerlink" title="Nginx 安装"></a>Nginx 安装</h3><h4 id="1、从-Dockerhub-拉取-Nginx-镜像"><a href="#1、从-Dockerhub-拉取-Nginx-镜像" class="headerlink" title="1、从 Dockerhub 拉取 Nginx 镜像"></a>1、从 Dockerhub 拉取 Nginx 镜像</h4><pre><code>docker pull nginx</code></pre><h4 id="2、创建容器-2"><a href="#2、创建容器-2" class="headerlink" title="2、创建容器"></a>2、创建容器</h4><pre><code>docker run --name nginx -p 80:80 --network name -v /宿主机存放代码的目录:/usr/share/nginx/html -d nginx</code></pre><table><thead><tr><th align="center">命令</th><th align="center">命令详解</th></tr></thead><tbody><tr><td align="center">run</td><td align="center">创建一个容器</td></tr><tr><td align="center">–name</td><td align="center">指定容器名称，为空 docker 自动分配名称</td></tr><tr><td align="center">-p</td><td align="center">端口映射，将容器的 80 端口映射到主机的 80 端口</td></tr><tr><td align="center">–network</td><td align="center">选择网络</td></tr><tr><td align="center">-v</td><td align="center">映射文件，宿主机容器文件同步</td></tr><tr><td align="center">-d</td><td align="center">后台运行容器</td></tr></tbody></table><h4 id="3、基本配置-2"><a href="#3、基本配置-2" class="headerlink" title="3、基本配置"></a>3、基本配置</h4><pre><code># 中科大源,然后下载需要的软件sed -i &#39;s/deb.debian.org/mirrors.ustc.edu.cn/g&#39; /etc/apt/sources.listapt update# 贴上我的配置，Nginx 配置文件所在目录 /etc/nginxserver {    # 监听端口    listen       80;    # 域名    server_name  dev.test;    # 程序目录    root   /usr/share/nginx/html/dao/public;    # 默认访问    index  index.php;    # 字符集编码    charset utf-8;    # 错误日志    access_log  /var/log/nginx/app.access.log  main;    # 默认请求 正则匹配    location / {        try_files $uri $uri/ /index.php?$query_string;    }    # 正则匹配到 PHP 文件请求 ，扔给 FastCGI     location ~ \.php$ {        root           /var/www/html/dao/public;        fastcgi_pass   php-fpm:9000;        fastcgi_index  index.php;        include        fastcgi_params;        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;    }}# 重启 nginxdocker restart nginx</code></pre><h3 id="memcached"><a href="#memcached" class="headerlink" title="memcached"></a>memcached</h3><pre><code>docker pull memcached#实例容器,启动memcached：docker run --name memcached -p 11211:11211 -m 64m -d memcached# 中科大源,然后下载需要的软件sed -i &#39;s/deb.debian.org/mirrors.ustc.edu.cn/g&#39; /etc/apt/sources.listapt update#安装 memcached 的时候会去少依赖，根据下面评论安装即可搞定</code></pre><h3 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h3><pre><code>docker pull redis#实例容器,启动redisdocker run --name redis -p 6379:6379 --network name -d redis redis-server --appendonly yes --requirepass &quot;mypassword&quot;# 中科大源,然后下载需要的软件sed -i &#39;s/deb.debian.org/mirrors.ustc.edu.cn/g&#39; /etc/apt/sources.listapt update# redis5以后 没有配置文件，需要自己去 redis 官方下载一个想对应的版本把里面的配置文件复制出来</code></pre><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages@master/uPic/eHkRhu.png" alt></p><h3 id="踩坑的路"><a href="#踩坑的路" class="headerlink" title="踩坑的路"></a>踩坑的路</h3><p>细心成就王者，这句话不是没有道理的呀！</p><h4 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h4><p>在之前也一直没有去执行过 Laravel 的 migrate 命令。今天在想要写一个朋友给的项目的时候，需要创建表，夸夸一顿操作。结果就是：<code>could not find driver</code></p><p>找不到驱动，下意识的就去看 <code>config/database.php</code>配置文件去了，认真的检查了一遍没有问题啊！然后又去<code>.env</code>看连接的信息是否哪里有问题，没问题啊！！！心里又在想是不是扩展没打开，马上 exec 到 Dokcer 的容器当中 PHP -m 查看 PDO 相关的扩展是不是没有。（其实问题已经出现了）</p><p>检查了一遍 Dokcer 容器里面的扩展发现还是没有问题，回过头来又去执行 migrate 还是不行。谷歌、百度了很久也没有找到解决的办法。实在没有办法了，就去救助我一个大哥了，搞了一些东西问题也没有解决。</p><p>’你去 Docker 里面运行一下  php artisan migrate ‘，恍然大悟！！！赶快 exec 到容器当中，执行了一下命令。。。成功了我靠搞半天原来是这样！！！因为宿主机没有这个环境，使用的都是 Docker 里面的环境，还在搞半天搞出一朵花来也运行不了！当然你要是同步 Docker 的环境就完全没有问题了。</p><h4 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h4><p>今天又跳坑里面了，自己想答一个 MySQL 的读写分离，创建了一个容器，绑定了端口 3307 结果第三方软件一直连接不上。</p><p>宿主机绑定了 3307 端口，但是 MySQL 忘记修改端口了，MySQL 默认使用的 3306。</p><h4 id="问题三"><a href="#问题三" class="headerlink" title="问题三"></a>问题三</h4><p>今天在线上搭建了 Dcoker 的环境，全部搭好后，Git 拉了代码，因为是忽略 Composer 的所以需要自己安装，在我本地容器里面安装 Composer 异常简单，直接执行上面的三个命令即可，可线上的容器里面 Curl 死活不行，最终没办法只能下载包安装了。</p><pre><code>1、到 composer 官方下载一个版本的包，通过 git 上传到服务器上面去2、进入容器，找到刚上传的包 mv composer.phar /usr/local/bin/composer3、修改权限chmod 777 /usr/local/bin/composer4、安装，会出现 git token 问题，复制连接，到 github 设置 token5、安装 git ，解决问题</code></pre><h4 id="问题四"><a href="#问题四" class="headerlink" title="问题四"></a>问题四</h4><p>最近在搞公司的 Dokcerfile 因为没接触过 Dockerfile 不太了解吃了个大亏，在 Dockerfile 当中 CMD 是创建容器就启动的命令，相当于初始化当然 CMD 命令只能有一个而不能有多个。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>会话技术</title>
      <link href="/2019/08/12/%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF/"/>
      <url>/2019/08/12/%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>WEB 应用程序是使用 HTTP 协议传输数据，早期处于刚开始发展阶段时，属于文档浏览阶段（ HTTP/0.9 的时候只有文本传输，1.0 开始才支持图片、视频、二进制文件传输），不需要做交互，服务端不需要去记录先前的事务，这样服务端答复也很快（这就是 HTTP 无状态特性）。但随着 WEB 的发展，进入交互时代，这时候我们就需要跟服务端做交互了，比如我们要保持用户的登录状态而我们 HTTP 协议却办不到，因为  HTTP 协议属于无状态他对先前事务处理没有记忆的功能，一次请求完成就立马断开。通俗的来讲就是：虽然你刚才来过我这里了，但是抱歉我不记得你来过了，而你还没办法证明自己来过！这就是很尴尬了，没办法啊我们现在随着发展需要记录事务了呀，这时我们会话技术就诞生了！会话的总体思想：令牌，既然你每次都不记得我，那好我们打造一个令牌分成两半，你一半我一半合的起来那就是对的人！不过发这半块令牌给你的人，还是服务端哦！</p><h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><blockquote><p>Cookie 是客户端使用的一种记录客户端状态的机制，是<strong>由 W3C 组织提出</strong>，最早由 Netscape(网景) 社区发展的一种机制。目前 Cookie 已经成为标准，所有的主流浏览器基本都支持 Cookie 。Cookie（也叫 Web Cookie 或浏览器 Cookie）是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。通常，它用于告知服务端两个请求是否来自同一浏览器，如保持用户的登录状态。Cookie 使基于<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview#HTTP_is_stateless_but_not_sessionless" target="_blank" rel="noopener">无状态</a>的 HTTP 协议记录稳定的状态信息成为了可能。<strong>Cookie 实际上就是一小段文本信息</strong>。</p></blockquote><p>客户端请求服务器端，服务器端会在 HTTP 响应消息报头当中插入 Set-cookie ，存储的就是 Cookie 的值。</p><p><img src="http://ww1.sinaimg.cn/large/e73160eegy1g68v87xx0pj216n0pitbs.jpg" alt></p><p>客户端就会把 Cookie 保存起来，如果 Cookie 设置了过期时间那么就属于持久存储直到过期，如果没有设置过期时间浏览器关闭即为销毁，持久存储会存储在磁盘当中，非持久存储会存储在内存当中！</p><p>客户端下次在请求服务器端的时候，会自动在请求报头当中插入 Cookie 。服务器端检测该 Cookie，以此来识别用户状态。</p><p><img src="https://i.loli.net/2019/08/22/jPSrYbs8qJAUtlW.png" alt></p><p><img src="https://i.loli.net/2020/02/16/OcCHqx9ki12f5Lj.png" alt="123456.png"></p><h3 id="Cookie-细节"><a href="#Cookie-细节" class="headerlink" title="Cookie 细节"></a>Cookie 细节</h3><p>Cookie 基于浏览器本地存储数据，因此，只有在保存了 Cookie 的那个浏览器上能够使用该 Cookie。<strong>同一设备不同浏览器之间，Cookie 不通用。</strong></p><p>Cookie 的存储大小有限制：4KB 左右，每次请求都要进行网络传输，占用带宽。一个浏览器最多允许 300 个 Cookie 一个网站最多储存 20 个 Cookie，由于 Cookie 是存在客户端上的，所以浏览器加入了一些限制确保 Cookie 不会被恶意使用。</p><p>Cookie 的同源策略：Cookie 同样也有同源策略，不过与 AJAX 略微不用。AJAX 需要完全同源，而 Cookie 只需要同一父级域名即可。 比如： 请求 qq.com 下的资源时，会带上 qq.com 对应的 Cookie，不会带上 baidu.com 的 Cookie； 请求 v.qq.com 下的资源时，浏览器不仅会带上 v.qq.com 的 Cookie，还会带上 qq.com 的 Cookie 。在这里，qq.com 就是 v.qq.com 的父级域名</p><p>Cookie主要用于以下三个方面：</p><ul><li>会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）</li><li>个性化设置（如用户自定义设置、主题等）</li><li>浏览器行为跟踪（如跟踪分析用户行为等）</li></ul><p>Cookie 曾一度用于客户端数据的存储，因当时并没有其它合适的存储办法而作为唯一的存储手段，但现在随着现代浏览器开始支持各种各样的存储方式，Cookie 渐渐被淘汰。由于服务器指定 Cookie 后，浏览器的每次请求都会携带 Cookie 数据，会带来额外的性能开销（尤其是在移动环境下）。新的浏览器 API 已经允许开发者直接将数据存储到本地，如使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Storage_API" target="_blank" rel="noopener">Web storage API</a> （本地存储和会话存储）或 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/IndexedDB_API" target="_blank" rel="noopener">IndexedDB</a> 。</p><p>因为 Cookie 存储在客户端而客户端，即可见即不安全的原则，Cookie 容易被别有用心的人利用对自己的站点发起攻击，如：XSS，CSRF，都是利用的 Cookie 发起的攻击。</p><h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><blockquote><p>Session 是服务器端使用的一种记录客户端状态的机制，使用上比 Cookie 简单一些，相应的也增加了服务器的存储压力。不同于 Cookie 的是， Session 是保存在服务器端的。其实 Session 的实现最终还是 Cookie 。当我们用 Session 时，服务器端返回却是一段 Cookie 。从而可以说 Session 的实现依赖 Cookie。</p></blockquote><p>客户端访问服务器端，如果会使用到 Session，那么服务器端在 HTTP 响应报头当中会插入 Set-Cookie ,而这段 Cookie 记录着什么呢？记录着 SeesionID 。</p><p><img src="https://i.loli.net/2019/08/22/VDNZKPlfM5mu7bw.png" alt></p><p>客户端再次请求服务器端的时候，在 HTTP 请求报头当中自动插入 Cookie(Cookie 的值也就是 SeesionID)，服务器端拿到 Cookie 之后，读取当中的 SeesionID，会自动去寻找到这个 Session 文件所存放的位置（ PHP 当中 Session 属于持久存储在磁盘当中，默认 24 分钟之后删除数据，删除的是数据而不是删除这个 Session 文件）读取数据。在 PHP 当中默认的就是浏览器关闭， SessionID 销毁。</p><p><img src="https://i.loli.net/2019/08/22/dVJRSygoAp6ksu2.png" alt></p><p><img src="https://i.loli.net/2020/02/16/NvZuei68fsP9IBh.png" alt="是打算打算的.png"></p><p>以下是 PHP Seesion 的配置</p><pre><code>session.save_path = &quot;/home/jialaolian/Desktop/Session&quot;#这个就是你session存放的地址session.use_cookies=1#把这个的值设置为1，利用cookie来传递sessionidsession.cookie_lifetime=0#这个代表SessionID在客户端Cookie储存的时间，默认是0，代表浏览器一关闭SessionID就销毁session.gc_maxlifetime=1440#这个是Session数据在服务器端储存的时间，如果超过这个时间，那么Session数据就自动删除！</code></pre><h3 id="Session-细节"><a href="#Session-细节" class="headerlink" title="Session 细节"></a>Session 细节</h3><p>面试题当中经常会出现禁用了 Cookie 之后 Session 还可以用嘛？</p><p>答案：可以！</p><p>session 实现关键是 sessionID，只需要将 sessionID 传递给浏览器，浏览器在请求的时候再将 sessionID 传递给服务器，就可以实现 session。所以，可以使用在 URL 中插入查询参数的方式来实现 sessionID 的传递。</p><p>假如你使用了 Nginx 服务器软件做了负载均衡，那么你会发现丢失 Session 的问题。出现丢失 Session 问题呢，我们可以使用用 Nginx ip_hash 算法解决。</p><h3 id="Session-和-Cookie-的区别"><a href="#Session-和-Cookie-的区别" class="headerlink" title="Session 和 Cookie 的区别"></a>Session 和 Cookie 的区别</h3><ul><li>session 在服务器端，cookie 在客户端。</li><li>session 用户无法查看和修改，cookie 用户可以查看修改。</li><li>session 和 cookie 的存储容量不同。</li><li>session 的实现依赖于 sessionID，而 sessionID 又存储在 cookie 上，所以，可以这么说：session 是基于 cookie 实现的一种数据存储方式。</li><li>他们共同点，因为 Session 需要依赖 Cookie 所以 XSS 与 CSRF 对他们都有效。 </li><li>Cookie 只能存储字符串，而且 Session 不限制。</li></ul><h3 id="Token"><a href="#Token" class="headerlink" title="Token"></a>Token</h3><blockquote><p>Token 我们的中文翻译‘令牌’</p></blockquote><h6 id="Token-的引入："><a href="#Token-的引入：" class="headerlink" title="Token 的引入："></a>Token 的引入：</h6><p>Token 是在客户端频繁向服务端请求数据，服务端频繁的去数据库查询用户名和密码并进行对比，判断用户名和密码正确与否，并作出相应提示，在这样的背景下，Token 便应运而生。</p><h6 id="Token-的定义："><a href="#Token-的定义：" class="headerlink" title="Token 的定义："></a>Token 的定义：</h6><p>Token 是服务端生成的一串字符串，以作客户端进行请求的一个令牌，当第一次登录后，服务器生成一个 Token 便将此 Token 返回给客户端，以后客户端只需带上这个 Token 前来请求数据即可，无需再次带上用户名和密码。</p><h6 id="使用-Token-的目的："><a href="#使用-Token-的目的：" class="headerlink" title="使用 Token 的目的："></a>使用 Token 的目的：</h6><p>Token 的目的是为了减轻服务器的压力，减少频繁的查询数据库，使服务器更加健壮。</p><h6 id="Token-的优点："><a href="#Token-的优点：" class="headerlink" title="Token 的优点："></a>Token 的优点：</h6><p>扩展性更强，也更安全点，非常适合用在 Web 应用或者移动应用上。Token 的中文有人翻译成 “令牌”，我觉得挺好，意思就是，你拿着这个令牌，才能过一些关卡。</p><h6 id="Token-一般用在三个地方"><a href="#Token-一般用在三个地方" class="headerlink" title="Token 一般用在三个地方:"></a>Token 一般用在三个地方:</h6><p>①防止表单重复提交<br>②anti csrf 攻击（跨站点请求伪造）<br>③身份验证（单点登录）</p><p>Token 类似与 HTTP 协议当中的<strong>无状态</strong>特性，他不需要在服务器端保留用户的认证信息或者会话信息。这就意味着基于 Token 认证机制的应用不需要去考虑用户在哪一台服务器登录了，这就为应用的扩展提供了便利。</p><p>流程上是这样的：</p><ul><li>用户使用用户名密码来请求服务器</li><li>服务器进行验证用户的信息</li><li>服务器通过验证发送给用户一个 token</li><li>客户端存储 token，并在每次请求时附送上这个 token 值</li><li>服务端验证 token 值，并返回数据</li></ul><blockquote><p>原文地址：</p><p><a href="https://blog.csdn.net/cmj6706/article/details/79032703" target="_blank" rel="noopener">https://blog.csdn.net/cmj6706/article/details/79032703</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 会话技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 会话技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP 协议入门理解</title>
      <link href="/2019/08/11/HTTP%E5%8D%8F%E8%AE%AE%E7%90%86%E8%A7%A3/"/>
      <url>/2019/08/11/HTTP%E5%8D%8F%E8%AE%AE%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="简述历史"><a href="#简述历史" class="headerlink" title="简述历史"></a>简述历史</h2><blockquote><p>HTTP 协议(超文本传输协议 HyperText Transfer Protocol )，它是基于 TCP/IP 协议的应用层传输协议，简单来说就是客户端和服务端进行数据传输的一种规则。默认使用 80 端口。</p><p>HTTP 协议工作于客户端-服务端架构之上。浏览器作为 HTTP 客户端通过 URL 向 HTTP 服务端即 WEB 服务器发送所有请求。 WEB 服务器根据接收到的请求后，向客户端发送响应信息。</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/e73160eegy1g654ktgyvbj20fb051dfr.jpg" alt></p></blockquote><p>1991年发布的 HTTP/0.9 版本发布，该版本及其的简单，只有一个命令 GET 。</p><p>1996年5月份， HTTP/1.0 版本发布，内容大大的增加。首先可以发送任何格式的内容，除了传输文字，还可以传送图片、视频、二进制文件。其次除了GET 命令，还引入了 POST 和 HEAD 命令也就是我们说的简单请求方式。1.0 版本缺点无法做到持久连接，造成大量的通信开销。</p><p>1997年1月，HTTP/1.1 版本发布，他进一步的完善了 HTTP 协议，目前来说我们用的最多的还是 HTTP/1.1 版本。1.1 版本最大的变化就是引入了持久连接，只要 TCP 链接默认不关闭，那么他就可以一直复用。不用声明 Connection: keep-alive，目前，对于同一个域名，大多数浏览器允许同时建立 6 个持久连接。</p><p>2015年，HTTP/2 发布。它不叫 HTTP/2.0，是因为标准委员会不打算再发布子版本了，下一个新版本将是 HTTP/3 。3 版本的最大的改变，可能会抛弃掉 TCP 协议使用 UDP 协议。</p></blockquote><h2 id="TCP-协议简述"><a href="#TCP-协议简述" class="headerlink" title="TCP 协议简述"></a>TCP 协议简述</h2><p><img src="http://ww1.sinaimg.cn/large/e73160eegy1g5w31tlidzj20o10hbgpo.gif" alt></p><blockquote><p>建立 TCP 需要三次捂手建立连接，与四次挥手断开连接。整个过程如下图：</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/e73160eegy1g658ctyl3jj20f60lct9v.jpg" alt></p><h3 id="TCP-三次捂手"><a href="#TCP-三次捂手" class="headerlink" title="TCP 三次捂手"></a>TCP 三次捂手</h3><p>首先客户端发送连接请求报文，服务端接收连接后回复 ACK 报文，并为这次连接分配资源。客户端接收到 ACK 报文后也向服务端发送 ACK 报文，并分配资源，这样 TCP 连接就建立了。其实所谓的三次捂手其实就是建立一个 TCP 连接时，需要客户端和服务端总共发送三个包，三次捂手的目的是个连接服务器指定的端口，建立 TCP 连接，并同步连接双方的序列号和确认并交换 TCP 窗口大小信息，在 SOCKET 编程当中，客户端执行 connect() 时，将会触发三次捂手：</p><p><img src="http://ww1.sinaimg.cn/large/e73160eegy1g658o2qh0ij20f109374f.jpg" alt></p><h3 id="TCP-四次挥手"><a href="#TCP-四次挥手" class="headerlink" title="TCP 四次挥手"></a>TCP 四次挥手</h3><p>TCP 连接的拆除需要发送四个包，客户端或者服务器端均可主动发起挥手动作，在 SOCKET 编程中，任何一方执行 close() 即可产生挥手操作。假设客户端发起中断连接请求，就先发送 FIN 报文。服务端接到 FIN 报文后，但是如果还有数据没有发送完成，则不必急着关闭 Socket ，可以继续发送数据。所以服务器端先发送 ACK ，告诉客户端：请求已经收到了，但是我还没准备好，请继续等待停止的消息。这个时候客户端就进入 FIN_WAIT 状态，继续等待服务端的 FIN 报文。当服务端确定数据已发送完成，则向客户端发送 FIN 报文，告诉客户端：服务器这边数据发完了，准备好关闭连接了。客户端收到 FIN 报文后，就知道可以关闭连接了，但是他还是不相信网络，所以发送 ACK 后进入 TIME_WAIT 状态， 服务端收到 ACK 后，就知道可以断开连接了。客户端等待了 2MSL 后依然没有收到回复，则证明服务端已正常关闭，最后，客户端也可以关闭连接了至此， TCP 连接就已经完全关闭了！关闭连接的过程如下图所示：</p><p><img src="http://ww1.sinaimg.cn/large/e73160eegy1g658xy3fgrj20by085dfx.jpg" alt></p><h2 id="HTTP-工作流程"><a href="#HTTP-工作流程" class="headerlink" title="HTTP 工作流程"></a>HTTP 工作流程</h2><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5w3bsgdqmj20fy06o75n.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5w3f1g673j20kh09cdiv.jpg" alt></p><h2 id="HTTP-协议的特点"><a href="#HTTP-协议的特点" class="headerlink" title="HTTP 协议的特点"></a>HTTP 协议的特点</h2><ul><li>支持客户/服务器模式：请求 响应</li><li>简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有 GET、HEAD、POST。每种 方法规定了客户与服务器联系的类型不同。由于 HTTP 协议简单，使得 HTTP 服务器的程序规模小，因而通信速度很快。</li><li>灵活：HTTP 允许传输任意类型的数据对象。正在传输的类型由 Content-Type 加以标记。</li><li>无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。早期这么做的原因是请求资源少，追求快。后来通过 Connection: Keep-Alive 实现长连接</li><li>无状态：HTTP 协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</li></ul><p>HTTP 是一种无状态协议，HTTP 协议本身不会对发送过来的请求和响应的通信状态做一个持久化处理。这样做的目的就是为了保证 HTTP 协议的简单性，从而能够快速的处理大量的事务，提高效率。</p><p>然而在很多的场景当中，无状态的特性就让我们非常尴尬，比如说我们需要保持一个用户登录状态，由于我们 HTTP 协议无状态的特点，无法向服务器证明我们’认识’，所以我们需要引入别的技术来做处理。比如：cookie</p><h2 id="HTTP-URL"><a href="#HTTP-URL" class="headerlink" title="HTTP URL"></a>HTTP URL</h2><pre class="line-numbers language-php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//host[":"port][abs_path]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>host: 代表主机域名或IP地址</li><li>port: 端口号，缺省端口80</li><li>abs_path : 请求资源的URL，如果没有，填 “/“，通常浏览器会帮我们自动完成。<br>EG:</li><li>举个栗子：<a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> </li></ul><h2 id="HTTP-请求"><a href="#HTTP-请求" class="headerlink" title="HTTP 请求"></a>HTTP 请求</h2><p>下图是在网上找的一张图，觉得能很好的表达HTTP请求的所发送的数据格式。</p><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5w3ngr7gfj20kr06lmx0.jpg" alt></p><p>由上图可以看到，HTTP 请求由请求行，消息报头，请求正文三部分构成。</p><h3 id="HTTP-请求状态行"><a href="#HTTP-请求状态行" class="headerlink" title="HTTP 请求状态行"></a>HTTP 请求状态行</h3><p>请求行由请求 Method ,  URL 字段和 HTTP Version 三部分构成, 总的来说请求行就是定义了本次请求的请求方式, 请求的地址, 以及所遵循的 HTTP 协议版本例如：</p><pre class="line-numbers language-php"><code class="language-php"><span class="token constant">GET</span> <span class="token operator">/</span>example<span class="token punctuation">.</span>html <span class="token constant">HTTP</span><span class="token operator">/</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token function">1</span> <span class="token punctuation">(</span><span class="token constant">CRLF</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>HTTP 协议的方法有：</p><ul><li>GET： 请求*<em>获取 *</em>Request-URI 所标识的资源</li><li>POST： 在 Request-URI 所标识的资源后<strong>增加</strong>新的数据</li><li>HEAD： 请求获取由 Request-URI 所标识的资源的<strong>响应消息报头</strong></li><li>PUT： 请求服务器<strong>存储或修改</strong>一个资源，并用 Request-URI 作为其标识</li><li>DELETE： 请求服务器*<em>删除 *</em>Request-URI 所标识的资源</li><li>TRACE： 请求服务器回送收到的请求信息，主要用于<strong>测试或诊断</strong></li><li>CONNECT： 保留将来使用</li><li>OPTIONS： 请求查询服务器的性能，或者查询与资源相关的选项和需求</li></ul><h3 id="HTTP-请求头"><a href="#HTTP-请求头" class="headerlink" title="HTTP 请求头"></a>HTTP 请求头</h3><p>消息报头由一系列的键值对组成，允许客户端向服务器端发送一些附加信息或者客户端自身的信息，主要包括：</p><table><thead><tr><th>Header</th><th>解释</th><th>示例</th></tr></thead><tbody><tr><td>Accept</td><td>告诉服务器，客户端支持的数据类型。</td><td>Accept: text/plain, text/html</td></tr><tr><td>Accept-Charset</td><td>告诉服务器，客户端采用的编码。</td><td>Accept-Charset: iso-8859-5,utf-8</td></tr><tr><td>Accept-Encoding</td><td>告诉服务器，客户机支持的数据压缩格式。</td><td>Accept-Encoding: compress, gzip</td></tr><tr><td>Accept-Language</td><td>告诉服务器，客户机的语言环境。</td><td>Accept-Language: en,zh</td></tr><tr><td>Accept-Ranges</td><td>可以请求网页实体的一个或者多个子范围字段</td><td>Accept-Ranges: bytes</td></tr><tr><td>Authorization</td><td>HTTP授权的授权证书类型</td><td>Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Cache-Control</td><td>指定请求和响应遵循的缓存机制</td><td>Cache-Control: no-cache</td></tr><tr><td>Connection</td><td>表示是否需要持久连接（HTTP 1.1默认进行持久连接）</td><td>Keep-Alive</td></tr><tr><td>Cookie</td><td>HTTP请求发送时，会把保存在该请求域名下的所有cookie值一起发送给web服务器</td><td>Cookie: $Version=1; Skin=new;</td></tr><tr><td>Content-Length</td><td>请求的内容长度</td><td>Content-Length: 348</td></tr><tr><td>Content-Type</td><td>请求的与实体对应的MIME信息</td><td>Content-Type: application/x-www-form-urlencoded</td></tr><tr><td>Date</td><td>请求发送的日期和时间</td><td>Date: Tue, 15 Nov 2010 08:12:31 GMT</td></tr><tr><td>Expect</td><td>请求的特定的服务器行为</td><td>Expect: 100-continue</td></tr><tr><td>From</td><td>发出请求的用户的Email</td><td>From: <a href="mailto:xxx@163.com" target="_blank" rel="noopener">xxx@163.com</a></td></tr><tr><td>Host</td><td>指定请求的服务器的域名和端口号</td><td>Host: <a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.zcmhi.com" target="_blank" rel="noopener">www.baidu.com</a></td></tr><tr><td>If-Match</td><td>只有请求内容与实体相匹配才有效</td><td>If-Match: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Modified-Since</td><td>客户机通过这个头告诉服务器，资源的缓存时间。</td><td>If-Modified-Since: Sat, 29 Oct 2010 19:43:31 GMT</td></tr><tr><td>If-None-Match</td><td>如果内容未改变返回304代码，参数为服务器先前发送的Etag，与服务器回应的Etag比较判断是否改变</td><td>If-None-Match: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Range</td><td>如果实体未改变，服务器发送客户端丢失的部分，否则发送整个实体。参数也为Etag</td><td>If-Range: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Unmodified-Since</td><td>只在实体在指定时间之后未被修改才请求成功</td><td>If-Unmodified-Since: Sat, 29 Oct 2010 19:43:31 GMT</td></tr><tr><td>Max-Forwards</td><td>限制信息通过代理和网关传送的时间</td><td>Max-Forwards: 10</td></tr><tr><td>Pragma</td><td>用来包含实现特定的指令</td><td>Pragma: no-cache</td></tr><tr><td>Proxy-Authorization</td><td>连接到代理的授权证书</td><td>Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Range</td><td>只请求实体的一部分，指定范围</td><td>Range: bytes=500-999</td></tr><tr><td>Referer</td><td>客户机通过这个头告诉服务器，它是从哪个资源来访问服务器的。（一般用于防盗链）</td><td>Referer: <a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.zcmhi.com%2Farchives%2F71.html" target="_blank" rel="noopener">www.zcmhi.com/archives/71…</a></td></tr><tr><td>TE</td><td>客户端愿意接受的传输编码，并通知服务器接受接受尾加头信息</td><td>TE: trailers,deflate;q=0.5</td></tr><tr><td>Upgrade</td><td>向服务器指定某种传输协议以便服务器进行转换（如果支持）</td><td>Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11</td></tr><tr><td>User-Agent</td><td>浏览器的具体信息</td><td>User-Agent: Mozilla/5.0 (Linux; X11)</td></tr><tr><td>Via</td><td>通知中间网关或代理服务器地址，通信协议</td><td>Via: 1.0 fred, 1.1 <a href="https://link.juejin.im/?target=http%3A%2F%2Fnowhere.com" target="_blank" rel="noopener">nowhere.com</a>(Apache/1.1)</td></tr><tr><td>Warning</td><td>关于消息实体的警告信息</td><td>Warn: 199 Miscellaneous warning</td></tr></tbody></table><h3 id="HTTP-请求正文"><a href="#HTTP-请求正文" class="headerlink" title="HTTP 请求正文"></a>HTTP 请求正文</h3><p>只有发送 POST 方式时才有请求正文，GET 方式没有请求正文</p><h3 id="HTTP-请求报文"><a href="#HTTP-请求报文" class="headerlink" title="HTTP 请求报文"></a>HTTP 请求报文</h3><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5w4vnbdrvj20m80egaan.jpg" alt></p><h2 id="HTTP-响应"><a href="#HTTP-响应" class="headerlink" title="HTTP 响应"></a>HTTP 响应</h2><p>与 HTTP 请求类似，先上一张图：</p><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5w4wab05kj20kp06qt8k.jpg" alt></p><p>HTTP 响应也由三部分组成，包括状态行，消息报头，响应正文。</p><h3 id="HTTP-响应状态行"><a href="#HTTP-响应状态行" class="headerlink" title="HTTP 响应状态行"></a>HTTP 响应状态行</h3><p>状态行也由三部分组成，包括 HTTP 协议的版本，状态码，以及对状态码的文本描述。例如：</p><pre class="line-numbers language-php"><code class="language-php"><span class="token constant">HTTP</span><span class="token operator">/</span><span class="token number">1.1</span> <span class="token number">200</span> <span class="token constant">OK</span> （<span class="token constant">CRLF</span>）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="HTTP-响应头"><a href="#HTTP-响应头" class="headerlink" title="HTTP 响应头"></a>HTTP 响应头</h3><table><thead><tr><th align="left">Header</th><th align="left">解释</th><th align="left">示例</th></tr></thead><tbody><tr><td align="left">Accept-Ranges</td><td align="left">表明服务器是否支持指定范围请求及哪种类型的分段请求</td><td align="left">Accept-Ranges: bytes</td></tr><tr><td align="left">Age</td><td align="left">从原始服务器到代理缓存形成的估算时间（以秒计，非负）</td><td align="left">Age: 12</td></tr><tr><td align="left">Allow</td><td align="left">对某网络资源的有效的请求行为，不允许则返回405</td><td align="left">Allow: GET, HEAD</td></tr><tr><td align="left">Cache-Control</td><td align="left">告诉所有的缓存机制是否可以缓存及哪种类型</td><td align="left">Cache-Control: no-cache</td></tr><tr><td align="left">Content-Encoding</td><td align="left">web服务器支持的返回内容压缩编码类型。</td><td align="left">Content-Encoding: gzip</td></tr><tr><td align="left">Content-Language</td><td align="left">响应体的语言</td><td align="left">Content-Language: en,zh</td></tr><tr><td align="left">Content-Length</td><td align="left">响应体的长度</td><td align="left">Content-Length: 348</td></tr><tr><td align="left">Content-Location</td><td align="left">请求资源可替代的备用的另一地址</td><td align="left">Content-Location: /index.htm</td></tr><tr><td align="left">Content-MD5</td><td align="left">返回资源的MD5校验值</td><td align="left">Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ==</td></tr><tr><td align="left">Content-Range</td><td align="left">在整个返回体中本部分的字节位置</td><td align="left">Content-Range: bytes 21010-47021/47022</td></tr><tr><td align="left">Content-Type</td><td align="left">如果返回是流式的数据，我们就必须告诉浏览器这个头，不然浏览器会下载这个页面，同时告诉浏览器是utf8编码，否则可能出现乱码</td><td align="left">Content-Type: text/html; charset=utf-8</td></tr><tr><td align="left">Date</td><td align="left">原始服务器消息发出的时间</td><td align="left">Date: Tue, 15 Nov 2010 08:12:31 GMT</td></tr><tr><td align="left">ETag</td><td align="left">请求变量的实体标签的当前值</td><td align="left">ETag: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td align="left">Expires</td><td align="left">响应过期的日期和时间</td><td align="left">Expires: Thu, 01 Dec 2010 16:00:00 GMT</td></tr><tr><td align="left">Last-Modified</td><td align="left">请求资源的最后修改时间</td><td align="left">Last-Modified: Tue, 15 Nov 2010 12:45:26 GMT</td></tr><tr><td align="left">Location</td><td align="left">用来重定向接收方到非请求URL的位置来完成请求或标识新的资源</td><td align="left">Location: <a href="http://www.zcmhi.com/archives/94.html" target="_blank" rel="noopener">http://www.zcmhi.com/archives/94.html</a></td></tr><tr><td align="left">Pragma</td><td align="left">包括实现特定的指令，它可应用到响应链上的任何接收方</td><td align="left">Pragma: no-cache</td></tr><tr><td align="left">Proxy-Authenticate</td><td align="left">它指出认证方案和可应用到代理的该URL上的参数</td><td align="left">Proxy-Authenticate: Basic</td></tr><tr><td align="left">refresh</td><td align="left">应用于重定向或一个新的资源被创造，在5秒之后重定向（由网景提出，被大部分浏览器支持）</td><td align="left">Refresh: 5; url=<a href="http://www.zcmhi.com/archives/94.html" target="_blank" rel="noopener">http://www.zcmhi.com/archives/94.html</a></td></tr><tr><td align="left">Retry-After</td><td align="left">如果实体暂时不可取，通知客户端在指定时间之后再次尝试</td><td align="left">Retry-After: 120</td></tr><tr><td align="left">Server</td><td align="left">web服务器软件名称</td><td align="left">Server: Apache/1.3.27 (Unix) (Red-Hat/Linux)</td></tr><tr><td align="left">Set-Cookie</td><td align="left">设置Http Cookie</td><td align="left">Set-Cookie: UserID=JohnDoe; Max-Age=3600; Version=1</td></tr><tr><td align="left">Trailer</td><td align="left">指出头域在分块传输编码的尾部存在</td><td align="left">Trailer: Max-Forwards</td></tr><tr><td align="left">Transfer-Encoding</td><td align="left">文件传输编码</td><td align="left">Transfer-Encoding:chunked</td></tr><tr><td align="left">Vary</td><td align="left">告诉下游代理是使用缓存响应还是从原始服务器请求</td><td align="left">Vary: *</td></tr><tr><td align="left">Via</td><td align="left">告知代理客户端响应是通过哪里发送的</td><td align="left">Via: 1.0 fred, 1.1 nowhere.com (Apache/1.1)</td></tr><tr><td align="left">Warning</td><td align="left">警告实体可能存在的问题</td><td align="left">Warning: 199 Miscellaneous warning</td></tr><tr><td align="left">WWW-Authenticate</td><td align="left">表明客户端请求实体应该使用的授权方案</td><td align="left">WWW-Authenticate: Basic</td></tr></tbody></table><h3 id="HTTP-响应状态码"><a href="#HTTP-响应状态码" class="headerlink" title="HTTP 响应状态码"></a>HTTP 响应状态码</h3><p>状态代码有三位数字组成，第一个数字定义了响应的<strong>类别</strong>，且有五种可能取值：</p><ul><li><p>1xx：<strong>指示信息</strong> - 表示请求已接收，继续处理</p></li><li><p>100 客户必须继续发出请求</p><ul><li>101 客户要求服务器根据请求转换 HTTP 协议版本</li></ul></li><li><p>2xx：<strong>成功</strong> - 表示请求已被成功接收、理解、接受</p></li><li><p>200 （成功） 服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。</p><ul><li>201 （已创建） 请求成功并且服务器创建了新的资源。</li><li>202 （已接受） 服务器已接受请求，但尚未处理。</li></ul></li><li><p>3xx：<strong>重定向</strong> - 要完成请求必须进行更进一步的操作</p></li><li><p>300 （多种选择） 针对请求，服务器可执行多种操作。 服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择。</p></li><li><p>301 （永久移动） 请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。</p><ul><li>302 （临时移动） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</li></ul></li><li><p>4xx：<strong>客户端错误</strong> - 请求有语法错误或请求无法实现</p></li><li><p>400 （错误请求） 服务器不理解请求的语法。</p><ul><li>401 （未授权） 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。</li><li>403 （禁止） 服务器拒绝请求。</li></ul></li><li><p>5xx：<strong>服务器端错误</strong> - 服务器未能实现合法的请求</p></li><li><p>500 （服务器内部错误） 服务器遇到错误，无法完成请求。</p></li><li><p>501 （尚未实施） 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。</p></li><li><p>502 （错误网关） 服务器作为网关或代理，从上游服务器收到无效响应。</p></li><li><p>503 （服务不可用） 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。</p></li><li><p>504 （网关超时） 服务器作为网关或代理，但是没有及时从上游服务器收到请求。</p></li><li><p>505 （HTTP 版本不受支持） 服务器不支持请求中所用的 HTTP 协议版本。</p></li></ul><h3 id="HTTP-响应报文"><a href="#HTTP-响应报文" class="headerlink" title="HTTP 响应报文"></a>HTTP 响应报文</h3><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5w50fsridj20m80g7jrx.jpg" alt></p><h2 id="非持久连接和持久连接"><a href="#非持久连接和持久连接" class="headerlink" title="非持久连接和持久连接"></a>非持久连接和持久连接</h2><p>在实际的应用当中，客户端往往会发送一系列的请求，接着服务器端一一的响应。对于这些请求|响应，如果每次都经过一个单独的 TPC 连接发送，称为非持久链接。反之，如果每次都经过相同的 TCP 连接进行发送，称为持久链接</p><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5w5876x3xj20hi0cjglu.jpg" alt></p><p>非持久连接在每次的请求|响应之后就会断开连接，下次在重新建立新的 TCP 链接，这样就会造成大量的通信开销。例如前面提到的往返时间( RTT ) 就是在建立 TCP 连接的过程中的代价。</p><p>非持久连接给服务器带来了沉重的负担，每台服务器可能同时面对数以百计甚至更多的请求。持久连接就是为了解决这些问题，其特点是一直保持 TCP 连接状态，直到遇到明确的中断要求之后再中断连接。持久连接减少了通信开销，节省了通信量。</p><h2 id="GET-与-POST-请求之间的区别"><a href="#GET-与-POST-请求之间的区别" class="headerlink" title="GET 与 POST 请求之间的区别"></a>GET 与 POST 请求之间的区别</h2><table><thead><tr><th align="center">区别内容</th><th align="center">GET</th><th align="center">POST</th></tr></thead><tbody><tr><td align="center">点击返回/刷新按钮</td><td align="center">没有影响</td><td align="center">数据会重新发送（浏览器将会提示“数据被重新提交”）</td></tr><tr><td align="center">添加书签</td><td align="center">可以</td><td align="center">不可以</td></tr><tr><td align="center">缓存</td><td align="center">可以</td><td align="center">不可以</td></tr><tr><td align="center">编码类型（Encoding type）</td><td align="center">application/x-www-form-rulencoded</td><td align="center"><code>application/x-www-form-rulencoded</code> or <code>multipart/form-data</code> 请为二进制数据使用 <code>multipart</code> 编码</td></tr><tr><td align="center">历史记录</td><td align="center">有</td><td align="center">没有</td></tr><tr><td align="center">长度限制</td><td align="center">有</td><td align="center">没有</td></tr><tr><td align="center">数据类型限制</td><td align="center">只允许 ASCLll 字符类型</td><td align="center">没有限制，允许二进制数据</td></tr><tr><td align="center">安全性</td><td align="center">查询字符串会显示在地址栏的 URL 上，不安全，<strong>请不要使用 GET 请求提交敏感数据</strong></td><td align="center">因为数据不会显示在地址栏中，也不会缓存下来或保存在浏览记录中，所以 POST 请求比 GET 请求安全，但也不是最安全的方式，如需要传送敏感数据，<strong>请使用数据加密</strong>。</td></tr><tr><td align="center">可见性</td><td align="center">查询字符串在地址栏的 URL 中可见</td><td align="center">查询字符串在地址栏的 URL 中不可见</td></tr></tbody></table><h2 id="HTTP-与-HTTPS"><a href="#HTTP-与-HTTPS" class="headerlink" title="HTTP 与 HTTPS"></a>HTTP 与 HTTPS</h2><h3 id="HTTP-的不足"><a href="#HTTP-的不足" class="headerlink" title="HTTP 的不足"></a>HTTP 的不足</h3><ul><li>通信使用明文(不加密),内容可能会被窃听</li><li>不验证通信方的身份,因此有可能遭遇伪装</li><li>无法证明报文的完整性,所以有可能已遭篡改</li></ul><h3 id="HTTPS-介绍"><a href="#HTTPS-介绍" class="headerlink" title="HTTPS 介绍"></a>HTTPS 介绍</h3><p>HTTP 协议中没有加密机制,但可以通 过和 SSL (Secure Socket Layer, <strong>安全套接层</strong> )或 TLS (Transport Layer Security, <strong>安全层传输协议</strong>)的组合使用,加密 HTTP 的通信内容。属于通信加密，即在整个通信线路中加密。</p><pre class="line-numbers language-text"><code class="language-text">HTTP + 加密 + 认证 + 完整性保护 = HTTPS（HTTP Secure ）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5w5c2yjgaj20m80anwec.jpg" alt></p><p>HTTPS 采用<strong>共享密钥加密</strong>（对称）和<strong>公开密钥加密</strong>（非对称）两者并用的<strong>混合</strong>加密机制。若密钥能够实现安全交换,那么有可能会考虑仅使用公开密钥加密来通信。但是公开密钥加密与共享密钥加密相比,其处理速度要慢。</p><blockquote><p>所以应充分利用两者各自的优势, 将多种方法组合起来用于通信。 在<strong>交换密钥</strong>阶段使用<strong>公开密钥加密</strong>方式,之后的建立通信<strong>交换报文</strong>阶段 则使用<strong>共享密钥加密</strong>方式。</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5w5dby1hrj20m80fz0tb.jpg" alt></p><p><code>HTTPS</code>握手过程的简单描述如下：</p><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5w5dv56z8j20m80det9g.jpg" alt></p><ol><li><p>浏览器将自己支持的一套加密规则发送给网站。</p><pre><code>服务器获得浏览器公钥</code></pre></li><li><p>网站从中选出一组加密算法与 HASH 算法，并将自己的身份信息以证书的形式发回给浏览器。证书里面包含了网站地址，加密公钥，以及证书的颁发机构等信息。</p><pre><code>浏览器获得服务器公钥</code></pre></li><li><p>获得网站证书之后浏览器要做以下工作：</p><p>(a). 验证证书的合法性（颁发证书的机构是否合法，证书中包含的网站地址是否与正在访问的地址一致等），如果证书受信任，则浏览器栏里面会显示一个小锁头，否则会给出证书不受信的提示。</p><p>(b). 如果证书受信任，或者是用户接受了不受信的证书，浏览器会生成一串随机数的密码（接下来通信的密钥），并用证书中提供的公钥加密（共享密钥加密）。</p><p>(c) 使用约定好的 HASH 计算握手消息，并使用生成的随机数对消息进行加密，最后将之前生成的所有信息发送给网站。</p><pre><code>  浏览器验证 -&gt; 随机密码  服务器的公钥加密 -&gt; 通信的密钥  通信的密钥 -&gt; 服务器</code></pre></li><li><p>网站接收浏览器发来的数据之后要做以下的操作：</p><p>(a). 使用自己的私钥将信息解密取出密码，使用密码解密浏览器发来的握手消息，并验证 HASH 是否与浏览器发来的一致。</p><p>(b). 使用密码加密一段握手消息，发送给浏览器。</p><pre><code>  服务器用自己的私钥解出随机密码 -&gt; 用密码解密握手消息（共享密钥通信）-&gt; 验证HASH与浏览器是否一致（验证浏览器）</code></pre></li></ol><h3 id="HTTPS-的不足"><a href="#HTTPS-的不足" class="headerlink" title="HTTPS 的不足"></a>HTTPS 的不足</h3><ul><li>加密解密过程复杂，导致访问速度慢</li><li>加密需要认向证机构付费</li><li>整个页面的请求都要使用 HTTPS</li></ul><blockquote><p>参考地址：</p><p><a href="https://www.cnblogs.com/quan-coder/p/9277837.html" target="_blank" rel="noopener">https://www.cnblogs.com/quan-coder/p/9277837.html</a></p><p><a href="https://juejin.im/post/5ba65296f265da0ac8493503" target="_blank" rel="noopener">https://juejin.im/post/5ba65296f265da0ac8493503</a></p><p><a href="https://juejin.im/post/5d0de954e51d4556be5b3a6f" target="_blank" rel="noopener">https://juejin.im/post/5d0de954e51d4556be5b3a6f</a></p><p><a href="http://swiftlet.net/archives/1082" target="_blank" rel="noopener">http://swiftlet.net/archives/1082</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> HTTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-处理跨域请求</title>
      <link href="/2019/08/07/Laravel-%E5%A4%84%E7%90%86%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/"/>
      <url>/2019/08/07/Laravel-%E5%A4%84%E7%90%86%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>出于安全性的原因，浏览器会限制 Script 中的跨域请求。由于 XMLHttpRequest 遵循同源策略，所有使用 XMLHttpRequest 构造 HTTP 请求的应用只能访问自己的域名，如果需要构造跨域的请求，那么开发者需要配合浏览器做出一些允许跨域的配置。</p><p>在前后端分离的应用中，需要使用 CORS 完成跨域访问。在 CORS中 发送<strong>非简单请求</strong>（简单请求也就是 GET、POST、HEAD，非简单请求：PUT、DELETE等）时，前端会发一个请求方式为 OPTIONS 的预请求，前端只有收到服务器对这个 OPTIONS 请求的正确响应，才会发送正常的请求，否则将抛出跨域相关的错误。</p><h3 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h3><p>首先需要了解一下浏览器 <a href="https://baike.baidu.com/item/同源策略" target="_blank" rel="noopener">同源策略</a>，它是浏览器最核心也最基本的安全功能，同源的意思是，域名，协议，端口都相同。如果两个地址不同源，那么：</p><ol><li>Cookie、LocalStorage 和 IndexDB 无法相互读取；</li><li>DOM 无法相互获得；</li><li>AJAX 请求不能相互发送。</li></ol><h3 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h3><p>CORS 是一个 W3C 标准，全称是 “跨域资源共享”（Cross-origin resource sharing），就是其中一种用来解决浏览器跨域的问题方法。这种方法的关键是在于服务器，只要服务器端返回了合适的头信息（Header），前端 JS 发送 AJAX 的时候就能访问跨域的资源，代码和同源时一致，无需做任何修改，用户也不会有感知。</p><ul><li>响应的头部应该追加 Access-Control-Allow-Orign，用来表明哪些请求源被允许访问资源内容</li><li>浏览器会对请求源和响应中的值进行匹配验证</li><li>对于跨域的请求，浏览器会预发送一个非简单方式的请求，来判断给定资源是否准备接受跨域资源访问</li><li>服务端应用通过检查请求头部的 Orign 来判定请求是否跨域。</li></ul><h3 id="使用-laravel-扩展包处理跨域请求"><a href="#使用-laravel-扩展包处理跨域请求" class="headerlink" title="使用 laravel 扩展包处理跨域请求"></a>使用 laravel 扩展包处理跨域请求</h3><blockquote><p>barryvdh/laravel-cors：<a href="https://packagist.org/packages/barryvdh/laravel-cors" target="_blank" rel="noopener">https://packagist.org/packages/barryvdh/laravel-cors</a>  </p><p>他是一个已经写好了的扩展包，唯一的功能就是帮我们解决跨域请求问题，使用也非常的简单</p></blockquote><h3 id="1、composer-安装扩展包"><a href="#1、composer-安装扩展包" class="headerlink" title="1、composer 安装扩展包"></a>1、composer 安装扩展包</h3><pre><code>$ composer require barryvdh/laravel-cors</code></pre><blockquote><p>Laravel 5.5 及以上版本支持自动包发现，无需注册服务提供者，Laravel 5.4 及以下版本需要手动在 config/app.php 中注册服务提供者</p></blockquote><h3 id="2、发布配置文件"><a href="#2、发布配置文件" class="headerlink" title="2、发布配置文件"></a>2、发布配置文件</h3><pre><code>$ php artisan vendor:publish --provider=&quot;Barryvdh\Cors\ServiceProvider&quot;</code></pre><blockquote><p>在我们的 config 目录下面会生成一个 cors.php 的配置文件</p></blockquote><h3 id="3、注册全局中间或路由中间"><a href="#3、注册全局中间或路由中间" class="headerlink" title="3、注册全局中间或路由中间"></a>3、注册全局中间或路由中间</h3><blockquote><p><em>app/Http/Kernel.php</em> </p><p> 下面注册全局中间件或者路由中间件</p></blockquote><pre><code>    protected $middleware = [        \Barryvdh\Cors\HandleCors::class, # cors 跨域处理全局中间件    ];</code></pre><pre><code>    protected $routeMiddleware = [        &#39;cors&#39; =&gt; \Barryvdh\Cors\HandleCors::class, # cors 跨域处理路由中间件    ];</code></pre><h3 id="4、自定义配置"><a href="#4、自定义配置" class="headerlink" title="4、自定义配置"></a>4、自定义配置</h3><p>可以看到只要使用了中间件，所有的请求都是可以通过的，也就是说，barryvdh/laravel-cors 的默认配置都是允许所有请求，当然我们可以修改这些配置：</p><p><em>config/cors.php</em></p><pre><code>    &#39;supportsCredentials&#39; =&gt; false,    &#39;allowedOrigins&#39; =&gt; [&#39;*&#39;],    &#39;allowedOriginsPatterns&#39; =&gt; [],    &#39;allowedHeaders&#39; =&gt; [&#39;*&#39;],    &#39;allowedMethods&#39; =&gt; [&#39;*&#39;],    &#39;exposedHeaders&#39; =&gt; [],    &#39;maxAge&#39; =&gt; 0,</code></pre><p>分别对应如下配置：</p><table><thead><tr><th>配置</th><th>对应的 Header</th><th>说明</th></tr></thead><tbody><tr><td>supportsCredentials</td><td>Access-Control-Allow-Credentials</td><td>是否携带 Cookie</td></tr><tr><td>allowedOrigins</td><td>Access-Control-Allow-Origin</td><td>允许的域名</td></tr><tr><td>allowedOriginsPatterns</td><td>Access-Control-Allow-Origin</td><td>通过正则匹配允许的域名</td></tr><tr><td>allowedHeaders</td><td>Access-Control-Allow-Headers</td><td>允许的 Header</td></tr><tr><td>allowedMethods</td><td>Access-Control-Allow-Methods</td><td>允许的 HTTP 方法</td></tr><tr><td>exposedHeaders</td><td>Access-Control-Expose-Headers</td><td>除了 6 个基本的头字段，额外允许的字段</td></tr><tr><td>maxAge</td><td>Access-Control-Max-Age</td><td>预检请求的有效期</td></tr></tbody></table><blockquote><p>原文地址：</p><p><a href="https://learnku.com/courses/laravel-package/solving-cross-domain-problems-cors-barryvdhlaravel-cors/2026" target="_blank" rel="noopener">https://learnku.com/courses/laravel-package/solving-cross-domain-problems-cors-barryvdhlaravel-cors/2026</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel-扩展包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-Artisan 自定义命令</title>
      <link href="/2019/08/04/Laravel-%E8%87%AA%E5%AE%9A%E4%B9%89Artisan%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/08/04/Laravel-%E8%87%AA%E5%AE%9A%E4%B9%89Artisan%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>对于每一个开发人员来说，都有自己的一套习惯，而我就比较喜欢把一个项目分层开来。各司其职，自己是什么定位就做属于自己定位的事情。当然一个一个文件创建，那么太费事情也不太方便。Laravel 为我们提供了自定义 Artisan 命令的方案， 给我提供了很大的便捷以自定义的灵活！</p><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><pre class="line-numbers language-bash"><code class="language-bash">php artisan make:command AddService<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行该命令，将会在 <code>app\Console</code> 目录下生成 Commands 目录，同时在 <code>app\Console\Commands</code> 目录下生成 AddService.php 文件</p><h3 id="创建存根目录及模板文件"><a href="#创建存根目录及模板文件" class="headerlink" title="创建存根目录及模板文件"></a>创建存根目录及模板文件</h3><p>在 <code>app\Console\Commands</code> 目录下创建 Stubs 目录，然后在在 Stubs 目录下创建 services.stub </p><h3 id="编辑-services-stub"><a href="#编辑-services-stub" class="headerlink" title="编辑 services.stub"></a>编辑 services.stub</h3><pre><code>&lt;?php# 命名空间 自动获取等下添加的 Artisan 命令文件里面赋予的命名空间namespace DummyNamespace;[可以 use 命名空间]class DummyClass [可以编辑继承的父类]{    [可以定义各种方法，看自己需要]}</code></pre><h3 id="编辑-AddServices-php"><a href="#编辑-AddServices-php" class="headerlink" title="编辑 AddServices.php"></a>编辑 AddServices.php</h3><pre><code>&lt;?phpnamespace App\Console\Commands;use Illuminate\Console\GeneratorCommand;class AddServices extends GeneratorCommand{    /**     * 控制台命令名称     *     * @var string     */    protected $name = &#39;make:service&#39;;    /**     * 控制台命令描述     *     * @var string     */    protected $description = &#39;Create a new service  class&#39;;    /**     * 生成类的类型     *     * @var string     */    protected $type = &#39;Services&#39;;    /**     * 获取生成器的存根文件     *     * @return string     */    protected function getStub()    {        return __DIR__.&#39;/Stubs/services.stub&#39;;    }    /**     * 获取类的默认命名空间     *     * @param  string  $rootNamespace     * @return string     */    protected function getDefaultNamespace($rootNamespace)    {        # 这里是创建的命名空间，也是文件创建的目录地址，默认是 APP 下面        return $rootNamespace.&#39;\Http\Services&#39;;    }}</code></pre><h3 id="注册命令"><a href="#注册命令" class="headerlink" title="注册命令"></a>注册命令</h3><p>将以下内容添加到 Kernel.php 文件的 protected $commands = [] 属性数组中，使命令生效</p><pre><code>    protected $commands = [        //        \App\Console\Commands\AddServices::class    ];</code></pre><h3 id="测试命令"><a href="#测试命令" class="headerlink" title="测试命令"></a>测试命令</h3><pre><code>php artisan make:service TeachersService</code></pre><p><img src="https://i.loli.net/2019/09/09/MP8jLTvmNefycrt.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-生命周期</title>
      <link href="/2019/08/03/Laravel%E4%B9%8B%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
      <url>/2019/08/03/Laravel%E4%B9%8B%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>在「日常生活」中 使用任何工具时，如果理解了该工具的工作原理。那么用起来就会更加得心应手。应用开发也是如此，当你能真正懂得一个功能背后实现原理时，用起来会更加顺手，方便。</p><p>文档存在目的是为了让你更加清晰地了解 Laravel 框架是如何工作。通过框架进行全面了解，让一切都不再感觉很「神奇」。相信我，这有助于你更加清楚自己在做什么，对自己想做的事情更加胸有成竹。就算你不明白所有的术语，也不用因此失去信心！只要多一点尝试、学着如何运用，随着你浏览文档的其他部分，你的知识一定会因此增长。</p><h3 id="PHP-的生命周期"><a href="#PHP-的生命周期" class="headerlink" title="PHP 的生命周期"></a>PHP 的生命周期</h3><p>PHP 的运行模式分二中：CLI 命令行模式，WEB 服务模式</p><h3 id="1、模块初始化阶段（MINIT）"><a href="#1、模块初始化阶段（MINIT）" class="headerlink" title="1、模块初始化阶段（MINIT）"></a>1、模块初始化阶段（MINIT）</h3><p>在这个阶段 PHP 首先检测 php.ini 文件种定义的扩展模块并对其进行初始化和加载的工作，如：pdo、mysqld、redis 等等我们需要的功能模块都要在这个阶段完成</p><h3 id="2、请求初始化阶段（RINIT）"><a href="#2、请求初始化阶段（RINIT）" class="headerlink" title="2、请求初始化阶段（RINIT）"></a>2、请求初始化阶段（RINIT）</h3><p>初始化本次脚本请求所需要的变量以及变量值内容符号表，我们熟知的$_SESSION,$_COOKIE,$GLOBAL,$_GET,$_POST 等等超全局变量都会在这个阶段完成初始化的工作 </p><h3 id="3、执行指定的-PHP-脚本程序"><a href="#3、执行指定的-PHP-脚本程序" class="headerlink" title="3、执行指定的 PHP 脚本程序"></a>3、执行指定的 PHP 脚本程序</h3><p>PHP 程序执行阶段所有的框架都是在这里开始</p><h3 id="4、请求处理完成阶段"><a href="#4、请求处理完成阶段" class="headerlink" title="4、请求处理完成阶段"></a>4、请求处理完成阶段</h3><p>这是第二个阶段的逆操作，在这个阶段，完成所有请求相关变量和符号表的清理工作，如 unset（$_POST）,然后按顺序调用扩展模块的 RSHUTDOWN 方法，通知扩展做好关闭前的准备工作。</p><h3 id="5、模块关闭阶段"><a href="#5、模块关闭阶段" class="headerlink" title="5、模块关闭阶段"></a>5、模块关闭阶段</h3><p>这是阶段（1）的逆操作， PHP 调用每个扩展的 MSHUTDOWN 方法释放内存  </p><h3 id="看图说话："><a href="#看图说话：" class="headerlink" title="看图说话："></a>看图说话：</h3><img src="http://ww1.sinaimg.cn/large/e73160eely1g5mqp7a9laj20wy0c1mxz.jpg"><blockquote><p>注意：上面的这个流程5个阶段一直都在执行，他是属于 CLI 模式下 PHP 的生命周期。随着服务器软件的崛起，我们现目前所用的模式都是 WEB 模式，且 WEB 模式下性能高于 CLI 模式，请问下面看</p><p>WEB 模式下，阶段 1 和阶段 5 只会执行一次，以后的每次请求会重复 2 到 4 的生命周期阶段，因此无需每次都重复的初始化扩展模块，进而节省了系统运行资源，带来了效率的提升。至此，咱们先给 Laravel 做一个合理的定位，<strong>Laravel 生命周期只运行在第三个阶段</strong>。其实不光 Laravel 框架，只要是使用 WEB 模式对请求进行处理的，其他的 PHP 开发框架的生命周期也是在第三个阶段</p></blockquote><h3 id="单一入口与多入口"><a href="#单一入口与多入口" class="headerlink" title="单一入口与多入口"></a>单一入口与多入口</h3><p>Laravel 所有的请求入口都是 public/index.php，这是一个典型的单一入口，说到单一入口那就也得说说他的优势与劣势。既然要说单一入口，那么肯定也得了解一下多入口咯。</p><h3 id="多入口"><a href="#多入口" class="headerlink" title="多入口"></a>多入口</h3><p>通过访问不同的文件，完成用户的操作，我们最开始学习 PHP 时就是多入口。</p><pre><code>login.php 访问的登录页面index.php 访问的是首页game.php  访问的是游戏页面    </code></pre><h3 id="单一入口"><a href="#单一入口" class="headerlink" title="单一入口"></a>单一入口</h3><p>单一入口就是用一个文件处理所有 HTTP 的请求，这个文件一般来说我们都是 index.php 定义单一入口的访问的文件，所有的请求都得走 index.php</p><p>优势：单一入口相当于有一个守卫，对于安全检测非常好，也容易控制权限</p><p>劣势：由于所有 HTTP 请求都是针对 index.php 这样 URL 看起来不美观，而且对搜索引擎不太友好</p><p>但是没有关系，我们可以通过重写 URL 和采用 PATHINFO 访问，亦可解决劣势上的问题</p><pre><code>public  --- index.php</code></pre><p>看图理解</p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5mgz9b4c1j217m0e37ba.jpg"><h3 id="Laravel-的生命周期"><a href="#Laravel-的生命周期" class="headerlink" title="Laravel 的生命周期"></a>Laravel 的生命周期</h3><p>OK，现在我们跟随一个 “请求” 进入到 Laravel 内部，看看在 Laravel 框架内部，它将经历什么样的磨难，能否取得“大乘佛法三藏真经”。这个请求首先会进入 <strong>public\index.php</strong> 入口文件，所有的网络请求都会从这里进入，就像大家学习编程语言时接触的 <strong>main()</strong>  函数一样。 </p><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5nkvqhgnxj20xg0ec3yt.jpg" alt></p><pre><code> 1.使用 Composer 的自动加载功能，把所有需要使用的 PHP 文件添加到系统中以备调用  require __DIR__.&#39;/../vendor/autoload.php&#39;;  2.创建 Laravel 单例应用实例  $app = require_once __DIR__.&#39;/../bootstrap/app.php&#39;; 3.最关键的步骤，接受请求，对请求进行处理，返回请求处理的结果  $kernel = $app-&gt;make(Illuminate\Contracts\Http\Kernel::class);  $response = $kernel-&gt;handle(      $request = Illuminate\Http\Request::capture()  );  $response-&gt;send(); 4.请求结束，进行回调  $kernel-&gt;terminate($request, $response);</code></pre><p>人呐，就是很奇怪，我们都知道 Laravel 源代码蕴含的巨大价值，但是很多使用<br>Laravel 或者 PHP 作为吃饭工具的码农们以及学习者，很少有人真正的去研究一下 Laravel 源码，说到原因呢，无非就是 “懒” 和<br>“恐惧”，看似“懒”是主要原因，仔细想想的话，似乎不是那么回事儿， “恐惧” 才是，人如果无法克服自己的心里障碍，就很难行动起来，而 “懒”<br>通常只会导致拖延而已，一件事情如果你拖了太久，就不再只是简单的 “懒” 的问题了。“舒适区”<br>很舒服，但是舒适区面积会随着时间加速缩小，我们又能舒服多久。好了，不废话了，咱们开始看看代码吧，真的没多少，也没必要了解得太具体，太八股了也不好。</p><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5nl0e44vnj21000hjmy4.jpg" alt></p><p>用户的网络请求就是传递给 Laravel 应用创建的 <strong>HTTP 内核</strong> 进行网络请求处理，并把处理后的网络响应结果返回给用户的。网络请求就是在第三步被 <strong>HTTP $Kernal</strong> 对象的 handle 函数接收并完成处理的，handle函数接收的参数就是用户传递过来的网络请求 。由于上述 $kernel-&gt;handle() 是如此的重要，我们真的需要先跟它打打招呼交个朋友才行，那咱们就先走个回头路，看一看<br>网络请求 传递给 Laravel HTTP Kernel 之前，Laravel<br>都做了什么，虽然这部分内容不是网络请求生命周期走的流程，但是却是 Laravel 生命诞生的地方，咱们这次的专题是 Laravel<br>的生命周期，所以这部分内容还是要提一提的，到了这里很多朋友应该可以开始解开疑惑了，是的，我们这个专题其实涉及到了两个生命周期，一个是 <strong>网络请求的生命周期</strong>，一个就是 <strong>Laravel 生命周期</strong>。由于这两口子水乳交融，夫唱妇随，大部分时间他们都抱在一块儿羞羞，导致很多人把它当作一个东西了，而这也是为什么很多人会觉得网上的教程有些地方总觉得不对劲的原因。从上图中，咱们已经可以看出来，网络响应（Response）已经在第三步就已经返回给用户了。网络响应<br>返回后，Laravel 的生命周期并未结束，它还有一些善后工作需要处理，也就是第四步 <strong>“请求结束，进行回调”</strong> ，执行完了这一步之后，Laravel 才算是到了一个终结点。再贴一次代码吧，不少技术人员看不见代码就难受：</p><pre><code> 3. 最关键的步骤，接受请求，对请求进行处理，返回请求处理的结果    $kernel = $app-&gt;make(Illuminate\Contracts\Http\Kernel::class);  $response = $kernel-&gt;handle(      $request = Illuminate\Http\Request::capture()  );  $response-&gt;send(); 4. 请求结束，进行回调  $kernel-&gt;terminate($request, $response);</code></pre><p>本来写这篇文章是想着要不就不区分它们了吧，像网上其他教程那样当成一个东西写就行了，但是按照这种逻辑会让人产生混乱，不利用大家真正理解<br>Laravel 或者说其他网络开发框架，所以还是做了一个区分，先把网络请求的生命周期交代清楚了，咱们再去详细分析 Laravel<br>的生命周期，思路上就会更清晰明了些，有些东西八股一下还是有必要的。接下来，咱们就可以暂时把网络请求放一边，看一看 Laravel 的创建过程：</p><p><strong>1.  加载 Composer 生成的 autoload.php 自动加载文件</strong></p><p>就是加载初始化第三方依赖</p><p><strong>2.  创建 Laravel 应用容器对象 $app ( Service Container )</strong> </p><pre><code> $app = new Illuminate\Foundation\Application( dirname(__DIR__) );  $app-&gt;singleton(      Illuminate\Contracts\Http\Kernel::class,      App\Http\Kernel::class  );  $app-&gt;singleton(      Illuminate\Contracts\Console\Kernel::class,      App\Console\Kernel::class  );  $app-&gt;singleton(      Illuminate\Contracts\Debug\ExceptionHandler::class,      App\Exceptions\Handler::class  );  return $app;</code></pre><p>在这里基本也没啥难以理解的东西，创建了 $app 容器对象，绑定了 HTTP<br>Kernal 和 Console Kernel，分别用来处理 HTTP 网络请求和 CLI 请求（ 执行 php artisan<br>相关命令请求），还绑定了用来处理应用运行异常的调试处理器</p><pre><code># Laravel $app 创建时的构建函数  public function __construct($basePath = null)  {      if ($basePath) {          $this-&gt;setBasePath($basePath);      }      $this-&gt;registerBaseBindings();      $this-&gt;registerBaseServiceProviders();      $this-&gt;registerCoreContainerAliases();  }</code></pre><p>上面是 <strong>$app</strong> 实例创建的具体逻辑，我们看到也没啥难以理解的内容，无非就是设定路径，注册基础绑定信息，注册基础<br>Service Provider 和<br>Aliases，而做这些工作的意义就是可以帮助我们更方便的访问和获取项目目录中的文件信息，加载配置文件，加载自定义的类，加载Service，aliases<br>定义了如何把开发框架中最基础的服务注册到 <strong>Service Container</strong> 中，看了这部分代码，咱们就知道为啥 <strong>app(‘files’)</strong> 和 <strong>app (‘Illuminate\Filesystem\Filesystem’)</strong> 这两种使用方法都可以拿到 FileSystem 服务的原因了</p><pre><code> public function registerCoreContainerAliases()  {      foreach ([          &#39;app&#39;                  =&gt; [\Illuminate\Foundation\Application::class, \Illuminate\Contracts\Container\Container::class, \Illuminate\Contracts\Foundation\Application::class,  \Psr\Container\ContainerInterface::class],          &#39;auth&#39;                 =&gt; [\Illuminate\Auth\AuthManager::class, \Illuminate\Contracts\Auth\Factory::class],          &#39;auth.driver&#39;          =&gt; [\Illuminate\Contracts\Auth\Guard::class],          &#39;blade.compiler&#39;       =&gt; [\Illuminate\View\Compilers\BladeCompiler::class],          &#39;cache&#39;                =&gt; [\Illuminate\Cache\CacheManager::class, \Illuminate\Contracts\Cache\Factory::class],          &#39;files&#39;                =&gt; [\Illuminate\Filesystem\Filesystem::class],          &#39;filesystem&#39;           =&gt; [\Illuminate\Filesystem\FilesystemManager::class, \Illuminate\Contracts\Filesystem\Factory::class],                                                                                                          .                                                                                   &#39;view&#39;                 =&gt; [\Illuminate\View\Factory::class, \Illuminate\Contracts\View\Factory::class],      ] as $key =&gt; $aliases) {          foreach ($aliases as $alias) {              $this-&gt;alias($key, $alias);          }      }  }</code></pre><p>其实很多人之所以不愿意去看代码，有一个主要的原因就是没有理解<br>Service，Service Container，Service Provider，Facades，Contracts<br>这些核心概念以及他们之间的关联，如果你对 Laravel 核心概念不清楚，我也真的不建议你看源码，你会想把电脑砸掉的 ～</p><p><strong>3.  创建 Laravel HTTP Kernel 核心，接收用户的网络请求，处理并返回响应结果</strong></p><p>咱们终于又回来了，咱们先来看看创建 Kernel 的时候都做了啥，HTTP 内核继承自 Illuminate\Foundation\Http\Kernel 类，这个类中拥有三个核心成员变量</p><pre><code>  protected $app;  protected $router;  protected $bootstrappers = [      \Illuminate\Foundation\Bootstrap\LoadEnvironmentVariables::class,     # 加载 .env 中的配置信息      \Illuminate\Foundation\Bootstrap\LoadConfiguration::class,                # 加载 config 目录中所有配置文件的配置信息      \Illuminate\Foundation\Bootstrap\HandleExceptions::class,                 # 异常处理      \Illuminate\Foundation\Bootstrap\RegisterFacades::class,                # 注册门面      \Illuminate\Foundation\Bootstrap\RegisterProviders::class,               # 注册Service Providers      \Illuminate\Foundation\Bootstrap\BootProviders::class,                    # 注册启动器   ];</code></pre><p>这三个核心成员变量就是引导咱们更快理清 $app-&gt;kernel-&gt;handle(网络请求) 的最好导游：</p><p>$app 咱们已经说了足够多，就是应用容器，我们所有的工作都在这个容器中进行。</p><p>$router 路由对象，它提供路由相关的服务，帮助我们把网络请求分配给对应的路由进行逻辑处理，然后把处理的结果（网络响应）返回给我们，我们在 web.php 中定义的路由就是由它来管理的。</p><p>$bootstrappers 数组，这个数组中的任务项在网络请求被处理前运行，我们可以看到 <strong>环境检查，配置加载，异常处理，Facedes 门面注册，ServiceProvider 注册</strong>  等等任务都需要在网络请求被处理前被首先执行，而且这些任务是有前后顺序的，排在前面的会首先执行，这也很容易理解，因为不管是 Facades 还是  Service Providers 都是定义在 config 目录中的 app.php  文件中的，只有加载来配置之后才能注册门面和Service Providers。</p><p>然后咱们再来看看 $app-&gt;kernel 的构造函数，在这里咱们看到了一个脸熟的不能再熟的老朋友 — Middleware ，在 Kernel 以及它的基类 Illuminate\Foundation\Http\Kernel 中定义了一系列的 middlewares ，借助这些中间件，就可以完成对用户请求的过滤和安全检查等等功能。</p><pre><code>  public function __construct(Application $app, Router $router)  {      $this-&gt;app = $app;      $this-&gt;router = $router;      $router-&gt;middlewarePriority = $this-&gt;middlewarePriority;      foreach ($this-&gt;middlewareGroups as $key =&gt; $middleware) {          $router-&gt;middlewareGroup($key, $middleware);      }    foreach ($this-&gt;routeMiddleware as $key =&gt; $middleware) {          $router-&gt;aliasMiddleware($key, $middleware);      }  }</code></pre><p>至此咱们还是终于可以绕回来进入  $app-&gt;kernel-&gt;handle($request) 看一看它是如何处理网络请求的吧，下面这张图结合第一张图会更清楚一些，接下来的内容实在不想贴代码了：</p><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5nlwm23qsj20yh0n60u6.jpg" alt></p><p><strong>4.  结束请求，进行回调，终止 Laravel 应用，Laravel 到此也完成了它的历史使命。中间件中有一类的中间件，terminable middleware 的处理逻辑就是在这个阶段执行的。</strong></p><p>文章写到这里基本上就结束了，太多细节我们并没有涉及，要靠诸君亲力亲为了，我呢，还是那些话，不要在一开始的阶段就去学习<br>laravel 的生命周期，等你用 laravel<br>工作了一段时间，对它的使用方法和核心概念都清楚了之后再来学习，基本上就是一件很容易的事了。最后附上一张大图，梳理一下整个流程，也作为文章的结束吧。</p><p><img src="http://ww1.sinaimg.cn/large/e73160eely1g5nlxvljmaj21e00zc1kx.jpg" alt></p><blockquote><p>原文地址：</p><p><a href="http://www.coding10.com/book/laravel-lifecircle" target="_blank" rel="noopener">http://www.coding10.com/book/laravel-lifecircle</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扬帆启航</title>
      <link href="/2019/08/01/%E5%A4%9A%E5%A4%9A%E5%85%B3%E7%85%A7/"/>
      <url>/2019/08/01/%E5%A4%9A%E5%A4%9A%E5%85%B3%E7%85%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>在无意间查询一篇资料的时候进入到了[韦阳]的博客，第一眼就被他博客的 UI 界面吸引了，让我看起来觉得很舒服很爽！！！啊…爽！！！我本身也是比较喜欢写博文，不！我还没达不到自我写博文的时候，应该说我本身也比较喜欢记录学习。以前用过博客园、看云，但是总体上来说感觉都属于 “集中” 虽然可以自我美化，但是都没我第一眼看到[韦阳]博客的那种喜欢感觉。喜欢就走起，了解下来发现是基于 Github + Hexo 。耗时 2 天，终于搭建好个性化完成了，不容易啊！</p><p>在[韦阳]的博客首页推荐文章当中就有博客搭建的详细教程。</p><blockquote><p><a href="https://godweiyang.com/2018/04/13/hexo-blog/" target="_blank" rel="noopener">https://godweiyang.com/2018/04/13/hexo-blog/</a></p></blockquote><p>扬帆、启航</p><p><img src="https://cdn.jsdelivr.net/gh/daixianjin/MyImages/RWBTwtkD2MjPavh.jpg" alt></p>]]></content>
      
      
      <categories>
          
          <category> 启航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 启航 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
